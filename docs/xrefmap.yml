### YamlMime:XRefMap
sorted: true
references:
- uid: ALE.ETLBox
  name: ALE.ETLBox
  href: api/ALE.ETLBox.html
  commentId: N:ALE.ETLBox
  fullName: ALE.ETLBox
  nameWithType: ALE.ETLBox
- uid: ALE.ETLBox.ConnectionManager
  name: ALE.ETLBox.ConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.html
  commentId: N:ALE.ETLBox.ConnectionManager
  fullName: ALE.ETLBox.ConnectionManager
  nameWithType: ALE.ETLBox.ConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager
  name: AccessOdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager
  nameWithType: AccessOdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor
  name: AccessOdbcConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AccessOdbcConnectionManager()
  nameWithType: AccessOdbcConnectionManager.AccessOdbcConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  name: AccessOdbcConnectionManager(OdbcConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager__ctor_ALE_ETLBox_OdbcConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AccessOdbcConnectionManager(ALE.ETLBox.OdbcConnectionString)
  nameWithType: AccessOdbcConnectionManager.AccessOdbcConnectionManager(OdbcConnectionString)
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor*
  name: AccessOdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AccessOdbcConnectionManager
  nameWithType: AccessOdbcConnectionManager.AccessOdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert
  name: AfterBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_AfterBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert()
  nameWithType: AccessOdbcConnectionManager.AfterBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AfterBulkInsert
  nameWithType: AccessOdbcConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AlwaysUseSameConnection
  name: AlwaysUseSameConnection
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_AlwaysUseSameConnection
  commentId: P:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AlwaysUseSameConnection
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AlwaysUseSameConnection
  nameWithType: AccessOdbcConnectionManager.AlwaysUseSameConnection
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AlwaysUseSameConnection*
  name: AlwaysUseSameConnection
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_AlwaysUseSameConnection_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AlwaysUseSameConnection
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.AlwaysUseSameConnection
  nameWithType: AccessOdbcConnectionManager.AlwaysUseSameConnection
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert
  name: BeforeBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_BeforeBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert()
  nameWithType: AccessOdbcConnectionManager.BeforeBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BeforeBulkInsert
  nameWithType: AccessOdbcConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: AccessOdbcConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.BulkInsert
  nameWithType: AccessOdbcConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone()
  nameWithType: AccessOdbcConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.Clone
  nameWithType: AccessOdbcConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  name: DummyTableName
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_DummyTableName
  commentId: P:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  nameWithType: AccessOdbcConnectionManager.DummyTableName
- uid: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName*
  name: DummyTableName
  href: api/ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_AccessOdbcConnectionManager_DummyTableName_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AccessOdbcConnectionManager.DummyTableName
  nameWithType: AccessOdbcConnectionManager.DummyTableName
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager
  name: AdomdConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.AdomdConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager
  nameWithType: AdomdConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor
  name: AdomdConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AdomdConnectionManager()
  nameWithType: AdomdConnectionManager.AdomdConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor(ALE.ETLBox.ConnectionString)
  name: AdomdConnectionManager(ConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager__ctor_ALE_ETLBox_ConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor(ALE.ETLBox.ConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AdomdConnectionManager(ALE.ETLBox.ConnectionString)
  nameWithType: AdomdConnectionManager.AdomdConnectionManager(ConnectionString)
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor*
  name: AdomdConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AdomdConnectionManager
  nameWithType: AdomdConnectionManager.AdomdConnectionManager
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert
  name: AfterBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_AfterBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert()
  nameWithType: AdomdConnectionManager.AfterBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.AfterBulkInsert
  nameWithType: AdomdConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert
  name: BeforeBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_BeforeBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert()
  nameWithType: AdomdConnectionManager.BeforeBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BeforeBulkInsert
  nameWithType: AdomdConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: AdomdConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.BulkInsert
  nameWithType: AdomdConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone()
  nameWithType: AdomdConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.AdomdConnectionManager.html#ALE_ETLBox_ConnectionManager_AdomdConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.AdomdConnectionManager.Clone
  nameWithType: AdomdConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2
  name: DbConnectionManager<Connection, Command>
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html
  commentId: T:ALE.ETLBox.ConnectionManager.DbConnectionManager`2
  name.vb: DbConnectionManager(Of Connection, Command)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command)
  nameWithType: DbConnectionManager<Connection, Command>
  nameWithType.vb: DbConnectionManager(Of Connection, Command)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.#ctor
  name: DbConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.#ctor
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.DbConnectionManager()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).DbConnectionManager()
  nameWithType: DbConnectionManager<Connection, Command>.DbConnectionManager()
  nameWithType.vb: DbConnectionManager(Of Connection, Command).DbConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.#ctor(ALE.ETLBox.IDbConnectionString)
  name: DbConnectionManager(IDbConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2__ctor_ALE_ETLBox_IDbConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.#ctor(ALE.ETLBox.IDbConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.DbConnectionManager(ALE.ETLBox.IDbConnectionString)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).DbConnectionManager(ALE.ETLBox.IDbConnectionString)
  nameWithType: DbConnectionManager<Connection, Command>.DbConnectionManager(IDbConnectionString)
  nameWithType.vb: DbConnectionManager(Of Connection, Command).DbConnectionManager(IDbConnectionString)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.#ctor*
  name: DbConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.DbConnectionManager
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).DbConnectionManager
  nameWithType: DbConnectionManager<Connection, Command>.DbConnectionManager
  nameWithType.vb: DbConnectionManager(Of Connection, Command).DbConnectionManager
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.AfterBulkInsert
  name: AfterBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_AfterBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.AfterBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.AfterBulkInsert()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).AfterBulkInsert()
  nameWithType: DbConnectionManager<Connection, Command>.AfterBulkInsert()
  nameWithType.vb: DbConnectionManager(Of Connection, Command).AfterBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.AfterBulkInsert
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).AfterBulkInsert
  nameWithType: DbConnectionManager<Connection, Command>.AfterBulkInsert
  nameWithType.vb: DbConnectionManager(Of Connection, Command).AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.BeforeBulkInsert
  name: BeforeBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_BeforeBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.BeforeBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.BeforeBulkInsert()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).BeforeBulkInsert()
  nameWithType: DbConnectionManager<Connection, Command>.BeforeBulkInsert()
  nameWithType.vb: DbConnectionManager(Of Connection, Command).BeforeBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.BeforeBulkInsert
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).BeforeBulkInsert
  nameWithType: DbConnectionManager<Connection, Command>.BeforeBulkInsert
  nameWithType.vb: DbConnectionManager(Of Connection, Command).BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.BulkInsert(ALE.ETLBox.ITableData, System.String)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: DbConnectionManager<Connection, Command>.BulkInsert(ITableData, String)
  nameWithType.vb: DbConnectionManager(Of Connection, Command).BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.BulkInsert
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).BulkInsert
  nameWithType: DbConnectionManager<Connection, Command>.BulkInsert
  nameWithType.vb: DbConnectionManager(Of Connection, Command).BulkInsert
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Clone
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.Clone()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).Clone()
  nameWithType: DbConnectionManager<Connection, Command>.Clone()
  nameWithType.vb: DbConnectionManager(Of Connection, Command).Clone()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.Clone
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).Clone
  nameWithType: DbConnectionManager<Connection, Command>.Clone
  nameWithType.vb: DbConnectionManager(Of Connection, Command).Clone
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Close
  name: Close()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_Close
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Close
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.Close()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).Close()
  nameWithType: DbConnectionManager<Connection, Command>.Close()
  nameWithType.vb: DbConnectionManager(Of Connection, Command).Close()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Close*
  name: Close
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_Close_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Close
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.Close
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).Close
  nameWithType: DbConnectionManager<Connection, Command>.Close
  nameWithType.vb: DbConnectionManager(Of Connection, Command).Close
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ConnectionString
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_ConnectionString
  commentId: P:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ConnectionString
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.ConnectionString
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).ConnectionString
  nameWithType: DbConnectionManager<Connection, Command>.ConnectionString
  nameWithType.vb: DbConnectionManager(Of Connection, Command).ConnectionString
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ConnectionString*
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_ConnectionString_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ConnectionString
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.ConnectionString
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).ConnectionString
  nameWithType: DbConnectionManager<Connection, Command>.ConnectionString
  nameWithType.vb: DbConnectionManager(Of Connection, Command).ConnectionString
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.CreateCommand(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: CreateCommand(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_CreateCommand_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.CreateCommand(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: CreateCommand(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.CreateCommand(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).CreateCommand(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: DbConnectionManager<Connection, Command>.CreateCommand(String, IEnumerable<QueryParameter>)
  nameWithType.vb: DbConnectionManager(Of Connection, Command).CreateCommand(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.CreateCommand*
  name: CreateCommand
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_CreateCommand_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.CreateCommand
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.CreateCommand
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).CreateCommand
  nameWithType: DbConnectionManager<Connection, Command>.CreateCommand
  nameWithType.vb: DbConnectionManager(Of Connection, Command).CreateCommand
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Dispose
  name: Dispose()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_Dispose
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Dispose
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.Dispose()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).Dispose()
  nameWithType: DbConnectionManager<Connection, Command>.Dispose()
  nameWithType.vb: DbConnectionManager(Of Connection, Command).Dispose()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_Dispose_System_Boolean_
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Dispose(System.Boolean)
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.Dispose(System.Boolean)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).Dispose(System.Boolean)
  nameWithType: DbConnectionManager<Connection, Command>.Dispose(Boolean)
  nameWithType.vb: DbConnectionManager(Of Connection, Command).Dispose(Boolean)
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Dispose*
  name: Dispose
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_Dispose_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Dispose
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.Dispose
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).Dispose
  nameWithType: DbConnectionManager<Connection, Command>.Dispose
  nameWithType.vb: DbConnectionManager(Of Connection, Command).Dispose
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_ExecuteNonQuery_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: DbConnectionManager<Connection, Command>.ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  nameWithType.vb: DbConnectionManager(Of Connection, Command).ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.ExecuteNonQuery
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).ExecuteNonQuery
  nameWithType: DbConnectionManager<Connection, Command>.ExecuteNonQuery
  nameWithType.vb: DbConnectionManager(Of Connection, Command).ExecuteNonQuery
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteReader(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_ExecuteReader_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteReader(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.ExecuteReader(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).ExecuteReader(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: DbConnectionManager<Connection, Command>.ExecuteReader(String, IEnumerable<QueryParameter>)
  nameWithType.vb: DbConnectionManager(Of Connection, Command).ExecuteReader(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.ExecuteReader
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).ExecuteReader
  nameWithType: DbConnectionManager<Connection, Command>.ExecuteReader
  nameWithType.vb: DbConnectionManager(Of Connection, Command).ExecuteReader
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_ExecuteScalar_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.ExecuteScalar(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).ExecuteScalar(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: DbConnectionManager<Connection, Command>.ExecuteScalar(String, IEnumerable<QueryParameter>)
  nameWithType.vb: DbConnectionManager(Of Connection, Command).ExecuteScalar(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.ExecuteScalar
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).ExecuteScalar
  nameWithType: DbConnectionManager<Connection, Command>.ExecuteScalar
  nameWithType.vb: DbConnectionManager(Of Connection, Command).ExecuteScalar
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.MaxLoginAttempts
  name: MaxLoginAttempts
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_MaxLoginAttempts
  commentId: P:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.MaxLoginAttempts
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.MaxLoginAttempts
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).MaxLoginAttempts
  nameWithType: DbConnectionManager<Connection, Command>.MaxLoginAttempts
  nameWithType.vb: DbConnectionManager(Of Connection, Command).MaxLoginAttempts
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.MaxLoginAttempts*
  name: MaxLoginAttempts
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_MaxLoginAttempts_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.MaxLoginAttempts
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.MaxLoginAttempts
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).MaxLoginAttempts
  nameWithType: DbConnectionManager<Connection, Command>.MaxLoginAttempts
  nameWithType.vb: DbConnectionManager(Of Connection, Command).MaxLoginAttempts
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Open
  name: Open()
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_Open
  commentId: M:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Open
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.Open()
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).Open()
  nameWithType: DbConnectionManager<Connection, Command>.Open()
  nameWithType.vb: DbConnectionManager(Of Connection, Command).Open()
- uid: ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Open*
  name: Open
  href: api/ALE.ETLBox.ConnectionManager.DbConnectionManager-2.html#ALE_ETLBox_ConnectionManager_DbConnectionManager_2_Open_
  commentId: Overload:ALE.ETLBox.ConnectionManager.DbConnectionManager`2.Open
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.DbConnectionManager<Connection, Command>.Open
  fullName.vb: ALE.ETLBox.ConnectionManager.DbConnectionManager(Of Connection, Command).Open
  nameWithType: DbConnectionManager<Connection, Command>.Open
  nameWithType.vb: DbConnectionManager(Of Connection, Command).Open
- uid: ALE.ETLBox.ConnectionManager.FileConnectionManager
  name: FileConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.FileConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.FileConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.FileConnectionManager
  nameWithType: FileConnectionManager
- uid: ALE.ETLBox.ConnectionManager.FileConnectionManager.#ctor(System.String)
  name: FileConnectionManager(String)
  href: api/ALE.ETLBox.ConnectionManager.FileConnectionManager.html#ALE_ETLBox_ConnectionManager_FileConnectionManager__ctor_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.FileConnectionManager.#ctor(System.String)
  fullName: ALE.ETLBox.ConnectionManager.FileConnectionManager.FileConnectionManager(System.String)
  nameWithType: FileConnectionManager.FileConnectionManager(String)
- uid: ALE.ETLBox.ConnectionManager.FileConnectionManager.#ctor(System.String,System.String)
  name: FileConnectionManager(String, String)
  href: api/ALE.ETLBox.ConnectionManager.FileConnectionManager.html#ALE_ETLBox_ConnectionManager_FileConnectionManager__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.FileConnectionManager.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ConnectionManager.FileConnectionManager.FileConnectionManager(System.String, System.String)
  nameWithType: FileConnectionManager.FileConnectionManager(String, String)
- uid: ALE.ETLBox.ConnectionManager.FileConnectionManager.#ctor*
  name: FileConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.FileConnectionManager.html#ALE_ETLBox_ConnectionManager_FileConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.FileConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.FileConnectionManager.FileConnectionManager
  nameWithType: FileConnectionManager.FileConnectionManager
- uid: ALE.ETLBox.ConnectionManager.FileConnectionManager.FileExists
  name: FileExists
  href: api/ALE.ETLBox.ConnectionManager.FileConnectionManager.html#ALE_ETLBox_ConnectionManager_FileConnectionManager_FileExists
  commentId: P:ALE.ETLBox.ConnectionManager.FileConnectionManager.FileExists
  fullName: ALE.ETLBox.ConnectionManager.FileConnectionManager.FileExists
  nameWithType: FileConnectionManager.FileExists
- uid: ALE.ETLBox.ConnectionManager.FileConnectionManager.FileExists*
  name: FileExists
  href: api/ALE.ETLBox.ConnectionManager.FileConnectionManager.html#ALE_ETLBox_ConnectionManager_FileConnectionManager_FileExists_
  commentId: Overload:ALE.ETLBox.ConnectionManager.FileConnectionManager.FileExists
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.FileConnectionManager.FileExists
  nameWithType: FileConnectionManager.FileExists
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager
  name: IConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.IConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager
  nameWithType: IConnectionManager
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Close
  name: Close()
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Close
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.Close
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Close()
  nameWithType: IConnectionManager.Close()
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Close*
  name: Close
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Close_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.Close
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Close
  nameWithType: IConnectionManager.Close
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ConnectionString
  commentId: P:ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  nameWithType: IConnectionManager.ConnectionString
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString*
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_ConnectionString_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.ConnectionString
  nameWithType: IConnectionManager.ConnectionString
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Open
  name: Open()
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Open
  commentId: M:ALE.ETLBox.ConnectionManager.IConnectionManager.Open
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Open()
  nameWithType: IConnectionManager.Open()
- uid: ALE.ETLBox.ConnectionManager.IConnectionManager.Open*
  name: Open
  href: api/ALE.ETLBox.ConnectionManager.IConnectionManager.html#ALE_ETLBox_ConnectionManager_IConnectionManager_Open_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IConnectionManager.Open
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IConnectionManager.Open
  nameWithType: IConnectionManager.Open
- uid: ALE.ETLBox.ConnectionManager.ICubeConnectionManager
  name: ICubeConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.ICubeConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.ICubeConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.ICubeConnectionManager
  nameWithType: ICubeConnectionManager
- uid: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.ICubeConnectionManager.html#ALE_ETLBox_ConnectionManager_ICubeConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Clone()
  nameWithType: ICubeConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.ICubeConnectionManager.html#ALE_ETLBox_ConnectionManager_ICubeConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Clone
  nameWithType: ICubeConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.DropIfExists
  name: DropIfExists()
  href: api/ALE.ETLBox.ConnectionManager.ICubeConnectionManager.html#ALE_ETLBox_ConnectionManager_ICubeConnectionManager_DropIfExists
  commentId: M:ALE.ETLBox.ConnectionManager.ICubeConnectionManager.DropIfExists
  fullName: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.DropIfExists()
  nameWithType: ICubeConnectionManager.DropIfExists()
- uid: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.DropIfExists*
  name: DropIfExists
  href: api/ALE.ETLBox.ConnectionManager.ICubeConnectionManager.html#ALE_ETLBox_ConnectionManager_ICubeConnectionManager_DropIfExists_
  commentId: Overload:ALE.ETLBox.ConnectionManager.ICubeConnectionManager.DropIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.DropIfExists
  nameWithType: ICubeConnectionManager.DropIfExists
- uid: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Process
  name: Process()
  href: api/ALE.ETLBox.ConnectionManager.ICubeConnectionManager.html#ALE_ETLBox_ConnectionManager_ICubeConnectionManager_Process
  commentId: M:ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Process
  fullName: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Process()
  nameWithType: ICubeConnectionManager.Process()
- uid: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Process*
  name: Process
  href: api/ALE.ETLBox.ConnectionManager.ICubeConnectionManager.html#ALE_ETLBox_ConnectionManager_ICubeConnectionManager_Process_
  commentId: Overload:ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Process
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.ICubeConnectionManager.Process
  nameWithType: ICubeConnectionManager.Process
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager
  name: IDbConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.IDbConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager
  nameWithType: IDbConnectionManager
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.AfterBulkInsert
  name: AfterBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_AfterBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.IDbConnectionManager.AfterBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.AfterBulkInsert()
  nameWithType: IDbConnectionManager.AfterBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IDbConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.AfterBulkInsert
  nameWithType: IDbConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.BeforeBulkInsert
  name: BeforeBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_BeforeBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.IDbConnectionManager.BeforeBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.BeforeBulkInsert()
  nameWithType: IDbConnectionManager.BeforeBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IDbConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.BeforeBulkInsert
  nameWithType: IDbConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.IDbConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: IDbConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IDbConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.BulkInsert
  nameWithType: IDbConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.IDbConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.Clone()
  nameWithType: IDbConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IDbConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.Clone
  nameWithType: IDbConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_ExecuteNonQuery_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: IDbConnectionManager.ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  nameWithType.vb: IDbConnectionManager.ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteNonQuery
  nameWithType: IDbConnectionManager.ExecuteNonQuery
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteReader(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_ExecuteReader_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteReader(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteReader(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteReader(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: IDbConnectionManager.ExecuteReader(String, IEnumerable<QueryParameter>)
  nameWithType.vb: IDbConnectionManager.ExecuteReader(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteReader
  nameWithType: IDbConnectionManager.ExecuteReader
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_ExecuteScalar_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteScalar(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteScalar(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: IDbConnectionManager.ExecuteScalar(String, IEnumerable<QueryParameter>)
  nameWithType.vb: IDbConnectionManager.ExecuteScalar(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ConnectionManager.IDbConnectionManager.html#ALE_ETLBox_ConnectionManager_IDbConnectionManager_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.IDbConnectionManager.ExecuteScalar
  nameWithType: IDbConnectionManager.ExecuteScalar
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager
  name: OdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.OdbcConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager
  nameWithType: OdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor
  name: OdbcConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.OdbcConnectionManager()
  nameWithType: OdbcConnectionManager.OdbcConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  name: OdbcConnectionManager(OdbcConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager__ctor_ALE_ETLBox_OdbcConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor(ALE.ETLBox.OdbcConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.OdbcConnectionManager(ALE.ETLBox.OdbcConnectionString)
  nameWithType: OdbcConnectionManager.OdbcConnectionManager(OdbcConnectionString)
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor*
  name: OdbcConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.OdbcConnectionManager
  nameWithType: OdbcConnectionManager.OdbcConnectionManager
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert
  name: AfterBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_AfterBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert()
  nameWithType: OdbcConnectionManager.AfterBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.AfterBulkInsert
  nameWithType: OdbcConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert
  name: BeforeBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_BeforeBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert()
  nameWithType: OdbcConnectionManager.BeforeBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BeforeBulkInsert
  nameWithType: OdbcConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: OdbcConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.BulkInsert
  nameWithType: OdbcConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.Clone()
  nameWithType: OdbcConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.OdbcConnectionManager.html#ALE_ETLBox_ConnectionManager_OdbcConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.OdbcConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.OdbcConnectionManager.Clone
  nameWithType: OdbcConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager
  name: SMOConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.SMOConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager
  nameWithType: SMOConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.#ctor(ALE.ETLBox.ConnectionString)
  name: SMOConnectionManager(ConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager__ctor_ALE_ETLBox_ConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.#ctor(ALE.ETLBox.ConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.SMOConnectionManager(ALE.ETLBox.ConnectionString)
  nameWithType: SMOConnectionManager.SMOConnectionManager(ConnectionString)
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.#ctor*
  name: SMOConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.SMOConnectionManager
  nameWithType: SMOConnectionManager.SMOConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.AfterBulkInsert
  name: AfterBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_AfterBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.AfterBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.AfterBulkInsert()
  nameWithType: SMOConnectionManager.AfterBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.AfterBulkInsert
  nameWithType: SMOConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.BeforeBulkInsert
  name: BeforeBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_BeforeBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.BeforeBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.BeforeBulkInsert()
  nameWithType: SMOConnectionManager.BeforeBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.BeforeBulkInsert
  nameWithType: SMOConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: SMOConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.BulkInsert
  nameWithType: SMOConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Clone()
  nameWithType: SMOConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Clone
  nameWithType: SMOConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Close
  name: Close()
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_Close
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.Close
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Close()
  nameWithType: SMOConnectionManager.Close()
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Close*
  name: Close
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_Close_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.Close
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Close
  nameWithType: SMOConnectionManager.Close
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ConnectionString
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_ConnectionString
  commentId: P:ALE.ETLBox.ConnectionManager.SMOConnectionManager.ConnectionString
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ConnectionString
  nameWithType: SMOConnectionManager.ConnectionString
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ConnectionString*
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_ConnectionString_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.ConnectionString
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ConnectionString
  nameWithType: SMOConnectionManager.ConnectionString
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Dispose
  name: Dispose()
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_Dispose
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.Dispose
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Dispose()
  nameWithType: SMOConnectionManager.Dispose()
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_Dispose_System_Boolean_
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.Dispose(System.Boolean)
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Dispose(System.Boolean)
  nameWithType: SMOConnectionManager.Dispose(Boolean)
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Dispose*
  name: Dispose
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_Dispose_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.Dispose
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Dispose
  nameWithType: SMOConnectionManager.Dispose
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_ExecuteNonQuery_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteNonQuery(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteNonQuery(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SMOConnectionManager.ExecuteNonQuery(String, IEnumerable<QueryParameter>)
  nameWithType.vb: SMOConnectionManager.ExecuteNonQuery(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteNonQuery
  nameWithType: SMOConnectionManager.ExecuteNonQuery
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteReader(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_ExecuteReader_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteReader(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteReader(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteReader(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteReader(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SMOConnectionManager.ExecuteReader(String, IEnumerable<QueryParameter>)
  nameWithType.vb: SMOConnectionManager.ExecuteReader(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteReader
  nameWithType: SMOConnectionManager.ExecuteReader
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar(String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_ExecuteScalar_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteScalar(System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteScalar(System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteScalar(System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SMOConnectionManager.ExecuteScalar(String, IEnumerable<QueryParameter>)
  nameWithType.vb: SMOConnectionManager.ExecuteScalar(String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.ExecuteScalar
  nameWithType: SMOConnectionManager.ExecuteScalar
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.IsConnectionOpen
  name: IsConnectionOpen
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_IsConnectionOpen
  commentId: P:ALE.ETLBox.ConnectionManager.SMOConnectionManager.IsConnectionOpen
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.IsConnectionOpen
  nameWithType: SMOConnectionManager.IsConnectionOpen
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.IsConnectionOpen*
  name: IsConnectionOpen
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_IsConnectionOpen_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.IsConnectionOpen
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.IsConnectionOpen
  nameWithType: SMOConnectionManager.IsConnectionOpen
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Open
  name: Open()
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_Open
  commentId: M:ALE.ETLBox.ConnectionManager.SMOConnectionManager.Open
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Open()
  nameWithType: SMOConnectionManager.Open()
- uid: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Open*
  name: Open
  href: api/ALE.ETLBox.ConnectionManager.SMOConnectionManager.html#ALE_ETLBox_ConnectionManager_SMOConnectionManager_Open_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SMOConnectionManager.Open
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SMOConnectionManager.Open
  nameWithType: SMOConnectionManager.Open
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager
  name: SqlConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html
  commentId: T:ALE.ETLBox.ConnectionManager.SqlConnectionManager
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager
  nameWithType: SqlConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor
  name: SqlConnectionManager()
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager__ctor
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.SqlConnectionManager()
  nameWithType: SqlConnectionManager.SqlConnectionManager()
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor(ALE.ETLBox.ConnectionString)
  name: SqlConnectionManager(ConnectionString)
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager__ctor_ALE_ETLBox_ConnectionString_
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor(ALE.ETLBox.ConnectionString)
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.SqlConnectionManager(ALE.ETLBox.ConnectionString)
  nameWithType: SqlConnectionManager.SqlConnectionManager(ConnectionString)
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor*
  name: SqlConnectionManager
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.SqlConnectionManager
  nameWithType: SqlConnectionManager.SqlConnectionManager
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert
  name: AfterBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_AfterBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert()
  nameWithType: SqlConnectionManager.AfterBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert*
  name: AfterBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_AfterBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.AfterBulkInsert
  nameWithType: SqlConnectionManager.AfterBulkInsert
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert
  name: BeforeBulkInsert()
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_BeforeBulkInsert
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert()
  nameWithType: SqlConnectionManager.BeforeBulkInsert()
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert*
  name: BeforeBulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_BeforeBulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BeforeBulkInsert
  nameWithType: SqlConnectionManager.BeforeBulkInsert
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: SqlConnectionManager.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_BulkInsert_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.BulkInsert
  nameWithType: SqlConnectionManager.BulkInsert
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone
  name: Clone()
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_Clone
  commentId: M:ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone()
  nameWithType: SqlConnectionManager.Clone()
- uid: ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone*
  name: Clone
  href: api/ALE.ETLBox.ConnectionManager.SqlConnectionManager.html#ALE_ETLBox_ConnectionManager_SqlConnectionManager_Clone_
  commentId: Overload:ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionManager.SqlConnectionManager.Clone
  nameWithType: SqlConnectionManager.Clone
- uid: ALE.ETLBox.ConnectionString
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionString.html
  commentId: T:ALE.ETLBox.ConnectionString
  fullName: ALE.ETLBox.ConnectionString
  nameWithType: ConnectionString
- uid: ALE.ETLBox.ConnectionString.#ctor
  name: ConnectionString()
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString__ctor
  commentId: M:ALE.ETLBox.ConnectionString.#ctor
  fullName: ALE.ETLBox.ConnectionString.ConnectionString()
  nameWithType: ConnectionString.ConnectionString()
- uid: ALE.ETLBox.ConnectionString.#ctor(System.String)
  name: ConnectionString(String)
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString__ctor_System_String_
  commentId: M:ALE.ETLBox.ConnectionString.#ctor(System.String)
  fullName: ALE.ETLBox.ConnectionString.ConnectionString(System.String)
  nameWithType: ConnectionString.ConnectionString(String)
- uid: ALE.ETLBox.ConnectionString.#ctor*
  name: ConnectionString
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString__ctor_
  commentId: Overload:ALE.ETLBox.ConnectionString.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionString.ConnectionString
  nameWithType: ConnectionString.ConnectionString
- uid: ALE.ETLBox.ConnectionString.GetConnectionWithoutCatalog
  name: GetConnectionWithoutCatalog()
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_GetConnectionWithoutCatalog
  commentId: M:ALE.ETLBox.ConnectionString.GetConnectionWithoutCatalog
  fullName: ALE.ETLBox.ConnectionString.GetConnectionWithoutCatalog()
  nameWithType: ConnectionString.GetConnectionWithoutCatalog()
- uid: ALE.ETLBox.ConnectionString.GetConnectionWithoutCatalog*
  name: GetConnectionWithoutCatalog
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_GetConnectionWithoutCatalog_
  commentId: Overload:ALE.ETLBox.ConnectionString.GetConnectionWithoutCatalog
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionString.GetConnectionWithoutCatalog
  nameWithType: ConnectionString.GetConnectionWithoutCatalog
- uid: ALE.ETLBox.ConnectionString.GetMasterConnection
  name: GetMasterConnection()
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_GetMasterConnection
  commentId: M:ALE.ETLBox.ConnectionString.GetMasterConnection
  fullName: ALE.ETLBox.ConnectionString.GetMasterConnection()
  nameWithType: ConnectionString.GetMasterConnection()
- uid: ALE.ETLBox.ConnectionString.GetMasterConnection*
  name: GetMasterConnection
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_GetMasterConnection_
  commentId: Overload:ALE.ETLBox.ConnectionString.GetMasterConnection
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionString.GetMasterConnection
  nameWithType: ConnectionString.GetMasterConnection
- uid: ALE.ETLBox.ConnectionString.op_Implicit(System.String)~ALE.ETLBox.ConnectionString
  name: Implicit(String to ConnectionString)
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_op_Implicit_System_String__ALE_ETLBox_ConnectionString
  commentId: M:ALE.ETLBox.ConnectionString.op_Implicit(System.String)~ALE.ETLBox.ConnectionString
  name.vb: Widening(String to ConnectionString)
  fullName: ALE.ETLBox.ConnectionString.Implicit(System.String to ALE.ETLBox.ConnectionString)
  fullName.vb: ALE.ETLBox.ConnectionString.Widening(System.String to ALE.ETLBox.ConnectionString)
  nameWithType: ConnectionString.Implicit(String to ConnectionString)
  nameWithType.vb: ConnectionString.Widening(String to ConnectionString)
- uid: ALE.ETLBox.ConnectionString.op_Implicit*
  name: Implicit
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_op_Implicit_
  commentId: Overload:ALE.ETLBox.ConnectionString.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: ALE.ETLBox.ConnectionString.Implicit
  fullName.vb: ALE.ETLBox.ConnectionString.Widening
  nameWithType: ConnectionString.Implicit
  nameWithType.vb: ConnectionString.Widening
- uid: ALE.ETLBox.ConnectionString.SqlConnectionStringBuilder
  name: SqlConnectionStringBuilder
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_SqlConnectionStringBuilder
  commentId: P:ALE.ETLBox.ConnectionString.SqlConnectionStringBuilder
  fullName: ALE.ETLBox.ConnectionString.SqlConnectionStringBuilder
  nameWithType: ConnectionString.SqlConnectionStringBuilder
- uid: ALE.ETLBox.ConnectionString.SqlConnectionStringBuilder*
  name: SqlConnectionStringBuilder
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_SqlConnectionStringBuilder_
  commentId: Overload:ALE.ETLBox.ConnectionString.SqlConnectionStringBuilder
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionString.SqlConnectionStringBuilder
  nameWithType: ConnectionString.SqlConnectionStringBuilder
- uid: ALE.ETLBox.ConnectionString.ToString
  name: ToString()
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_ToString
  commentId: M:ALE.ETLBox.ConnectionString.ToString
  fullName: ALE.ETLBox.ConnectionString.ToString()
  nameWithType: ConnectionString.ToString()
- uid: ALE.ETLBox.ConnectionString.ToString*
  name: ToString
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_ToString_
  commentId: Overload:ALE.ETLBox.ConnectionString.ToString
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionString.ToString
  nameWithType: ConnectionString.ToString
- uid: ALE.ETLBox.ConnectionString.Value
  name: Value
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_Value
  commentId: P:ALE.ETLBox.ConnectionString.Value
  fullName: ALE.ETLBox.ConnectionString.Value
  nameWithType: ConnectionString.Value
- uid: ALE.ETLBox.ConnectionString.Value*
  name: Value
  href: api/ALE.ETLBox.ConnectionString.html#ALE_ETLBox_ConnectionString_Value_
  commentId: Overload:ALE.ETLBox.ConnectionString.Value
  isSpec: "True"
  fullName: ALE.ETLBox.ConnectionString.Value
  nameWithType: ConnectionString.Value
- uid: ALE.ETLBox.ControlFlow
  name: ALE.ETLBox.ControlFlow
  href: api/ALE.ETLBox.ControlFlow.html
  commentId: N:ALE.ETLBox.ControlFlow
  fullName: ALE.ETLBox.ControlFlow
  nameWithType: ALE.ETLBox.ControlFlow
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask
  name: AddFileGroupTask
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html
  commentId: T:ALE.ETLBox.ControlFlow.AddFileGroupTask
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask
  nameWithType: AddFileGroupTask
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.#ctor
  name: AddFileGroupTask()
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.AddFileGroupTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroupTask()
  nameWithType: AddFileGroupTask.AddFileGroupTask()
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.#ctor(System.String,System.String)
  name: AddFileGroupTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.AddFileGroupTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroupTask(System.String, System.String)
  nameWithType: AddFileGroupTask.AddFileGroupTask(String, String)
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.#ctor(System.String,System.String,System.String,System.String,System.Boolean)
  name: AddFileGroupTask(String, String, String, String, Boolean)
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask__ctor_System_String_System_String_System_String_System_String_System_Boolean_
  commentId: M:ALE.ETLBox.ControlFlow.AddFileGroupTask.#ctor(System.String,System.String,System.String,System.String,System.Boolean)
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroupTask(System.String, System.String, System.String, System.String, System.Boolean)
  nameWithType: AddFileGroupTask.AddFileGroupTask(String, String, String, String, Boolean)
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.#ctor*
  name: AddFileGroupTask
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroupTask
  nameWithType: AddFileGroupTask.AddFileGroupTask
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroup(System.String,System.String)
  name: AddFileGroup(String, String)
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_AddFileGroup_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroup(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroup(System.String, System.String)
  nameWithType: AddFileGroupTask.AddFileGroup(String, String)
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroup(System.String,System.String,System.String,System.String,System.Boolean)
  name: AddFileGroup(String, String, String, String, Boolean)
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_AddFileGroup_System_String_System_String_System_String_System_String_System_Boolean_
  commentId: M:ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroup(System.String,System.String,System.String,System.String,System.Boolean)
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroup(System.String, System.String, System.String, System.String, System.Boolean)
  nameWithType: AddFileGroupTask.AddFileGroup(String, String, String, String, Boolean)
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroup*
  name: AddFileGroup
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_AddFileGroup_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroup
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.AddFileGroup
  nameWithType: AddFileGroupTask.AddFileGroup
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.DatabaseName
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_DatabaseName
  commentId: P:ALE.ETLBox.ControlFlow.AddFileGroupTask.DatabaseName
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.DatabaseName
  nameWithType: AddFileGroupTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.DatabaseName*
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_DatabaseName_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.DatabaseName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.DatabaseName
  nameWithType: AddFileGroupTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.AddFileGroupTask.Execute
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.Execute()
  nameWithType: AddFileGroupTask.Execute()
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.Execute
  nameWithType: AddFileGroupTask.Execute
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.FileGroupName
  name: FileGroupName
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_FileGroupName
  commentId: P:ALE.ETLBox.ControlFlow.AddFileGroupTask.FileGroupName
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.FileGroupName
  nameWithType: AddFileGroupTask.FileGroupName
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.FileGroupName*
  name: FileGroupName
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_FileGroupName_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.FileGroupName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.FileGroupName
  nameWithType: AddFileGroupTask.FileGroupName
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.Filegrowth
  name: Filegrowth
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_Filegrowth
  commentId: P:ALE.ETLBox.ControlFlow.AddFileGroupTask.Filegrowth
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.Filegrowth
  nameWithType: AddFileGroupTask.Filegrowth
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.Filegrowth*
  name: Filegrowth
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_Filegrowth_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.Filegrowth
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.Filegrowth
  nameWithType: AddFileGroupTask.Filegrowth
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.IsDefaultFileGroup
  name: IsDefaultFileGroup
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_IsDefaultFileGroup
  commentId: P:ALE.ETLBox.ControlFlow.AddFileGroupTask.IsDefaultFileGroup
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.IsDefaultFileGroup
  nameWithType: AddFileGroupTask.IsDefaultFileGroup
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.IsDefaultFileGroup*
  name: IsDefaultFileGroup
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_IsDefaultFileGroup_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.IsDefaultFileGroup
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.IsDefaultFileGroup
  nameWithType: AddFileGroupTask.IsDefaultFileGroup
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.Size
  name: Size
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_Size
  commentId: P:ALE.ETLBox.ControlFlow.AddFileGroupTask.Size
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.Size
  nameWithType: AddFileGroupTask.Size
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.Size*
  name: Size
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_Size_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.Size
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.Size
  nameWithType: AddFileGroupTask.Size
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.AddFileGroupTask.Sql
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.Sql
  nameWithType: AddFileGroupTask.Sql
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.Sql
  nameWithType: AddFileGroupTask.Sql
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskName
  nameWithType: AddFileGroupTask.TaskName
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskName
  nameWithType: AddFileGroupTask.TaskName
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskType
  nameWithType: AddFileGroupTask.TaskType
- uid: ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.AddFileGroupTask.html#ALE_ETLBox_ControlFlow_AddFileGroupTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.AddFileGroupTask.TaskType
  nameWithType: AddFileGroupTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask
  name: CalculateDatabaseHashTask
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask
  nameWithType: CalculateDatabaseHashTask
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.#ctor
  name: CalculateDatabaseHashTask()
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.CalculateDatabaseHashTask()
  nameWithType: CalculateDatabaseHashTask.CalculateDatabaseHashTask()
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.#ctor(System.Collections.Generic.List{System.String})
  name: CalculateDatabaseHashTask(List<String>)
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask__ctor_System_Collections_Generic_List_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.#ctor(System.Collections.Generic.List{System.String})
  name.vb: CalculateDatabaseHashTask(List(Of String))
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.CalculateDatabaseHashTask(System.Collections.Generic.List<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.CalculateDatabaseHashTask(System.Collections.Generic.List(Of System.String))
  nameWithType: CalculateDatabaseHashTask.CalculateDatabaseHashTask(List<String>)
  nameWithType.vb: CalculateDatabaseHashTask.CalculateDatabaseHashTask(List(Of String))
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.#ctor*
  name: CalculateDatabaseHashTask
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.CalculateDatabaseHashTask
  nameWithType: CalculateDatabaseHashTask.CalculateDatabaseHashTask
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate
  name: Calculate()
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_Calculate
  commentId: M:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate()
  nameWithType: CalculateDatabaseHashTask.Calculate()
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate(System.Collections.Generic.List{System.String})
  name: Calculate(List<String>)
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_Calculate_System_Collections_Generic_List_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate(System.Collections.Generic.List{System.String})
  name.vb: Calculate(List(Of String))
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate(System.Collections.Generic.List<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate(System.Collections.Generic.List(Of System.String))
  nameWithType: CalculateDatabaseHashTask.Calculate(List<String>)
  nameWithType.vb: CalculateDatabaseHashTask.Calculate(List(Of String))
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate*
  name: Calculate
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_Calculate_
  commentId: Overload:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Calculate
  nameWithType: CalculateDatabaseHashTask.Calculate
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.DatabaseHash
  name: DatabaseHash
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_DatabaseHash
  commentId: P:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.DatabaseHash
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.DatabaseHash
  nameWithType: CalculateDatabaseHashTask.DatabaseHash
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.DatabaseHash*
  name: DatabaseHash
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_DatabaseHash_
  commentId: Overload:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.DatabaseHash
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.DatabaseHash
  nameWithType: CalculateDatabaseHashTask.DatabaseHash
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Execute()
  nameWithType: CalculateDatabaseHashTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Execute
  nameWithType: CalculateDatabaseHashTask.Execute
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.SchemaNames
  name: SchemaNames
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_SchemaNames
  commentId: P:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.SchemaNames
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.SchemaNames
  nameWithType: CalculateDatabaseHashTask.SchemaNames
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.SchemaNames*
  name: SchemaNames
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_SchemaNames_
  commentId: Overload:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.SchemaNames
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.SchemaNames
  nameWithType: CalculateDatabaseHashTask.SchemaNames
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Sql
  nameWithType: CalculateDatabaseHashTask.Sql
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.Sql
  nameWithType: CalculateDatabaseHashTask.Sql
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskName
  nameWithType: CalculateDatabaseHashTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskName
  nameWithType: CalculateDatabaseHashTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskType
  nameWithType: CalculateDatabaseHashTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.html#ALE_ETLBox_ControlFlow_CalculateDatabaseHashTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CalculateDatabaseHashTask.TaskType
  nameWithType: CalculateDatabaseHashTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask
  name: CleanUpSchemaTask
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CleanUpSchemaTask
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask
  nameWithType: CleanUpSchemaTask
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.#ctor
  name: CleanUpSchemaTask()
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.CleanUpSchemaTask()
  nameWithType: CleanUpSchemaTask.CleanUpSchemaTask()
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.#ctor(System.String)
  name: CleanUpSchemaTask(String)
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.CleanUpSchemaTask(System.String)
  nameWithType: CleanUpSchemaTask.CleanUpSchemaTask(String)
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.#ctor*
  name: CleanUpSchemaTask
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.CleanUpSchemaTask
  nameWithType: CleanUpSchemaTask.CleanUpSchemaTask
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.CleanUp(System.String)
  name: CleanUp(String)
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_CleanUp_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.CleanUp(System.String)
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.CleanUp(System.String)
  nameWithType: CleanUpSchemaTask.CleanUp(String)
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.CleanUp*
  name: CleanUp
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_CleanUp_
  commentId: Overload:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.CleanUp
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.CleanUp
  nameWithType: CleanUpSchemaTask.CleanUp
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Execute()
  nameWithType: CleanUpSchemaTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Execute
  nameWithType: CleanUpSchemaTask.Execute
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.SchemaName
  name: SchemaName
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_SchemaName
  commentId: P:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.SchemaName
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.SchemaName
  nameWithType: CleanUpSchemaTask.SchemaName
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.SchemaName*
  name: SchemaName
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_SchemaName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.SchemaName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.SchemaName
  nameWithType: CleanUpSchemaTask.SchemaName
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Sql
  nameWithType: CleanUpSchemaTask.Sql
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.Sql
  nameWithType: CleanUpSchemaTask.Sql
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskName
  nameWithType: CleanUpSchemaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskName
  nameWithType: CleanUpSchemaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskType
  nameWithType: CleanUpSchemaTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CleanUpSchemaTask.html#ALE_ETLBox_ControlFlow_CleanUpSchemaTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CleanUpSchemaTask.TaskType
  nameWithType: CleanUpSchemaTask.TaskType
- uid: ALE.ETLBox.ControlFlow.ControlFlow
  name: ControlFlow
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html
  commentId: T:ALE.ETLBox.ControlFlow.ControlFlow
  fullName: ALE.ETLBox.ControlFlow.ControlFlow
  nameWithType: ControlFlow
- uid: ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings
  name: ClearSettings()
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_ClearSettings
  commentId: M:ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings()
  nameWithType: ControlFlow.ClearSettings()
- uid: ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings*
  name: ClearSettings
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_ClearSettings_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.ClearSettings
  nameWithType: ControlFlow.ClearSettings
- uid: ALE.ETLBox.ControlFlow.ControlFlow.CurrentDbConnection
  name: CurrentDbConnection
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_CurrentDbConnection
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.CurrentDbConnection
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.CurrentDbConnection
  nameWithType: ControlFlow.CurrentDbConnection
- uid: ALE.ETLBox.ControlFlow.ControlFlow.CurrentDbConnection*
  name: CurrentDbConnection
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_CurrentDbConnection_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.CurrentDbConnection
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.CurrentDbConnection
  nameWithType: ControlFlow.CurrentDbConnection
- uid: ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  name: CurrentLoadProcess
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_CurrentLoadProcess
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  nameWithType: ControlFlow.CurrentLoadProcess
- uid: ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess*
  name: CurrentLoadProcess
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_CurrentLoadProcess_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.CurrentLoadProcess
  nameWithType: ControlFlow.CurrentLoadProcess
- uid: ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  name: DisableAllLogging
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_DisableAllLogging
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  nameWithType: ControlFlow.DisableAllLogging
- uid: ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging*
  name: DisableAllLogging
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_DisableAllLogging_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.DisableAllLogging
  nameWithType: ControlFlow.DisableAllLogging
- uid: ALE.ETLBox.ControlFlow.ControlFlow.SetLoggingDatabase(ALE.ETLBox.ConnectionManager.IConnectionManager)
  name: SetLoggingDatabase(IConnectionManager)
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_SetLoggingDatabase_ALE_ETLBox_ConnectionManager_IConnectionManager_
  commentId: M:ALE.ETLBox.ControlFlow.ControlFlow.SetLoggingDatabase(ALE.ETLBox.ConnectionManager.IConnectionManager)
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.SetLoggingDatabase(ALE.ETLBox.ConnectionManager.IConnectionManager)
  nameWithType: ControlFlow.SetLoggingDatabase(IConnectionManager)
- uid: ALE.ETLBox.ControlFlow.ControlFlow.SetLoggingDatabase*
  name: SetLoggingDatabase
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_SetLoggingDatabase_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.SetLoggingDatabase
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.SetLoggingDatabase
  nameWithType: ControlFlow.SetLoggingDatabase
- uid: ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  name: STAGE
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_STAGE
  commentId: P:ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  nameWithType: ControlFlow.STAGE
- uid: ALE.ETLBox.ControlFlow.ControlFlow.STAGE*
  name: STAGE
  href: api/ALE.ETLBox.ControlFlow.ControlFlow.html#ALE_ETLBox_ControlFlow_ControlFlow_STAGE_
  commentId: Overload:ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.ControlFlow.STAGE
  nameWithType: ControlFlow.STAGE
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask
  name: CreateDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateDatabaseTask
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask
  nameWithType: CreateDatabaseTask
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor
  name: CreateDatabaseTask()
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.CreateDatabaseTask()
  nameWithType: CreateDatabaseTask.CreateDatabaseTask()
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String)
  name: CreateDatabaseTask(String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.CreateDatabaseTask(System.String)
  nameWithType: CreateDatabaseTask.CreateDatabaseTask(String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String,ALE.ETLBox.ControlFlow.RecoveryModel)
  name: CreateDatabaseTask(String, RecoveryModel)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask__ctor_System_String_ALE_ETLBox_ControlFlow_RecoveryModel_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String,ALE.ETLBox.ControlFlow.RecoveryModel)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.CreateDatabaseTask(System.String, ALE.ETLBox.ControlFlow.RecoveryModel)
  nameWithType: CreateDatabaseTask.CreateDatabaseTask(String, RecoveryModel)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String,ALE.ETLBox.ControlFlow.RecoveryModel,System.String)
  name: CreateDatabaseTask(String, RecoveryModel, String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask__ctor_System_String_ALE_ETLBox_ControlFlow_RecoveryModel_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor(System.String,ALE.ETLBox.ControlFlow.RecoveryModel,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.CreateDatabaseTask(System.String, ALE.ETLBox.ControlFlow.RecoveryModel, System.String)
  nameWithType: CreateDatabaseTask.CreateDatabaseTask(String, RecoveryModel, String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor*
  name: CreateDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.CreateDatabaseTask
  nameWithType: CreateDatabaseTask.CreateDatabaseTask
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  name: Collation
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Collation
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  nameWithType: CreateDatabaseTask.Collation
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation*
  name: Collation
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Collation_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Collation
  nameWithType: CreateDatabaseTask.Collation
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String)
  name: Create(String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String)
  nameWithType: CreateDatabaseTask.Create(String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String,ALE.ETLBox.ControlFlow.RecoveryModel)
  name: Create(String, RecoveryModel)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create_System_String_ALE_ETLBox_ControlFlow_RecoveryModel_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String,ALE.ETLBox.ControlFlow.RecoveryModel)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String, ALE.ETLBox.ControlFlow.RecoveryModel)
  nameWithType: CreateDatabaseTask.Create(String, RecoveryModel)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String,ALE.ETLBox.ControlFlow.RecoveryModel,System.String)
  name: Create(String, RecoveryModel, String)
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create_System_String_ALE_ETLBox_ControlFlow_RecoveryModel_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String,ALE.ETLBox.ControlFlow.RecoveryModel,System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create(System.String, ALE.ETLBox.ControlFlow.RecoveryModel, System.String)
  nameWithType: CreateDatabaseTask.Create(String, RecoveryModel, String)
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create*
  name: Create
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Create_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Create
  nameWithType: CreateDatabaseTask.Create
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_DatabaseName
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  nameWithType: CreateDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName*
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_DatabaseName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.DatabaseName
  nameWithType: CreateDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute()
  nameWithType: CreateDatabaseTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Execute
  nameWithType: CreateDatabaseTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  name: RecoveryModel
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_RecoveryModel
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  nameWithType: CreateDatabaseTask.RecoveryModel
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel*
  name: RecoveryModel
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_RecoveryModel_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.RecoveryModel
  nameWithType: CreateDatabaseTask.RecoveryModel
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  nameWithType: CreateDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.Sql
  nameWithType: CreateDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  nameWithType: CreateDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskName
  nameWithType: CreateDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskType
  nameWithType: CreateDatabaseTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CreateDatabaseTask.html#ALE_ETLBox_ControlFlow_CreateDatabaseTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateDatabaseTask.TaskType
  nameWithType: CreateDatabaseTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask
  name: CreateIndexTask
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateIndexTask
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask
  nameWithType: CreateIndexTask
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor
  name: CreateIndexTask()
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask()
  nameWithType: CreateIndexTask.CreateIndexTask()
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  name: CreateIndexTask(String, String, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask__ctor_System_String_System_String_System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String})
  name.vb: CreateIndexTask(String, String, IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask(System.String, System.String, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask(System.String, System.String, System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.CreateIndexTask(String, String, IList<String>)
  nameWithType.vb: CreateIndexTask.CreateIndexTask(String, String, IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name: CreateIndexTask(String, String, IList<String>, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask__ctor_System_String_System_String_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name.vb: CreateIndexTask(String, String, IList(Of String), IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask(System.String, System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask(System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.CreateIndexTask(String, String, IList<String>, IList<String>)
  nameWithType.vb: CreateIndexTask.CreateIndexTask(String, String, IList(Of String), IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor*
  name: CreateIndexTask
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.CreateIndexTask
  nameWithType: CreateIndexTask.CreateIndexTask
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Create(System.String,System.String,System.Collections.Generic.IList{System.String})
  name: Create(String, String, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Create_System_String_System_String_System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.Create(System.String,System.String,System.Collections.Generic.IList{System.String})
  name.vb: Create(String, String, IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Create(System.String, System.String, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.Create(System.String, System.String, System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.Create(String, String, IList<String>)
  nameWithType.vb: CreateIndexTask.Create(String, String, IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Create(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name: Create(String, String, IList<String>, IList<String>)
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Create_System_String_System_String_System_Collections_Generic_IList_System_String__System_Collections_Generic_IList_System_String__
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.Create(System.String,System.String,System.Collections.Generic.IList{System.String},System.Collections.Generic.IList{System.String})
  name.vb: Create(String, String, IList(Of String), IList(Of String))
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Create(System.String, System.String, System.Collections.Generic.IList<System.String>, System.Collections.Generic.IList<System.String>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateIndexTask.Create(System.String, System.String, System.Collections.Generic.IList(Of System.String), System.Collections.Generic.IList(Of System.String))
  nameWithType: CreateIndexTask.Create(String, String, IList<String>, IList<String>)
  nameWithType.vb: CreateIndexTask.Create(String, String, IList(Of String), IList(Of String))
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Create*
  name: Create
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Create_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Create
  nameWithType: CreateIndexTask.Create
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateIndexTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Execute()
  nameWithType: CreateIndexTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Execute
  nameWithType: CreateIndexTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  name: IncludeColumns
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IncludeColumns
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  nameWithType: CreateIndexTask.IncludeColumns
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns*
  name: IncludeColumns
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IncludeColumns_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IncludeColumns
  nameWithType: CreateIndexTask.IncludeColumns
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  name: IndexColumns
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IndexColumns
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  nameWithType: CreateIndexTask.IndexColumns
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns*
  name: IndexColumns
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IndexColumns_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexColumns
  nameWithType: CreateIndexTask.IndexColumns
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  name: IndexName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IndexName
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  nameWithType: CreateIndexTask.IndexName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName*
  name: IndexName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IndexName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IndexName
  nameWithType: CreateIndexTask.IndexName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  name: IsClustered
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IsClustered
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  nameWithType: CreateIndexTask.IsClustered
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered*
  name: IsClustered
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IsClustered_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IsClustered
  nameWithType: CreateIndexTask.IsClustered
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  name: IsUnique
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IsUnique
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  nameWithType: CreateIndexTask.IsUnique
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique*
  name: IsUnique
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_IsUnique_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.IsUnique
  nameWithType: CreateIndexTask.IsUnique
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  nameWithType: CreateIndexTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.Sql
  nameWithType: CreateIndexTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  nameWithType: CreateIndexTask.TableName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TableName
  nameWithType: CreateIndexTask.TableName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  nameWithType: CreateIndexTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskName
  nameWithType: CreateIndexTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.CreateIndexTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskType
  nameWithType: CreateIndexTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CreateIndexTask.html#ALE_ETLBox_ControlFlow_CreateIndexTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateIndexTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateIndexTask.TaskType
  nameWithType: CreateIndexTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask
  name: CreateSchemaTask
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateSchemaTask
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask
  nameWithType: CreateSchemaTask
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor
  name: CreateSchemaTask()
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.CreateSchemaTask()
  nameWithType: CreateSchemaTask.CreateSchemaTask()
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor(System.String)
  name: CreateSchemaTask(String)
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.CreateSchemaTask(System.String)
  nameWithType: CreateSchemaTask.CreateSchemaTask(String)
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor*
  name: CreateSchemaTask
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.CreateSchemaTask
  nameWithType: CreateSchemaTask.CreateSchemaTask
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create(System.String)
  name: Create(String)
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Create_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CreateSchemaTask.Create(System.String)
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create(System.String)
  nameWithType: CreateSchemaTask.Create(String)
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create*
  name: Create
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Create_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Create
  nameWithType: CreateSchemaTask.Create
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute()
  nameWithType: CreateSchemaTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Execute
  nameWithType: CreateSchemaTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  name: SchemaName
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_SchemaName
  commentId: P:ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  nameWithType: CreateSchemaTask.SchemaName
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName*
  name: SchemaName
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_SchemaName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.SchemaName
  nameWithType: CreateSchemaTask.SchemaName
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  nameWithType: CreateSchemaTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.Sql
  nameWithType: CreateSchemaTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  nameWithType: CreateSchemaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskName
  nameWithType: CreateSchemaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskType
  nameWithType: CreateSchemaTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CreateSchemaTask.html#ALE_ETLBox_ControlFlow_CreateSchemaTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateSchemaTask.TaskType
  nameWithType: CreateSchemaTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CreateTableTask
  name: CreateTableTask
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CreateTableTask
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask
  nameWithType: CreateTableTask
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.#ctor
  name: CreateTableTask()
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask()
  nameWithType: CreateTableTask.CreateTableTask()
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.#ctor(ALE.ETLBox.TableDefinition)
  name: CreateTableTask(TableDefinition)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask__ctor_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.#ctor(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask(ALE.ETLBox.TableDefinition)
  nameWithType: CreateTableTask.CreateTableTask(TableDefinition)
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.#ctor(System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name: CreateTableTask(String, IList<ITableColumn>)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask__ctor_System_String_System_Collections_Generic_IList_ALE_ETLBox_ITableColumn__
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.#ctor(System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name.vb: CreateTableTask(String, IList(Of ITableColumn))
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask(System.String, System.Collections.Generic.IList<ALE.ETLBox.ITableColumn>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask(System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ITableColumn))
  nameWithType: CreateTableTask.CreateTableTask(String, IList<ITableColumn>)
  nameWithType.vb: CreateTableTask.CreateTableTask(String, IList(Of ITableColumn))
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.#ctor*
  name: CreateTableTask
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.CreateTableTask
  nameWithType: CreateTableTask.CreateTableTask
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  name: Columns
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Columns
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  nameWithType: CreateTableTask.Columns
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Columns*
  name: Columns
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Columns_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Columns
  nameWithType: CreateTableTask.Columns
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.TableDefinition)
  name: Create(TableDefinition)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create(ALE.ETLBox.TableDefinition)
  nameWithType: CreateTableTask.Create(TableDefinition)
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name: Create(String, IList<ITableColumn>)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_System_String_System_Collections_Generic_IList_ALE_ETLBox_ITableColumn__
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String,System.Collections.Generic.IList{ALE.ETLBox.ITableColumn})
  name.vb: Create(String, IList(Of ITableColumn))
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String, System.Collections.Generic.IList<ALE.ETLBox.ITableColumn>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ITableColumn))
  nameWithType: CreateTableTask.Create(String, IList<ITableColumn>)
  nameWithType.vb: CreateTableTask.Create(String, IList(Of ITableColumn))
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name: Create(String, List<TableColumn>)
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_System_String_System_Collections_Generic_List_ALE_ETLBox_TableColumn__
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name.vb: Create(String, List(Of TableColumn))
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String, System.Collections.Generic.List<ALE.ETLBox.TableColumn>)
  fullName.vb: ALE.ETLBox.ControlFlow.CreateTableTask.Create(System.String, System.Collections.Generic.List(Of ALE.ETLBox.TableColumn))
  nameWithType: CreateTableTask.Create(String, List<TableColumn>)
  nameWithType.vb: CreateTableTask.Create(String, List(Of TableColumn))
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Create*
  name: Create
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Create_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Create
  nameWithType: CreateTableTask.Create
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CreateTableTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Execute()
  nameWithType: CreateTableTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Execute
  nameWithType: CreateTableTask.Execute
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.OnlyNVarCharColumns
  name: OnlyNVarCharColumns
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_OnlyNVarCharColumns
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.OnlyNVarCharColumns
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.OnlyNVarCharColumns
  nameWithType: CreateTableTask.OnlyNVarCharColumns
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.OnlyNVarCharColumns*
  name: OnlyNVarCharColumns
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_OnlyNVarCharColumns_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.OnlyNVarCharColumns
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.OnlyNVarCharColumns
  nameWithType: CreateTableTask.OnlyNVarCharColumns
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  nameWithType: CreateTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.Sql
  nameWithType: CreateTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  nameWithType: CreateTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TableName
  nameWithType: CreateTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TableWithoutSchema
  name: TableWithoutSchema
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TableWithoutSchema
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.TableWithoutSchema
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TableWithoutSchema
  nameWithType: CreateTableTask.TableWithoutSchema
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TableWithoutSchema*
  name: TableWithoutSchema
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TableWithoutSchema_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.TableWithoutSchema
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TableWithoutSchema
  nameWithType: CreateTableTask.TableWithoutSchema
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  nameWithType: CreateTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TaskName
  nameWithType: CreateTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TaskType
  nameWithType: CreateTableTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.TaskType
  nameWithType: CreateTableTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  name: ThrowErrorIfTableExists
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_ThrowErrorIfTableExists
  commentId: P:ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  nameWithType: CreateTableTask.ThrowErrorIfTableExists
- uid: ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists*
  name: ThrowErrorIfTableExists
  href: api/ALE.ETLBox.ControlFlow.CreateTableTask.html#ALE_ETLBox_ControlFlow_CreateTableTask_ThrowErrorIfTableExists_
  commentId: Overload:ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CreateTableTask.ThrowErrorIfTableExists
  nameWithType: CreateTableTask.ThrowErrorIfTableExists
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask
  name: CRUDProcedureTask
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CRUDProcedureTask
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask
  nameWithType: CRUDProcedureTask
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor
  name: CRUDProcedureTask()
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CRUDProcedureTask()
  nameWithType: CRUDProcedureTask.CRUDProcedureTask()
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor(ALE.ETLBox.ProcedureDefinition)
  name: CRUDProcedureTask(ProcedureDefinition)
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask__ctor_ALE_ETLBox_ProcedureDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor(ALE.ETLBox.ProcedureDefinition)
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CRUDProcedureTask(ALE.ETLBox.ProcedureDefinition)
  nameWithType: CRUDProcedureTask.CRUDProcedureTask(ProcedureDefinition)
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor(System.String,System.String)
  name: CRUDProcedureTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CRUDProcedureTask(System.String, System.String)
  nameWithType: CRUDProcedureTask.CRUDProcedureTask(String, String)
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor(System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name: CRUDProcedureTask(String, String, IList<ProcedureParameter>)
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask__ctor_System_String_System_String_System_Collections_Generic_IList_ALE_ETLBox_ProcedureParameter__
  commentId: M:ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor(System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name.vb: CRUDProcedureTask(String, String, IList(Of ProcedureParameter))
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CRUDProcedureTask(System.String, System.String, System.Collections.Generic.IList<ALE.ETLBox.ProcedureParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CRUDProcedureTask(System.String, System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ProcedureParameter))
  nameWithType: CRUDProcedureTask.CRUDProcedureTask(String, String, IList<ProcedureParameter>)
  nameWithType.vb: CRUDProcedureTask.CRUDProcedureTask(String, String, IList(Of ProcedureParameter))
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor*
  name: CRUDProcedureTask
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDProcedureTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CRUDProcedureTask
  nameWithType: CRUDProcedureTask.CRUDProcedureTask
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(ALE.ETLBox.ProcedureDefinition)
  name: CreateOrAlter(ProcedureDefinition)
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_CreateOrAlter_ALE_ETLBox_ProcedureDefinition_
  commentId: M:ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(ALE.ETLBox.ProcedureDefinition)
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(ALE.ETLBox.ProcedureDefinition)
  nameWithType: CRUDProcedureTask.CreateOrAlter(ProcedureDefinition)
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(System.String,System.String)
  name: CreateOrAlter(String, String)
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_CreateOrAlter_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(System.String, System.String)
  nameWithType: CRUDProcedureTask.CreateOrAlter(String, String)
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name: CreateOrAlter(String, String, IList<ProcedureParameter>)
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_CreateOrAlter_System_String_System_String_System_Collections_Generic_IList_ALE_ETLBox_ProcedureParameter__
  commentId: M:ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(System.String,System.String,System.Collections.Generic.IList{ALE.ETLBox.ProcedureParameter})
  name.vb: CreateOrAlter(String, String, IList(Of ProcedureParameter))
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(System.String, System.String, System.Collections.Generic.IList<ALE.ETLBox.ProcedureParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter(System.String, System.String, System.Collections.Generic.IList(Of ALE.ETLBox.ProcedureParameter))
  nameWithType: CRUDProcedureTask.CreateOrAlter(String, String, IList<ProcedureParameter>)
  nameWithType.vb: CRUDProcedureTask.CreateOrAlter(String, String, IList(Of ProcedureParameter))
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter*
  name: CreateOrAlter
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_CreateOrAlter_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.CreateOrAlter
  nameWithType: CRUDProcedureTask.CreateOrAlter
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CRUDProcedureTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.Execute()
  nameWithType: CRUDProcedureTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDProcedureTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.Execute
  nameWithType: CRUDProcedureTask.Execute
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureDefinition
  name: ProcedureDefinition
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_ProcedureDefinition
  commentId: P:ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureDefinition
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureDefinition
  nameWithType: CRUDProcedureTask.ProcedureDefinition
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureDefinition*
  name: ProcedureDefinition
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_ProcedureDefinition_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureDefinition
  nameWithType: CRUDProcedureTask.ProcedureDefinition
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureName
  name: ProcedureName
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_ProcedureName
  commentId: P:ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureName
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureName
  nameWithType: CRUDProcedureTask.ProcedureName
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureName*
  name: ProcedureName
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_ProcedureName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureName
  nameWithType: CRUDProcedureTask.ProcedureName
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureParameters
  name: ProcedureParameters
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_ProcedureParameters
  commentId: P:ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureParameters
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureParameters
  nameWithType: CRUDProcedureTask.ProcedureParameters
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureParameters*
  name: ProcedureParameters
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_ProcedureParameters_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureParameters
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.ProcedureParameters
  nameWithType: CRUDProcedureTask.ProcedureParameters
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CRUDProcedureTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.Sql
  nameWithType: CRUDProcedureTask.Sql
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDProcedureTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.Sql
  nameWithType: CRUDProcedureTask.Sql
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskName
  nameWithType: CRUDProcedureTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskName
  nameWithType: CRUDProcedureTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskType
  nameWithType: CRUDProcedureTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CRUDProcedureTask.html#ALE_ETLBox_ControlFlow_CRUDProcedureTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDProcedureTask.TaskType
  nameWithType: CRUDProcedureTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask
  name: CRUDViewTask
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CRUDViewTask
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask
  nameWithType: CRUDViewTask
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.#ctor
  name: CRUDViewTask()
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.CRUDViewTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.CRUDViewTask()
  nameWithType: CRUDViewTask.CRUDViewTask()
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.#ctor(System.String,System.String)
  name: CRUDViewTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CRUDViewTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.CRUDViewTask(System.String, System.String)
  nameWithType: CRUDViewTask.CRUDViewTask(String, String)
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.#ctor*
  name: CRUDViewTask
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDViewTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.CRUDViewTask
  nameWithType: CRUDViewTask.CRUDViewTask
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.CreateOrAlter(System.String,System.String)
  name: CreateOrAlter(String, String)
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_CreateOrAlter_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CRUDViewTask.CreateOrAlter(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.CreateOrAlter(System.String, System.String)
  nameWithType: CRUDViewTask.CreateOrAlter(String, String)
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.CreateOrAlter*
  name: CreateOrAlter
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_CreateOrAlter_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDViewTask.CreateOrAlter
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.CreateOrAlter
  nameWithType: CRUDViewTask.CreateOrAlter
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.Definition
  name: Definition
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_Definition
  commentId: P:ALE.ETLBox.ControlFlow.CRUDViewTask.Definition
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.Definition
  nameWithType: CRUDViewTask.Definition
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.Definition*
  name: Definition
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_Definition_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDViewTask.Definition
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.Definition
  nameWithType: CRUDViewTask.Definition
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CRUDViewTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.Execute()
  nameWithType: CRUDViewTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDViewTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.Execute
  nameWithType: CRUDViewTask.Execute
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.CRUDViewTask.Sql
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.Sql
  nameWithType: CRUDViewTask.Sql
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDViewTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.Sql
  nameWithType: CRUDViewTask.Sql
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CRUDViewTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.TaskName
  nameWithType: CRUDViewTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDViewTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.TaskName
  nameWithType: CRUDViewTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.CRUDViewTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.TaskType
  nameWithType: CRUDViewTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDViewTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.TaskType
  nameWithType: CRUDViewTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.ViewName
  name: ViewName
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_ViewName
  commentId: P:ALE.ETLBox.ControlFlow.CRUDViewTask.ViewName
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.ViewName
  nameWithType: CRUDViewTask.ViewName
- uid: ALE.ETLBox.ControlFlow.CRUDViewTask.ViewName*
  name: ViewName
  href: api/ALE.ETLBox.ControlFlow.CRUDViewTask.html#ALE_ETLBox_ControlFlow_CRUDViewTask_ViewName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CRUDViewTask.ViewName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CRUDViewTask.ViewName
  nameWithType: CRUDViewTask.ViewName
- uid: ALE.ETLBox.ControlFlow.CustomTask
  name: CustomTask
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html
  commentId: T:ALE.ETLBox.ControlFlow.CustomTask
  fullName: ALE.ETLBox.ControlFlow.CustomTask
  nameWithType: CustomTask
- uid: ALE.ETLBox.ControlFlow.CustomTask.#ctor(System.String)
  name: CustomTask(String)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.CustomTask(System.String)
  nameWithType: CustomTask.CustomTask(String)
- uid: ALE.ETLBox.ControlFlow.CustomTask.#ctor*
  name: CustomTask
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.CustomTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CustomTask.CustomTask
  nameWithType: CustomTask.CustomTask
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute()
  nameWithType: CustomTask.Execute()
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute(System.Action)
  name: Execute(Action)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute(System.Action)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute(System.Action)
  nameWithType: CustomTask.Execute(Action)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute(System.String,System.Action)
  name: Execute(String, Action)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute(System.String, System.Action)
  nameWithType: CustomTask.Execute(String, Action)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.CustomTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute
  nameWithType: CustomTask.Execute
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute``1(System.Action{``0},``0)
  name: Execute<t1>(Action<t1>, t1)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute__1_System_Action___0____0_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute``1(System.Action{``0},``0)
  name.vb: Execute(Of t1)(Action(Of t1), t1)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute<t1>(System.Action<t1>, t1)
  fullName.vb: ALE.ETLBox.ControlFlow.CustomTask.Execute(Of t1)(System.Action(Of t1), t1)
  nameWithType: CustomTask.Execute<t1>(Action<t1>, t1)
  nameWithType.vb: CustomTask.Execute(Of t1)(Action(Of t1), t1)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute``1(System.String,System.Action{``0},``0)
  name: Execute<t1>(String, Action<t1>, t1)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute__1_System_String_System_Action___0____0_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute``1(System.String,System.Action{``0},``0)
  name.vb: Execute(Of t1)(String, Action(Of t1), t1)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute<t1>(System.String, System.Action<t1>, t1)
  fullName.vb: ALE.ETLBox.ControlFlow.CustomTask.Execute(Of t1)(System.String, System.Action(Of t1), t1)
  nameWithType: CustomTask.Execute<t1>(String, Action<t1>, t1)
  nameWithType.vb: CustomTask.Execute(Of t1)(String, Action(Of t1), t1)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute``2(System.Action{``0,``1},``0,``1)
  name: Execute<t1, t2>(Action<t1, t2>, t1, t2)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute__2_System_Action___0___1____0___1_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute``2(System.Action{``0,``1},``0,``1)
  name.vb: Execute(Of t1, t2)(Action(Of t1, t2), t1, t2)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute<t1, t2>(System.Action<t1, t2>, t1, t2)
  fullName.vb: ALE.ETLBox.ControlFlow.CustomTask.Execute(Of t1, t2)(System.Action(Of t1, t2), t1, t2)
  nameWithType: CustomTask.Execute<t1, t2>(Action<t1, t2>, t1, t2)
  nameWithType.vb: CustomTask.Execute(Of t1, t2)(Action(Of t1, t2), t1, t2)
- uid: ALE.ETLBox.ControlFlow.CustomTask.Execute``2(System.String,System.Action{``0,``1},``0,``1)
  name: Execute<t1, t2>(String, Action<t1, t2>, t1, t2)
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_Execute__2_System_String_System_Action___0___1____0___1_
  commentId: M:ALE.ETLBox.ControlFlow.CustomTask.Execute``2(System.String,System.Action{``0,``1},``0,``1)
  name.vb: Execute(Of t1, t2)(String, Action(Of t1, t2), t1, t2)
  fullName: ALE.ETLBox.ControlFlow.CustomTask.Execute<t1, t2>(System.String, System.Action<t1, t2>, t1, t2)
  fullName.vb: ALE.ETLBox.ControlFlow.CustomTask.Execute(Of t1, t2)(System.String, System.Action(Of t1, t2), t1, t2)
  nameWithType: CustomTask.Execute<t1, t2>(String, Action<t1, t2>, t1, t2)
  nameWithType.vb: CustomTask.Execute(Of t1, t2)(String, Action(Of t1, t2), t1, t2)
- uid: ALE.ETLBox.ControlFlow.CustomTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.CustomTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.CustomTask.TaskName
  nameWithType: CustomTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CustomTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.CustomTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CustomTask.TaskName
  nameWithType: CustomTask.TaskName
- uid: ALE.ETLBox.ControlFlow.CustomTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.CustomTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.CustomTask.TaskType
  nameWithType: CustomTask.TaskType
- uid: ALE.ETLBox.ControlFlow.CustomTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.CustomTask.html#ALE_ETLBox_ControlFlow_CustomTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.CustomTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.CustomTask.TaskType
  nameWithType: CustomTask.TaskType
- uid: ALE.ETLBox.ControlFlow.DbTask
  name: DbTask
  href: api/ALE.ETLBox.ControlFlow.DbTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DbTask
  fullName: ALE.ETLBox.ControlFlow.DbTask
  nameWithType: DbTask
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor
  name: DbTask()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask()
  nameWithType: DbTask.DbTask()
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(ALE.ETLBox.ITask,System.String)
  name: DbTask(ITask, String)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_ALE_ETLBox_ITask_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(ALE.ETLBox.ITask,System.String)
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(ALE.ETLBox.ITask, System.String)
  nameWithType: DbTask.DbTask(ITask, String)
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String)
  name: DbTask(String)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String)
  nameWithType: DbTask.DbTask(String)
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  name: DbTask(String, FileConnectionManager)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_System_String_ALE_ETLBox_ConnectionManager_FileConnectionManager_
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager)
  nameWithType: DbTask.DbTask(String, FileConnectionManager)
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String)
  name: DbTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String)
  nameWithType: DbTask.DbTask(String, String)
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: DbTask(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: DbTask(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: DbTask.DbTask(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: DbTask.DbTask(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name: DbTask(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name.vb: DbTask(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.DbTask.DbTask(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: DbTask.DbTask(String, String, Action<Object>[])
  nameWithType.vb: DbTask.DbTask(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.DbTask.#ctor*
  name: DbTask
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.DbTask
  nameWithType: DbTask.DbTask
- uid: ALE.ETLBox.ControlFlow.DbTask.Actions
  name: Actions
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Actions
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.Actions
  fullName: ALE.ETLBox.ControlFlow.DbTask.Actions
  nameWithType: DbTask.Actions
- uid: ALE.ETLBox.ControlFlow.DbTask.Actions*
  name: Actions
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Actions_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.Actions
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.Actions
  nameWithType: DbTask.Actions
- uid: ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  name: AfterRowReadAction
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_AfterRowReadAction
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  fullName: ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  nameWithType: DbTask.AfterRowReadAction
- uid: ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction*
  name: AfterRowReadAction
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_AfterRowReadAction_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.AfterRowReadAction
  nameWithType: DbTask.AfterRowReadAction
- uid: ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  name: BeforeRowReadAction
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_BeforeRowReadAction
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  fullName: ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  nameWithType: DbTask.BeforeRowReadAction
- uid: ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction*
  name: BeforeRowReadAction
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_BeforeRowReadAction_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.BeforeRowReadAction
  nameWithType: DbTask.BeforeRowReadAction
- uid: ALE.ETLBox.ControlFlow.DbTask.BulkInsert(ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(ITableData, String)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_BulkInsert_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.BulkInsert(ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ControlFlow.DbTask.BulkInsert(ALE.ETLBox.ITableData, System.String)
  nameWithType: DbTask.BulkInsert(ITableData, String)
- uid: ALE.ETLBox.ControlFlow.DbTask.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_BulkInsert_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.BulkInsert
  nameWithType: DbTask.BulkInsert
- uid: ALE.ETLBox.ControlFlow.DbTask.Command
  name: Command
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Command
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.Command
  fullName: ALE.ETLBox.ControlFlow.DbTask.Command
  nameWithType: DbTask.Command
- uid: ALE.ETLBox.ControlFlow.DbTask.Command*
  name: Command
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Command_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.Command
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.Command
  nameWithType: DbTask.Command
- uid: ALE.ETLBox.ControlFlow.DbTask.DisableExtension
  name: DisableExtension
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_DisableExtension
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.DisableExtension
  fullName: ALE.ETLBox.ControlFlow.DbTask.DisableExtension
  nameWithType: DbTask.DisableExtension
- uid: ALE.ETLBox.ControlFlow.DbTask.DisableExtension*
  name: DisableExtension
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_DisableExtension_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.DisableExtension
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.DisableExtension
  nameWithType: DbTask.DisableExtension
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery
  name: ExecuteNonQuery()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteNonQuery
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery()
  nameWithType: DbTask.ExecuteNonQuery()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteNonQuery
  nameWithType: DbTask.ExecuteNonQuery
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteReader
  name: ExecuteReader()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteReader
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteReader
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteReader()
  nameWithType: DbTask.ExecuteReader()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteReader
  nameWithType: DbTask.ExecuteReader
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar
  name: ExecuteScalar()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalar
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar()
  nameWithType: DbTask.ExecuteScalar()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar
  nameWithType: DbTask.ExecuteScalar
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar``1
  name: ExecuteScalar<T>()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalar__1
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar``1
  name.vb: ExecuteScalar(Of T)()
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar<T>()
  fullName.vb: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalar(Of T)()
  nameWithType: DbTask.ExecuteScalar<T>()
  nameWithType.vb: DbTask.ExecuteScalar(Of T)()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool
  name: ExecuteScalarAsBool()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalarAsBool
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool()
  nameWithType: DbTask.ExecuteScalarAsBool()
- uid: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool*
  name: ExecuteScalarAsBool
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ExecuteScalarAsBool_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.ExecuteScalarAsBool
  nameWithType: DbTask.ExecuteScalarAsBool
- uid: ALE.ETLBox.ControlFlow.DbTask.FileConnection
  name: FileConnection
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_FileConnection
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.FileConnection
  fullName: ALE.ETLBox.ControlFlow.DbTask.FileConnection
  nameWithType: DbTask.FileConnection
- uid: ALE.ETLBox.ControlFlow.DbTask.FileConnection*
  name: FileConnection
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_FileConnection_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.FileConnection
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.FileConnection
  nameWithType: DbTask.FileConnection
- uid: ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  name: IsOdbcConnection
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_IsOdbcConnection
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  fullName: ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  nameWithType: DbTask.IsOdbcConnection
- uid: ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection*
  name: IsOdbcConnection
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_IsOdbcConnection_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.IsOdbcConnection
  nameWithType: DbTask.IsOdbcConnection
- uid: ALE.ETLBox.ControlFlow.DbTask.Query*
  name: Query
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Query_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.Query
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.Query
  nameWithType: DbTask.Query
- uid: ALE.ETLBox.ControlFlow.DbTask.Query``1
  name: Query<T>()
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Query__1
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.Query``1
  name.vb: Query(Of T)()
  fullName: ALE.ETLBox.ControlFlow.DbTask.Query<T>()
  fullName.vb: ALE.ETLBox.ControlFlow.DbTask.Query(Of T)()
  nameWithType: DbTask.Query<T>()
  nameWithType.vb: DbTask.Query(Of T)()
- uid: ALE.ETLBox.ControlFlow.DbTask.Query``1(System.Action{``0})
  name: Query<T>(Action<T>)
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Query__1_System_Action___0__
  commentId: M:ALE.ETLBox.ControlFlow.DbTask.Query``1(System.Action{``0})
  name.vb: Query(Of T)(Action(Of T))
  fullName: ALE.ETLBox.ControlFlow.DbTask.Query<T>(System.Action<T>)
  fullName.vb: ALE.ETLBox.ControlFlow.DbTask.Query(Of T)(System.Action(Of T))
  nameWithType: DbTask.Query<T>(Action<T>)
  nameWithType.vb: DbTask.Query(Of T)(Action(Of T))
- uid: ALE.ETLBox.ControlFlow.DbTask.ReadTopX
  name: ReadTopX
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ReadTopX
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.ReadTopX
  fullName: ALE.ETLBox.ControlFlow.DbTask.ReadTopX
  nameWithType: DbTask.ReadTopX
- uid: ALE.ETLBox.ControlFlow.DbTask.ReadTopX*
  name: ReadTopX
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_ReadTopX_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.ReadTopX
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.ReadTopX
  nameWithType: DbTask.ReadTopX
- uid: ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  name: RowsAffected
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_RowsAffected
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  fullName: ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  nameWithType: DbTask.RowsAffected
- uid: ALE.ETLBox.ControlFlow.DbTask.RowsAffected*
  name: RowsAffected
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_RowsAffected_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.RowsAffected
  nameWithType: DbTask.RowsAffected
- uid: ALE.ETLBox.ControlFlow.DbTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.DbTask.Sql
  fullName: ALE.ETLBox.ControlFlow.DbTask.Sql
  nameWithType: DbTask.Sql
- uid: ALE.ETLBox.ControlFlow.DbTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DbTask.html#ALE_ETLBox_ControlFlow_DbTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.DbTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DbTask.Sql
  nameWithType: DbTask.Sql
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask
  name: DropDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DropDatabaseTask
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask
  nameWithType: DropDatabaseTask
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor
  name: DropDatabaseTask()
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropDatabaseTask()
  nameWithType: DropDatabaseTask.DropDatabaseTask()
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor(System.String)
  name: DropDatabaseTask(String)
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropDatabaseTask(System.String)
  nameWithType: DropDatabaseTask.DropDatabaseTask(String)
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor*
  name: DropDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DropDatabaseTask
  nameWithType: DropDatabaseTask.DropDatabaseTask
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.DatabaseName
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_DatabaseName
  commentId: P:ALE.ETLBox.ControlFlow.DropDatabaseTask.DatabaseName
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DatabaseName
  nameWithType: DropDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.DatabaseName*
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_DatabaseName_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.DatabaseName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.DatabaseName
  nameWithType: DropDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop(System.String)
  name: Drop(String)
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_Drop_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop(System.String)
  nameWithType: DropDatabaseTask.Drop(String)
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop*
  name: Drop
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_Drop_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.Drop
  nameWithType: DropDatabaseTask.Drop
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.DropDatabaseTask.Execute
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.Execute()
  nameWithType: DropDatabaseTask.Execute()
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.Execute
  nameWithType: DropDatabaseTask.Execute
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.DropDatabaseTask.Sql
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.Sql
  nameWithType: DropDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.Sql
  nameWithType: DropDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskName
  nameWithType: DropDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskName
  nameWithType: DropDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskType
  nameWithType: DropDatabaseTask.TaskType
- uid: ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.DropDatabaseTask.html#ALE_ETLBox_ControlFlow_DropDatabaseTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropDatabaseTask.TaskType
  nameWithType: DropDatabaseTask.TaskType
- uid: ALE.ETLBox.ControlFlow.DropTableTask
  name: DropTableTask
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html
  commentId: T:ALE.ETLBox.ControlFlow.DropTableTask
  fullName: ALE.ETLBox.ControlFlow.DropTableTask
  nameWithType: DropTableTask
- uid: ALE.ETLBox.ControlFlow.DropTableTask.#ctor
  name: DropTableTask()
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.DropTableTask()
  nameWithType: DropTableTask.DropTableTask()
- uid: ALE.ETLBox.ControlFlow.DropTableTask.#ctor(System.String)
  name: DropTableTask(String)
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.DropTableTask(System.String)
  nameWithType: DropTableTask.DropTableTask(String)
- uid: ALE.ETLBox.ControlFlow.DropTableTask.#ctor*
  name: DropTableTask
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.DropTableTask
  nameWithType: DropTableTask.DropTableTask
- uid: ALE.ETLBox.ControlFlow.DropTableTask.Drop(System.String)
  name: Drop(String)
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_Drop_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.Drop(System.String)
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.Drop(System.String)
  nameWithType: DropTableTask.Drop(String)
- uid: ALE.ETLBox.ControlFlow.DropTableTask.Drop*
  name: Drop
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_Drop_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.Drop
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.Drop
  nameWithType: DropTableTask.Drop
- uid: ALE.ETLBox.ControlFlow.DropTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.DropTableTask.Execute
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.Execute()
  nameWithType: DropTableTask.Execute()
- uid: ALE.ETLBox.ControlFlow.DropTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.Execute
  nameWithType: DropTableTask.Execute
- uid: ALE.ETLBox.ControlFlow.DropTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.DropTableTask.Sql
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.Sql
  nameWithType: DropTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.DropTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.Sql
  nameWithType: DropTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.DropTableTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.DropTableTask.TableName
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.TableName
  nameWithType: DropTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.DropTableTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.TableName
  nameWithType: DropTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.DropTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.DropTableTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.TaskName
  nameWithType: DropTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.DropTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.TaskName
  nameWithType: DropTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.DropTableTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.DropTableTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.TaskType
  nameWithType: DropTableTask.TaskType
- uid: ALE.ETLBox.ControlFlow.DropTableTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.DropTableTask.html#ALE_ETLBox_ControlFlow_DropTableTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.DropTableTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.DropTableTask.TaskType
  nameWithType: DropTableTask.TaskType
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask
  name: GetDatabaseListTask
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html
  commentId: T:ALE.ETLBox.ControlFlow.GetDatabaseListTask
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask
  nameWithType: GetDatabaseListTask
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.#ctor
  name: GetDatabaseListTask()
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.GetDatabaseListTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetDatabaseListTask()
  nameWithType: GetDatabaseListTask.GetDatabaseListTask()
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.#ctor*
  name: GetDatabaseListTask
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetDatabaseListTask
  nameWithType: GetDatabaseListTask.GetDatabaseListTask
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  name: DatabaseNames
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_DatabaseNames
  commentId: P:ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  nameWithType: GetDatabaseListTask.DatabaseNames
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames*
  name: DatabaseNames
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_DatabaseNames_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.DatabaseNames
  nameWithType: GetDatabaseListTask.DatabaseNames
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute()
  nameWithType: GetDatabaseListTask.Execute()
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Execute
  nameWithType: GetDatabaseListTask.Execute
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList
  name: GetList()
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_GetList
  commentId: M:ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList()
  nameWithType: GetDatabaseListTask.GetList()
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList*
  name: GetList
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_GetList_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.GetList
  nameWithType: GetDatabaseListTask.GetList
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List
  name: List()
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_List
  commentId: M:ALE.ETLBox.ControlFlow.GetDatabaseListTask.List
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List()
  nameWithType: GetDatabaseListTask.List()
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List*
  name: List
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_List_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.List
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.List
  nameWithType: GetDatabaseListTask.List
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  nameWithType: GetDatabaseListTask.Sql
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.Sql
  nameWithType: GetDatabaseListTask.Sql
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  nameWithType: GetDatabaseListTask.TaskName
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskName
  nameWithType: GetDatabaseListTask.TaskName
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskType
  nameWithType: GetDatabaseListTask.TaskType
- uid: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.GetDatabaseListTask.html#ALE_ETLBox_ControlFlow_GetDatabaseListTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.GetDatabaseListTask.TaskType
  nameWithType: GetDatabaseListTask.TaskType
- uid: ALE.ETLBox.ControlFlow.Package
  name: Package
  href: api/ALE.ETLBox.ControlFlow.Package.html
  commentId: T:ALE.ETLBox.ControlFlow.Package
  fullName: ALE.ETLBox.ControlFlow.Package
  nameWithType: Package
- uid: ALE.ETLBox.ControlFlow.Package.#ctor
  name: Package()
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package__ctor
  commentId: M:ALE.ETLBox.ControlFlow.Package.#ctor
  fullName: ALE.ETLBox.ControlFlow.Package.Package()
  nameWithType: Package.Package()
- uid: ALE.ETLBox.ControlFlow.Package.#ctor(System.String)
  name: Package(String)
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.Package.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.Package.Package(System.String)
  nameWithType: Package.Package(String)
- uid: ALE.ETLBox.ControlFlow.Package.#ctor(System.String,System.Action)
  name: Package(String, Action)
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package__ctor_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.Package.#ctor(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.Package.Package(System.String, System.Action)
  nameWithType: Package.Package(String, Action)
- uid: ALE.ETLBox.ControlFlow.Package.#ctor*
  name: Package
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.Package.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Package.Package
  nameWithType: Package.Package
- uid: ALE.ETLBox.ControlFlow.Package.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Execute
  commentId: M:ALE.ETLBox.ControlFlow.Package.Execute
  fullName: ALE.ETLBox.ControlFlow.Package.Execute()
  nameWithType: Package.Execute()
- uid: ALE.ETLBox.ControlFlow.Package.Execute(System.String,System.Action)
  name: Execute(String, Action)
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Execute_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.Package.Execute(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.Package.Execute(System.String, System.Action)
  nameWithType: Package.Execute(String, Action)
- uid: ALE.ETLBox.ControlFlow.Package.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.Package.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Package.Execute
  nameWithType: Package.Execute
- uid: ALE.ETLBox.ControlFlow.Package.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.Package.TaskName
  fullName: ALE.ETLBox.ControlFlow.Package.TaskName
  nameWithType: Package.TaskName
- uid: ALE.ETLBox.ControlFlow.Package.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.Package.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Package.TaskName
  nameWithType: Package.TaskName
- uid: ALE.ETLBox.ControlFlow.Package.Tasks
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Tasks
  commentId: P:ALE.ETLBox.ControlFlow.Package.Tasks
  fullName: ALE.ETLBox.ControlFlow.Package.Tasks
  nameWithType: Package.Tasks
- uid: ALE.ETLBox.ControlFlow.Package.Tasks*
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_Tasks_
  commentId: Overload:ALE.ETLBox.ControlFlow.Package.Tasks
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Package.Tasks
  nameWithType: Package.Tasks
- uid: ALE.ETLBox.ControlFlow.Package.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.Package.TaskType
  fullName: ALE.ETLBox.ControlFlow.Package.TaskType
  nameWithType: Package.TaskType
- uid: ALE.ETLBox.ControlFlow.Package.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.Package.html#ALE_ETLBox_ControlFlow_Package_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.Package.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Package.TaskType
  nameWithType: Package.TaskType
- uid: ALE.ETLBox.ControlFlow.RecoveryModel
  name: RecoveryModel
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html
  commentId: T:ALE.ETLBox.ControlFlow.RecoveryModel
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel
  nameWithType: RecoveryModel
- uid: ALE.ETLBox.ControlFlow.RecoveryModel.BulkLogged
  name: BulkLogged
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html#ALE_ETLBox_ControlFlow_RecoveryModel_BulkLogged
  commentId: F:ALE.ETLBox.ControlFlow.RecoveryModel.BulkLogged
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel.BulkLogged
  nameWithType: RecoveryModel.BulkLogged
- uid: ALE.ETLBox.ControlFlow.RecoveryModel.Default
  name: Default
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html#ALE_ETLBox_ControlFlow_RecoveryModel_Default
  commentId: F:ALE.ETLBox.ControlFlow.RecoveryModel.Default
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel.Default
  nameWithType: RecoveryModel.Default
- uid: ALE.ETLBox.ControlFlow.RecoveryModel.Full
  name: Full
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html#ALE_ETLBox_ControlFlow_RecoveryModel_Full
  commentId: F:ALE.ETLBox.ControlFlow.RecoveryModel.Full
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel.Full
  nameWithType: RecoveryModel.Full
- uid: ALE.ETLBox.ControlFlow.RecoveryModel.Simple
  name: Simple
  href: api/ALE.ETLBox.ControlFlow.RecoveryModel.html#ALE_ETLBox_ControlFlow_RecoveryModel_Simple
  commentId: F:ALE.ETLBox.ControlFlow.RecoveryModel.Simple
  fullName: ALE.ETLBox.ControlFlow.RecoveryModel.Simple
  nameWithType: RecoveryModel.Simple
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask
  name: RestoreDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html
  commentId: T:ALE.ETLBox.ControlFlow.RestoreDatabaseTask
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask
  nameWithType: RestoreDatabaseTask
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.#ctor
  name: RestoreDatabaseTask()
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.RestoreDatabaseTask()
  nameWithType: RestoreDatabaseTask.RestoreDatabaseTask()
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.#ctor(System.String,System.String)
  name: RestoreDatabaseTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.RestoreDatabaseTask(System.String, System.String)
  nameWithType: RestoreDatabaseTask.RestoreDatabaseTask(String, String)
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.#ctor*
  name: RestoreDatabaseTask
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.RestoreDatabaseTask
  nameWithType: RestoreDatabaseTask.RestoreDatabaseTask
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.DatabaseName
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_DatabaseName
  commentId: P:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.DatabaseName
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.DatabaseName
  nameWithType: RestoreDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.DatabaseName*
  name: DatabaseName
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_DatabaseName_
  commentId: Overload:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.DatabaseName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.DatabaseName
  nameWithType: RestoreDatabaseTask.DatabaseName
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Execute
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Execute()
  nameWithType: RestoreDatabaseTask.Execute()
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Execute
  nameWithType: RestoreDatabaseTask.Execute
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.FileName
  name: FileName
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_FileName
  commentId: P:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.FileName
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.FileName
  nameWithType: RestoreDatabaseTask.FileName
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.FileName*
  name: FileName
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_FileName_
  commentId: Overload:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.FileName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.FileName
  nameWithType: RestoreDatabaseTask.FileName
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Restore(System.String,System.String)
  name: Restore(String, String)
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_Restore_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Restore(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Restore(System.String, System.String)
  nameWithType: RestoreDatabaseTask.Restore(String, String)
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Restore*
  name: Restore
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_Restore_
  commentId: Overload:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Restore
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Restore
  nameWithType: RestoreDatabaseTask.Restore
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Sql
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Sql
  nameWithType: RestoreDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.Sql
  nameWithType: RestoreDatabaseTask.Sql
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskName
  nameWithType: RestoreDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskName
  nameWithType: RestoreDatabaseTask.TaskName
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskType
  nameWithType: RestoreDatabaseTask.TaskType
- uid: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.RestoreDatabaseTask.html#ALE_ETLBox_ControlFlow_RestoreDatabaseTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RestoreDatabaseTask.TaskType
  nameWithType: RestoreDatabaseTask.TaskType
- uid: ALE.ETLBox.ControlFlow.RowCountOptions
  name: RowCountOptions
  href: api/ALE.ETLBox.ControlFlow.RowCountOptions.html
  commentId: T:ALE.ETLBox.ControlFlow.RowCountOptions
  fullName: ALE.ETLBox.ControlFlow.RowCountOptions
  nameWithType: RowCountOptions
- uid: ALE.ETLBox.ControlFlow.RowCountOptions.NoLock
  name: NoLock
  href: api/ALE.ETLBox.ControlFlow.RowCountOptions.html#ALE_ETLBox_ControlFlow_RowCountOptions_NoLock
  commentId: F:ALE.ETLBox.ControlFlow.RowCountOptions.NoLock
  fullName: ALE.ETLBox.ControlFlow.RowCountOptions.NoLock
  nameWithType: RowCountOptions.NoLock
- uid: ALE.ETLBox.ControlFlow.RowCountOptions.None
  name: None
  href: api/ALE.ETLBox.ControlFlow.RowCountOptions.html#ALE_ETLBox_ControlFlow_RowCountOptions_None
  commentId: F:ALE.ETLBox.ControlFlow.RowCountOptions.None
  fullName: ALE.ETLBox.ControlFlow.RowCountOptions.None
  nameWithType: RowCountOptions.None
- uid: ALE.ETLBox.ControlFlow.RowCountOptions.QuickQueryMode
  name: QuickQueryMode
  href: api/ALE.ETLBox.ControlFlow.RowCountOptions.html#ALE_ETLBox_ControlFlow_RowCountOptions_QuickQueryMode
  commentId: F:ALE.ETLBox.ControlFlow.RowCountOptions.QuickQueryMode
  fullName: ALE.ETLBox.ControlFlow.RowCountOptions.QuickQueryMode
  nameWithType: RowCountOptions.QuickQueryMode
- uid: ALE.ETLBox.ControlFlow.RowCountTask
  name: RowCountTask
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html
  commentId: T:ALE.ETLBox.ControlFlow.RowCountTask
  fullName: ALE.ETLBox.ControlFlow.RowCountTask
  nameWithType: RowCountTask
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor
  name: RowCountTask()
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask()
  nameWithType: RowCountTask.RowCountTask()
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String)
  name: RowCountTask(String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask(System.String)
  nameWithType: RowCountTask.RowCountTask(String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: RowCountTask(String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask(System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.RowCountTask(String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,System.String)
  name: RowCountTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask(System.String, System.String)
  nameWithType: RowCountTask.RowCountTask(String, String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: RowCountTask(String, String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_System_String_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.#ctor(System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask(System.String, System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.RowCountTask(String, String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.#ctor*
  name: RowCountTask
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.RowCountTask
  nameWithType: RowCountTask.RowCountTask
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Condition
  name: Condition
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Condition
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.Condition
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Condition
  nameWithType: RowCountTask.Condition
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Condition*
  name: Condition
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Condition_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Condition
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Condition
  nameWithType: RowCountTask.Condition
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count
  name: Count()
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count()
  nameWithType: RowCountTask.Count()
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String)
  name: Count(String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String)
  nameWithType: RowCountTask.Count(String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: Count(String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.Count(String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,System.String)
  name: Count(String, String)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String, System.String)
  nameWithType: RowCountTask.Count(String, String)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  name: Count(String, String, RowCountOptions)
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_System_String_System_String_ALE_ETLBox_ControlFlow_RowCountOptions_
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String,System.String,ALE.ETLBox.ControlFlow.RowCountOptions)
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count(System.String, System.String, ALE.ETLBox.ControlFlow.RowCountOptions)
  nameWithType: RowCountTask.Count(String, String, RowCountOptions)
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Count*
  name: Count
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Count_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Count
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Count
  nameWithType: RowCountTask.Count
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.RowCountTask.Execute
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Execute()
  nameWithType: RowCountTask.Execute()
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Execute
  nameWithType: RowCountTask.Execute
- uid: ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  name: HasCondition
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_HasCondition
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  nameWithType: RowCountTask.HasCondition
- uid: ALE.ETLBox.ControlFlow.RowCountTask.HasCondition*
  name: HasCondition
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_HasCondition_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.HasCondition
  nameWithType: RowCountTask.HasCondition
- uid: ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  name: HasRows
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_HasRows
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  nameWithType: RowCountTask.HasRows
- uid: ALE.ETLBox.ControlFlow.RowCountTask.HasRows*
  name: HasRows
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_HasRows_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.HasRows
  nameWithType: RowCountTask.HasRows
- uid: ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  name: NoLock
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_NoLock
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  nameWithType: RowCountTask.NoLock
- uid: ALE.ETLBox.ControlFlow.RowCountTask.NoLock*
  name: NoLock
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_NoLock_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.NoLock
  nameWithType: RowCountTask.NoLock
- uid: ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  name: QuickQueryMode
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_QuickQueryMode
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  nameWithType: RowCountTask.QuickQueryMode
- uid: ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode*
  name: QuickQueryMode
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_QuickQueryMode_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.QuickQueryMode
  nameWithType: RowCountTask.QuickQueryMode
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Rows
  name: Rows
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Rows
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.Rows
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Rows
  nameWithType: RowCountTask.Rows
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Rows*
  name: Rows
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Rows_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Rows
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Rows
  nameWithType: RowCountTask.Rows
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.Sql
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Sql
  nameWithType: RowCountTask.Sql
- uid: ALE.ETLBox.ControlFlow.RowCountTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.Sql
  nameWithType: RowCountTask.Sql
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.TableName
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TableName
  nameWithType: RowCountTask.TableName
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TableName
  nameWithType: RowCountTask.TableName
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  nameWithType: RowCountTask.TaskName
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TaskName
  nameWithType: RowCountTask.TaskName
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.RowCountTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TaskType
  nameWithType: RowCountTask.TaskType
- uid: ALE.ETLBox.ControlFlow.RowCountTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.RowCountTask.html#ALE_ETLBox_ControlFlow_RowCountTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.RowCountTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.RowCountTask.TaskType
  nameWithType: RowCountTask.TaskType
- uid: ALE.ETLBox.ControlFlow.Sequence
  name: Sequence
  href: api/ALE.ETLBox.ControlFlow.Sequence.html
  commentId: T:ALE.ETLBox.ControlFlow.Sequence
  fullName: ALE.ETLBox.ControlFlow.Sequence
  nameWithType: Sequence
- uid: ALE.ETLBox.ControlFlow.Sequence.#ctor
  name: Sequence()
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence__ctor
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.#ctor
  fullName: ALE.ETLBox.ControlFlow.Sequence.Sequence()
  nameWithType: Sequence.Sequence()
- uid: ALE.ETLBox.ControlFlow.Sequence.#ctor(System.String)
  name: Sequence(String)
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.Sequence.Sequence(System.String)
  nameWithType: Sequence.Sequence(String)
- uid: ALE.ETLBox.ControlFlow.Sequence.#ctor(System.String,System.Action)
  name: Sequence(String, Action)
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence__ctor_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.#ctor(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.Sequence.Sequence(System.String, System.Action)
  nameWithType: Sequence.Sequence(String, Action)
- uid: ALE.ETLBox.ControlFlow.Sequence.#ctor*
  name: Sequence
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence.Sequence
  nameWithType: Sequence.Sequence
- uid: ALE.ETLBox.ControlFlow.Sequence.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Execute
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.Execute
  fullName: ALE.ETLBox.ControlFlow.Sequence.Execute()
  nameWithType: Sequence.Execute()
- uid: ALE.ETLBox.ControlFlow.Sequence.Execute(System.String,System.Action)
  name: Execute(String, Action)
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Execute_System_String_System_Action_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence.Execute(System.String,System.Action)
  fullName: ALE.ETLBox.ControlFlow.Sequence.Execute(System.String, System.Action)
  nameWithType: Sequence.Execute(String, Action)
- uid: ALE.ETLBox.ControlFlow.Sequence.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence.Execute
  nameWithType: Sequence.Execute
- uid: ALE.ETLBox.ControlFlow.Sequence.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.Sequence.TaskName
  fullName: ALE.ETLBox.ControlFlow.Sequence.TaskName
  nameWithType: Sequence.TaskName
- uid: ALE.ETLBox.ControlFlow.Sequence.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence.TaskName
  nameWithType: Sequence.TaskName
- uid: ALE.ETLBox.ControlFlow.Sequence.Tasks
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Tasks
  commentId: P:ALE.ETLBox.ControlFlow.Sequence.Tasks
  fullName: ALE.ETLBox.ControlFlow.Sequence.Tasks
  nameWithType: Sequence.Tasks
- uid: ALE.ETLBox.ControlFlow.Sequence.Tasks*
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_Tasks_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence.Tasks
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence.Tasks
  nameWithType: Sequence.Tasks
- uid: ALE.ETLBox.ControlFlow.Sequence.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.Sequence.TaskType
  fullName: ALE.ETLBox.ControlFlow.Sequence.TaskType
  nameWithType: Sequence.TaskType
- uid: ALE.ETLBox.ControlFlow.Sequence.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.Sequence.html#ALE_ETLBox_ControlFlow_Sequence_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence.TaskType
  nameWithType: Sequence.TaskType
- uid: ALE.ETLBox.ControlFlow.Sequence`1
  name: Sequence<T>
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html
  commentId: T:ALE.ETLBox.ControlFlow.Sequence`1
  name.vb: Sequence(Of T)
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T)
  nameWithType: Sequence<T>
  nameWithType.vb: Sequence(Of T)
- uid: ALE.ETLBox.ControlFlow.Sequence`1.#ctor
  name: Sequence()
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1__ctor
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.#ctor
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Sequence()
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Sequence()
  nameWithType: Sequence<T>.Sequence()
  nameWithType.vb: Sequence(Of T).Sequence()
- uid: ALE.ETLBox.ControlFlow.Sequence`1.#ctor(System.String)
  name: Sequence(String)
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Sequence(System.String)
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Sequence(System.String)
  nameWithType: Sequence<T>.Sequence(String)
  nameWithType.vb: Sequence(Of T).Sequence(String)
- uid: ALE.ETLBox.ControlFlow.Sequence`1.#ctor(System.String,System.Action{`0},`0)
  name: Sequence(String, Action<T>, T)
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1__ctor_System_String_System_Action__0___0_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.#ctor(System.String,System.Action{`0},`0)
  name.vb: Sequence(String, Action(Of T), T)
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Sequence(System.String, System.Action<T>, T)
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Sequence(System.String, System.Action(Of T), T)
  nameWithType: Sequence<T>.Sequence(String, Action<T>, T)
  nameWithType.vb: Sequence(Of T).Sequence(String, Action(Of T), T)
- uid: ALE.ETLBox.ControlFlow.Sequence`1.#ctor*
  name: Sequence
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Sequence
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Sequence
  nameWithType: Sequence<T>.Sequence
  nameWithType.vb: Sequence(Of T).Sequence
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Execute
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.Execute
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Execute()
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Execute()
  nameWithType: Sequence<T>.Execute()
  nameWithType.vb: Sequence(Of T).Execute()
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Execute(System.String,System.Action{`0},`0)
  name: Execute(String, Action<T>, T)
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Execute_System_String_System_Action__0___0_
  commentId: M:ALE.ETLBox.ControlFlow.Sequence`1.Execute(System.String,System.Action{`0},`0)
  name.vb: Execute(String, Action(Of T), T)
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Execute(System.String, System.Action<T>, T)
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Execute(System.String, System.Action(Of T), T)
  nameWithType: Sequence<T>.Execute(String, Action<T>, T)
  nameWithType.vb: Sequence(Of T).Execute(String, Action(Of T), T)
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Execute
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Execute
  nameWithType: Sequence<T>.Execute
  nameWithType.vb: Sequence(Of T).Execute
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Parent
  name: Parent
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Parent
  commentId: P:ALE.ETLBox.ControlFlow.Sequence`1.Parent
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Parent
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Parent
  nameWithType: Sequence<T>.Parent
  nameWithType.vb: Sequence(Of T).Parent
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Parent*
  name: Parent
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Parent_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence`1.Parent
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Parent
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Parent
  nameWithType: Sequence<T>.Parent
  nameWithType.vb: Sequence(Of T).Parent
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Tasks
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Tasks
  commentId: P:ALE.ETLBox.ControlFlow.Sequence`1.Tasks
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Tasks
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Tasks
  nameWithType: Sequence<T>.Tasks
  nameWithType.vb: Sequence(Of T).Tasks
- uid: ALE.ETLBox.ControlFlow.Sequence`1.Tasks*
  name: Tasks
  href: api/ALE.ETLBox.ControlFlow.Sequence-1.html#ALE_ETLBox_ControlFlow_Sequence_1_Tasks_
  commentId: Overload:ALE.ETLBox.ControlFlow.Sequence`1.Tasks
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.Sequence<T>.Tasks
  fullName.vb: ALE.ETLBox.ControlFlow.Sequence(Of T).Tasks
  nameWithType: Sequence<T>.Tasks
  nameWithType.vb: Sequence(Of T).Tasks
- uid: ALE.ETLBox.ControlFlow.SqlTask
  name: SqlTask
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html
  commentId: T:ALE.ETLBox.ControlFlow.SqlTask
  fullName: ALE.ETLBox.ControlFlow.SqlTask
  nameWithType: SqlTask
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor
  name: SqlTask()
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask()
  nameWithType: SqlTask.SqlTask()
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(ALE.ETLBox.ITask,System.String)
  name: SqlTask(ITask, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_ALE_ETLBox_ITask_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(ALE.ETLBox.ITask,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(ALE.ETLBox.ITask, System.String)
  nameWithType: SqlTask.SqlTask(ITask, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String)
  name: SqlTask(String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String)
  nameWithType: SqlTask.SqlTask(String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  name: SqlTask(String, FileConnectionManager)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_ALE_ETLBox_ConnectionManager_FileConnectionManager_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager)
  nameWithType: SqlTask.SqlTask(String, FileConnectionManager)
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: SqlTask(String, FileConnectionManager, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_ALE_ETLBox_ConnectionManager_FileConnectionManager_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: SqlTask(String, FileConnectionManager, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.SqlTask(String, FileConnectionManager, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.SqlTask(String, FileConnectionManager, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String)
  name: SqlTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String)
  nameWithType: SqlTask.SqlTask(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: SqlTask(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: SqlTask(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: SqlTask.SqlTask(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: SqlTask.SqlTask(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name: SqlTask(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name.vb: SqlTask(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: SqlTask.SqlTask(String, String, Action<Object>[])
  nameWithType.vb: SqlTask.SqlTask(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: SqlTask(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: SqlTask(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.SqlTask(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.SqlTask(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action,System.Action,System.Action{System.Object}[])
  name: SqlTask(String, String, IEnumerable<QueryParameter>, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action,System.Action,System.Action{System.Object}[])
  name.vb: SqlTask(String, String, IEnumerable(Of QueryParameter), Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: SqlTask.SqlTask(String, String, IEnumerable<QueryParameter>, Action, Action, Action<Object>[])
  nameWithType.vb: SqlTask.SqlTask(String, String, IEnumerable(Of QueryParameter), Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name: SqlTask(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.#ctor(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name.vb: SqlTask(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.SqlTask(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action(Of System.Object)())
  nameWithType: SqlTask.SqlTask(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  nameWithType.vb: SqlTask.SqlTask(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.#ctor*
  name: SqlTask
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.SqlTask
  nameWithType: SqlTask.SqlTask
- uid: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert(System.String,ALE.ETLBox.ITableData,System.String)
  name: BulkInsert(String, ITableData, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_BulkInsert_System_String_ALE_ETLBox_ITableData_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.BulkInsert(System.String,ALE.ETLBox.ITableData,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert(System.String, ALE.ETLBox.ITableData, System.String)
  nameWithType: SqlTask.BulkInsert(String, ITableData, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert*
  name: BulkInsert
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_BulkInsert_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.BulkInsert
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.BulkInsert
  nameWithType: SqlTask.BulkInsert
- uid: ALE.ETLBox.ControlFlow.SqlTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.Execute
  fullName: ALE.ETLBox.ControlFlow.SqlTask.Execute()
  nameWithType: SqlTask.Execute()
- uid: ALE.ETLBox.ControlFlow.SqlTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.Execute
  nameWithType: SqlTask.Execute
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  name: ExecuteNonQuery(String, FileConnectionManager)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_System_String_ALE_ETLBox_ConnectionManager_FileConnectionManager_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager)
  nameWithType: SqlTask.ExecuteNonQuery(String, FileConnectionManager)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteNonQuery(String, FileConnectionManager, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_System_String_ALE_ETLBox_ConnectionManager_FileConnectionManager_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteNonQuery(String, FileConnectionManager, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteNonQuery(String, FileConnectionManager, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteNonQuery(String, FileConnectionManager, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,System.String)
  name: ExecuteNonQuery(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String, System.String)
  nameWithType: SqlTask.ExecuteNonQuery(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteNonQuery(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteNonQuery(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteNonQuery(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteNonQuery(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteNonQuery
  nameWithType: SqlTask.ExecuteNonQuery
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: ExecuteReader(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReader(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(String, String, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action,System.Action,System.Action{System.Object}[])
  name: ExecuteReader(String, String, IEnumerable<QueryParameter>, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action,System.Action,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, IEnumerable(Of QueryParameter), Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(String, String, IEnumerable<QueryParameter>, Action, Action, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(String, String, IEnumerable(Of QueryParameter), Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name: ExecuteReader(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReader(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReader(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReader
  nameWithType: SqlTask.ExecuteReader
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReaderSingleLine(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReaderSingleLine_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReaderSingleLine(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReaderSingleLine(String, String, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReaderSingleLine(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name: ExecuteReaderSingleLine(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReaderSingleLine_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter},System.Action{System.Object}[])
  name.vb: ExecuteReaderSingleLine(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter), System.Action(Of System.Object)())
  nameWithType: SqlTask.ExecuteReaderSingleLine(String, String, IEnumerable<QueryParameter>, Action<Object>[])
  nameWithType.vb: SqlTask.ExecuteReaderSingleLine(String, String, IEnumerable(Of QueryParameter), Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine*
  name: ExecuteReaderSingleLine
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteReaderSingleLine_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteReaderSingleLine
  nameWithType: SqlTask.ExecuteReaderSingleLine
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String,System.String)
  name: ExecuteScalar(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String, System.String)
  nameWithType: SqlTask.ExecuteScalar(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteScalar(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteScalar(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar
  nameWithType: SqlTask.ExecuteScalar
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(System.String,System.String)
  name: ExecuteScalar<T>(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar__1_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(System.String,System.String)
  name.vb: ExecuteScalar(Of T)(String, String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar<T>(System.String, System.String)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(Of T)(System.String, System.String)
  nameWithType: SqlTask.ExecuteScalar<T>(String, String)
  nameWithType.vb: SqlTask.ExecuteScalar(Of T)(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalar<T>(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalar__1_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar``1(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalar(Of T)(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar<T>(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalar(Of T)(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteScalar<T>(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteScalar(Of T)(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String,System.String)
  name: ExecuteScalarAsBool(String, String)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalarAsBool_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String, System.String)
  nameWithType: SqlTask.ExecuteScalarAsBool(String, String)
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name: ExecuteScalarAsBool(String, String, IEnumerable<QueryParameter>)
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalarAsBool_System_String_System_String_System_Collections_Generic_IEnumerable_ALE_ETLBox_QueryParameter__
  commentId: M:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String,System.String,System.Collections.Generic.IEnumerable{ALE.ETLBox.QueryParameter})
  name.vb: ExecuteScalarAsBool(String, String, IEnumerable(Of QueryParameter))
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String, System.String, System.Collections.Generic.IEnumerable<ALE.ETLBox.QueryParameter>)
  fullName.vb: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool(System.String, System.String, System.Collections.Generic.IEnumerable(Of ALE.ETLBox.QueryParameter))
  nameWithType: SqlTask.ExecuteScalarAsBool(String, String, IEnumerable<QueryParameter>)
  nameWithType.vb: SqlTask.ExecuteScalarAsBool(String, String, IEnumerable(Of QueryParameter))
- uid: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool*
  name: ExecuteScalarAsBool
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ExecuteScalarAsBool_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ExecuteScalarAsBool
  nameWithType: SqlTask.ExecuteScalarAsBool
- uid: ALE.ETLBox.ControlFlow.SqlTask.ParameterList
  name: ParameterList
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ParameterList
  commentId: P:ALE.ETLBox.ControlFlow.SqlTask.ParameterList
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ParameterList
  nameWithType: SqlTask.ParameterList
- uid: ALE.ETLBox.ControlFlow.SqlTask.ParameterList*
  name: ParameterList
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_ParameterList_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.ParameterList
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.ParameterList
  nameWithType: SqlTask.ParameterList
- uid: ALE.ETLBox.ControlFlow.SqlTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.SqlTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.SqlTask.TaskName
  nameWithType: SqlTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.TaskName
  nameWithType: SqlTask.TaskName
- uid: ALE.ETLBox.ControlFlow.SqlTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.SqlTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.SqlTask.TaskType
  nameWithType: SqlTask.TaskType
- uid: ALE.ETLBox.ControlFlow.SqlTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.SqlTask.html#ALE_ETLBox_ControlFlow_SqlTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.SqlTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.SqlTask.TaskType
  nameWithType: SqlTask.TaskType
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask
  name: TruncateTableTask
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html
  commentId: T:ALE.ETLBox.ControlFlow.TruncateTableTask
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask
  nameWithType: TruncateTableTask
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor
  name: TruncateTableTask()
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TruncateTableTask()
  nameWithType: TruncateTableTask.TruncateTableTask()
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor(System.String)
  name: TruncateTableTask(String)
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TruncateTableTask(System.String)
  nameWithType: TruncateTableTask.TruncateTableTask(String)
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor*
  name: TruncateTableTask
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TruncateTableTask
  nameWithType: TruncateTableTask.TruncateTableTask
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.TruncateTableTask.Execute
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Execute()
  nameWithType: TruncateTableTask.Execute()
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Execute
  nameWithType: TruncateTableTask.Execute
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Sql
  commentId: P:ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  nameWithType: TruncateTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Sql_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Sql
  nameWithType: TruncateTableTask.Sql
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TableName
  commentId: P:ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  nameWithType: TruncateTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TableName*
  name: TableName
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TableName_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TableName
  nameWithType: TruncateTableTask.TableName
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  nameWithType: TruncateTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskName
  nameWithType: TruncateTableTask.TaskName
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.TruncateTableTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskType
  nameWithType: TruncateTableTask.TaskType
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.TaskType
  nameWithType: TruncateTableTask.TaskType
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate(System.String)
  name: Truncate(String)
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Truncate_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate(System.String)
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate(System.String)
  nameWithType: TruncateTableTask.Truncate(String)
- uid: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate*
  name: Truncate
  href: api/ALE.ETLBox.ControlFlow.TruncateTableTask.html#ALE_ETLBox_ControlFlow_TruncateTableTask_Truncate_
  commentId: Overload:ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.TruncateTableTask.Truncate
  nameWithType: TruncateTableTask.Truncate
- uid: ALE.ETLBox.ControlFlow.XmlaTask
  name: XmlaTask
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html
  commentId: T:ALE.ETLBox.ControlFlow.XmlaTask
  fullName: ALE.ETLBox.ControlFlow.XmlaTask
  nameWithType: XmlaTask
- uid: ALE.ETLBox.ControlFlow.XmlaTask.#ctor
  name: XmlaTask()
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask__ctor
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.#ctor
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask()
  nameWithType: XmlaTask.XmlaTask()
- uid: ALE.ETLBox.ControlFlow.XmlaTask.#ctor(ALE.ETLBox.ITask,System.String)
  name: XmlaTask(ITask, String)
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask__ctor_ALE_ETLBox_ITask_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.#ctor(ALE.ETLBox.ITask,System.String)
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask(ALE.ETLBox.ITask, System.String)
  nameWithType: XmlaTask.XmlaTask(ITask, String)
- uid: ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String)
  name: XmlaTask(String)
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask__ctor_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String)
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask(System.String)
  nameWithType: XmlaTask.XmlaTask(String)
- uid: ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  name: XmlaTask(String, FileConnectionManager)
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask__ctor_System_String_ALE_ETLBox_ConnectionManager_FileConnectionManager_
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager)
  nameWithType: XmlaTask.XmlaTask(String, FileConnectionManager)
- uid: ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String,System.String)
  name: XmlaTask(String, String)
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask(System.String, System.String)
  nameWithType: XmlaTask.XmlaTask(String, String)
- uid: ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: XmlaTask(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask__ctor_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: XmlaTask(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: XmlaTask.XmlaTask(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: XmlaTask.XmlaTask(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name: XmlaTask(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask__ctor_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.#ctor(System.String,System.String,System.Action{System.Object}[])
  name.vb: XmlaTask(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: XmlaTask.XmlaTask(String, String, Action<Object>[])
  nameWithType.vb: XmlaTask.XmlaTask(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.XmlaTask.#ctor*
  name: XmlaTask
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask__ctor_
  commentId: Overload:ALE.ETLBox.ControlFlow.XmlaTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.XmlaTask
  nameWithType: XmlaTask.XmlaTask
- uid: ALE.ETLBox.ControlFlow.XmlaTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_Execute
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.Execute
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.Execute()
  nameWithType: XmlaTask.Execute()
- uid: ALE.ETLBox.ControlFlow.XmlaTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_Execute_
  commentId: Overload:ALE.ETLBox.ControlFlow.XmlaTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.Execute
  nameWithType: XmlaTask.Execute
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteNonQuery(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  name: ExecuteNonQuery(String, FileConnectionManager)
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteNonQuery_System_String_ALE_ETLBox_ConnectionManager_FileConnectionManager_
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteNonQuery(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager)
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteNonQuery(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager)
  nameWithType: XmlaTask.ExecuteNonQuery(String, FileConnectionManager)
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteNonQuery(System.String,System.String)
  name: ExecuteNonQuery(String, String)
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteNonQuery_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteNonQuery(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteNonQuery(System.String, System.String)
  nameWithType: XmlaTask.ExecuteNonQuery(String, String)
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteNonQuery*
  name: ExecuteNonQuery
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteNonQuery_
  commentId: Overload:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteNonQuery
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteNonQuery
  nameWithType: XmlaTask.ExecuteNonQuery
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager,System.Action,System.Action,System.Action{System.Object}[])
  name: ExecuteReader(String, FileConnectionManager, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteReader_System_String_ALE_ETLBox_ConnectionManager_FileConnectionManager_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String,ALE.ETLBox.ConnectionManager.FileConnectionManager,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, FileConnectionManager, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String, ALE.ETLBox.ConnectionManager.FileConnectionManager, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: XmlaTask.ExecuteReader(String, FileConnectionManager, Action, Action, Action<Object>[])
  nameWithType.vb: XmlaTask.ExecuteReader(String, FileConnectionManager, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name: ExecuteReader(String, String, Action, Action, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteReader_System_String_System_String_System_Action_System_Action_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String,System.String,System.Action,System.Action,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, Action, Action, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String, System.String, System.Action, System.Action, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String, System.String, System.Action, System.Action, System.Action(Of System.Object)())
  nameWithType: XmlaTask.ExecuteReader(String, String, Action, Action, Action<Object>[])
  nameWithType.vb: XmlaTask.ExecuteReader(String, String, Action, Action, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReader(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteReader_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReader(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: XmlaTask.ExecuteReader(String, String, Action<Object>[])
  nameWithType.vb: XmlaTask.ExecuteReader(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader*
  name: ExecuteReader
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteReader_
  commentId: Overload:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReader
  nameWithType: XmlaTask.ExecuteReader
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReaderSingleLine(System.String,System.String,System.Action{System.Object}[])
  name: ExecuteReaderSingleLine(String, String, Action<Object>[])
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteReaderSingleLine_System_String_System_String_System_Action_System_Object____
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReaderSingleLine(System.String,System.String,System.Action{System.Object}[])
  name.vb: ExecuteReaderSingleLine(String, String, Action(Of Object)())
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReaderSingleLine(System.String, System.String, System.Action<System.Object>[])
  fullName.vb: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReaderSingleLine(System.String, System.String, System.Action(Of System.Object)())
  nameWithType: XmlaTask.ExecuteReaderSingleLine(String, String, Action<Object>[])
  nameWithType.vb: XmlaTask.ExecuteReaderSingleLine(String, String, Action(Of Object)())
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReaderSingleLine*
  name: ExecuteReaderSingleLine
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteReaderSingleLine_
  commentId: Overload:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReaderSingleLine
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteReaderSingleLine
  nameWithType: XmlaTask.ExecuteReaderSingleLine
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar(System.String,System.String)
  name: ExecuteScalar(String, String)
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteScalar_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar(System.String, System.String)
  nameWithType: XmlaTask.ExecuteScalar(String, String)
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar*
  name: ExecuteScalar
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteScalar_
  commentId: Overload:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar
  nameWithType: XmlaTask.ExecuteScalar
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar``1(System.String,System.String)
  name: ExecuteScalar<T>(String, String)
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteScalar__1_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar``1(System.String,System.String)
  name.vb: ExecuteScalar(Of T)(String, String)
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar<T>(System.String, System.String)
  fullName.vb: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalar(Of T)(System.String, System.String)
  nameWithType: XmlaTask.ExecuteScalar<T>(String, String)
  nameWithType.vb: XmlaTask.ExecuteScalar(Of T)(String, String)
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalarAsBool(System.String,System.String)
  name: ExecuteScalarAsBool(String, String)
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteScalarAsBool_System_String_System_String_
  commentId: M:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalarAsBool(System.String,System.String)
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalarAsBool(System.String, System.String)
  nameWithType: XmlaTask.ExecuteScalarAsBool(String, String)
- uid: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalarAsBool*
  name: ExecuteScalarAsBool
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_ExecuteScalarAsBool_
  commentId: Overload:ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalarAsBool
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.ExecuteScalarAsBool
  nameWithType: XmlaTask.ExecuteScalarAsBool
- uid: ALE.ETLBox.ControlFlow.XmlaTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_TaskName
  commentId: P:ALE.ETLBox.ControlFlow.XmlaTask.TaskName
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.TaskName
  nameWithType: XmlaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.XmlaTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_TaskName_
  commentId: Overload:ALE.ETLBox.ControlFlow.XmlaTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.TaskName
  nameWithType: XmlaTask.TaskName
- uid: ALE.ETLBox.ControlFlow.XmlaTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_TaskType
  commentId: P:ALE.ETLBox.ControlFlow.XmlaTask.TaskType
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.TaskType
  nameWithType: XmlaTask.TaskType
- uid: ALE.ETLBox.ControlFlow.XmlaTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ControlFlow.XmlaTask.html#ALE_ETLBox_ControlFlow_XmlaTask_TaskType_
  commentId: Overload:ALE.ETLBox.ControlFlow.XmlaTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ControlFlow.XmlaTask.TaskType
  nameWithType: XmlaTask.TaskType
- uid: ALE.ETLBox.DataFlow
  name: ALE.ETLBox.DataFlow
  href: api/ALE.ETLBox.DataFlow.html
  commentId: N:ALE.ETLBox.DataFlow
  fullName: ALE.ETLBox.DataFlow
  nameWithType: ALE.ETLBox.DataFlow
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1
  name: BlockTransformation<TInput>
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html
  commentId: T:ALE.ETLBox.DataFlow.BlockTransformation`1
  name.vb: BlockTransformation(Of TInput)
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput)
  nameWithType: BlockTransformation<TInput>
  nameWithType.vb: BlockTransformation(Of TInput)
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor
  name: BlockTransformation()
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.BlockTransformation()
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).BlockTransformation()
  nameWithType: BlockTransformation<TInput>.BlockTransformation()
  nameWithType.vb: BlockTransformation(Of TInput).BlockTransformation()
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor(System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`0}})
  name: BlockTransformation(Func<List<TInput>, List<TInput>>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1__ctor_System_Func_System_Collections_Generic_List__0__System_Collections_Generic_List__0___
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor(System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`0}})
  name.vb: BlockTransformation(Func(Of List(Of TInput), List(Of TInput)))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.BlockTransformation(System.Func<System.Collections.Generic.List<TInput>, System.Collections.Generic.List<TInput>>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).BlockTransformation(System.Func(Of System.Collections.Generic.List(Of TInput), System.Collections.Generic.List(Of TInput)))
  nameWithType: BlockTransformation<TInput>.BlockTransformation(Func<List<TInput>, List<TInput>>)
  nameWithType.vb: BlockTransformation(Of TInput).BlockTransformation(Func(Of List(Of TInput), List(Of TInput)))
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor(System.String,System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`0}})
  name: BlockTransformation(String, Func<List<TInput>, List<TInput>>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1__ctor_System_String_System_Func_System_Collections_Generic_List__0__System_Collections_Generic_List__0___
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor(System.String,System.Func{System.Collections.Generic.List{`0},System.Collections.Generic.List{`0}})
  name.vb: BlockTransformation(String, Func(Of List(Of TInput), List(Of TInput)))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.BlockTransformation(System.String, System.Func<System.Collections.Generic.List<TInput>, System.Collections.Generic.List<TInput>>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).BlockTransformation(System.String, System.Func(Of System.Collections.Generic.List(Of TInput), System.Collections.Generic.List(Of TInput)))
  nameWithType: BlockTransformation<TInput>.BlockTransformation(String, Func<List<TInput>, List<TInput>>)
  nameWithType.vb: BlockTransformation(Of TInput).BlockTransformation(String, Func(Of List(Of TInput), List(Of TInput)))
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor*
  name: BlockTransformation
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.BlockTransformation
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).BlockTransformation
  nameWithType: BlockTransformation<TInput>.BlockTransformation
  nameWithType.vb: BlockTransformation(Of TInput).BlockTransformation
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.BlockTransformationFunc
  name: BlockTransformationFunc
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_BlockTransformationFunc
  commentId: P:ALE.ETLBox.DataFlow.BlockTransformation`1.BlockTransformationFunc
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.BlockTransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).BlockTransformationFunc
  nameWithType: BlockTransformation<TInput>.BlockTransformationFunc
  nameWithType.vb: BlockTransformation(Of TInput).BlockTransformationFunc
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.BlockTransformationFunc*
  name: BlockTransformationFunc
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_BlockTransformationFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`1.BlockTransformationFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.BlockTransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).BlockTransformationFunc
  nameWithType: BlockTransformation<TInput>.BlockTransformationFunc
  nameWithType.vb: BlockTransformation(Of TInput).BlockTransformationFunc
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`1.Execute
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).Execute()
  nameWithType: BlockTransformation<TInput>.Execute()
  nameWithType.vb: BlockTransformation(Of TInput).Execute()
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).Execute
  nameWithType: BlockTransformation<TInput>.Execute
  nameWithType.vb: BlockTransformation(Of TInput).Execute
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TInput>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TInput))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput))
  nameWithType: BlockTransformation<TInput>.LinkTo(IDataFlowLinkTarget<TInput>)
  nameWithType.vb: BlockTransformation(Of TInput).LinkTo(IDataFlowLinkTarget(Of TInput))
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TInput>, Predicate<TInput>)
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.BlockTransformation`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TInput), Predicate(Of TInput))
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>, System.Predicate<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput), System.Predicate(Of TInput))
  nameWithType: BlockTransformation<TInput>.LinkTo(IDataFlowLinkTarget<TInput>, Predicate<TInput>)
  nameWithType.vb: BlockTransformation(Of TInput).LinkTo(IDataFlowLinkTarget(Of TInput), Predicate(Of TInput))
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).LinkTo
  nameWithType: BlockTransformation<TInput>.LinkTo
  nameWithType.vb: BlockTransformation(Of TInput).LinkTo
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.BlockTransformation`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).SourceBlock
  nameWithType: BlockTransformation<TInput>.SourceBlock
  nameWithType.vb: BlockTransformation(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).SourceBlock
  nameWithType: BlockTransformation<TInput>.SourceBlock
  nameWithType.vb: BlockTransformation(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.BlockTransformation`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).TargetBlock
  nameWithType: BlockTransformation<TInput>.TargetBlock
  nameWithType.vb: BlockTransformation(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).TargetBlock
  nameWithType: BlockTransformation<TInput>.TargetBlock
  nameWithType.vb: BlockTransformation(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.BlockTransformation`1.TaskName
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).TaskName
  nameWithType: BlockTransformation<TInput>.TaskName
  nameWithType.vb: BlockTransformation(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).TaskName
  nameWithType: BlockTransformation<TInput>.TaskName
  nameWithType.vb: BlockTransformation(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_TaskType
  commentId: P:ALE.ETLBox.DataFlow.BlockTransformation`1.TaskType
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).TaskType
  nameWithType: BlockTransformation<TInput>.TaskType
  nameWithType.vb: BlockTransformation(Of TInput).TaskType
- uid: ALE.ETLBox.DataFlow.BlockTransformation`1.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.BlockTransformation-1.html#ALE_ETLBox_DataFlow_BlockTransformation_1_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.BlockTransformation`1.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.BlockTransformation<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.BlockTransformation(Of TInput).TaskType
  nameWithType: BlockTransformation<TInput>.TaskType
  nameWithType.vb: BlockTransformation(Of TInput).TaskType
- uid: ALE.ETLBox.DataFlow.CSVSource
  name: CSVSource
  href: api/ALE.ETLBox.DataFlow.CSVSource.html
  commentId: T:ALE.ETLBox.DataFlow.CSVSource
  fullName: ALE.ETLBox.DataFlow.CSVSource
  nameWithType: CSVSource
- uid: ALE.ETLBox.DataFlow.CSVSource.#ctor
  name: CSVSource()
  href: api/ALE.ETLBox.DataFlow.CSVSource.html#ALE_ETLBox_DataFlow_CSVSource__ctor
  commentId: M:ALE.ETLBox.DataFlow.CSVSource.#ctor
  fullName: ALE.ETLBox.DataFlow.CSVSource.CSVSource()
  nameWithType: CSVSource.CSVSource()
- uid: ALE.ETLBox.DataFlow.CSVSource.#ctor(System.String)
  name: CSVSource(String)
  href: api/ALE.ETLBox.DataFlow.CSVSource.html#ALE_ETLBox_DataFlow_CSVSource__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.CSVSource.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.CSVSource.CSVSource(System.String)
  nameWithType: CSVSource.CSVSource(String)
- uid: ALE.ETLBox.DataFlow.CSVSource.#ctor*
  name: CSVSource
  href: api/ALE.ETLBox.DataFlow.CSVSource.html#ALE_ETLBox_DataFlow_CSVSource__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource.CSVSource
  nameWithType: CSVSource.CSVSource
- uid: ALE.ETLBox.DataFlow.CSVSource`1
  name: CSVSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.CSVSource`1
  name.vb: CSVSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput)
  nameWithType: CSVSource<TOutput>
  nameWithType.vb: CSVSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.CSVSource`1.#ctor
  name: CSVSource()
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.CSVSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.CSVSource()
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).CSVSource()
  nameWithType: CSVSource<TOutput>.CSVSource()
  nameWithType.vb: CSVSource(Of TOutput).CSVSource()
- uid: ALE.ETLBox.DataFlow.CSVSource`1.#ctor(System.String)
  name: CSVSource(String)
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.CSVSource`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.CSVSource(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).CSVSource(System.String)
  nameWithType: CSVSource<TOutput>.CSVSource(String)
  nameWithType.vb: CSVSource(Of TOutput).CSVSource(String)
- uid: ALE.ETLBox.DataFlow.CSVSource`1.#ctor*
  name: CSVSource
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.CSVSource
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).CSVSource
  nameWithType: CSVSource<TOutput>.CSVSource
  nameWithType.vb: CSVSource(Of TOutput).CSVSource
- uid: ALE.ETLBox.DataFlow.CSVSource`1.AllowComments
  name: AllowComments
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_AllowComments
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.AllowComments
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.AllowComments
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).AllowComments
  nameWithType: CSVSource<TOutput>.AllowComments
  nameWithType.vb: CSVSource(Of TOutput).AllowComments
- uid: ALE.ETLBox.DataFlow.CSVSource`1.AllowComments*
  name: AllowComments
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_AllowComments_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.AllowComments
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.AllowComments
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).AllowComments
  nameWithType: CSVSource<TOutput>.AllowComments
  nameWithType.vb: CSVSource(Of TOutput).AllowComments
- uid: ALE.ETLBox.DataFlow.CSVSource`1.Comment
  name: Comment
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_Comment
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.Comment
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.Comment
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).Comment
  nameWithType: CSVSource<TOutput>.Comment
  nameWithType.vb: CSVSource(Of TOutput).Comment
- uid: ALE.ETLBox.DataFlow.CSVSource`1.Comment*
  name: Comment
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_Comment_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.Comment
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.Comment
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).Comment
  nameWithType: CSVSource<TOutput>.Comment
  nameWithType.vb: CSVSource(Of TOutput).Comment
- uid: ALE.ETLBox.DataFlow.CSVSource`1.Delimiter
  name: Delimiter
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_Delimiter
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.Delimiter
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.Delimiter
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).Delimiter
  nameWithType: CSVSource<TOutput>.Delimiter
  nameWithType.vb: CSVSource(Of TOutput).Delimiter
- uid: ALE.ETLBox.DataFlow.CSVSource`1.Delimiter*
  name: Delimiter
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_Delimiter_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.Delimiter
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.Delimiter
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).Delimiter
  nameWithType: CSVSource<TOutput>.Delimiter
  nameWithType.vb: CSVSource(Of TOutput).Delimiter
- uid: ALE.ETLBox.DataFlow.CSVSource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.CSVSource`1.Execute
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).Execute()
  nameWithType: CSVSource<TOutput>.Execute()
  nameWithType.vb: CSVSource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.CSVSource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).Execute
  nameWithType: CSVSource<TOutput>.Execute
  nameWithType.vb: CSVSource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.CSVSource`1.ExecuteAsync
  name: ExecuteAsync()
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_ExecuteAsync
  commentId: M:ALE.ETLBox.DataFlow.CSVSource`1.ExecuteAsync
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.ExecuteAsync()
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).ExecuteAsync()
  nameWithType: CSVSource<TOutput>.ExecuteAsync()
  nameWithType.vb: CSVSource(Of TOutput).ExecuteAsync()
- uid: ALE.ETLBox.DataFlow.CSVSource`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_ExecuteAsync_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.ExecuteAsync
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.ExecuteAsync
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).ExecuteAsync
  nameWithType: CSVSource<TOutput>.ExecuteAsync
  nameWithType.vb: CSVSource(Of TOutput).ExecuteAsync
- uid: ALE.ETLBox.DataFlow.CSVSource`1.FieldHeaders
  name: FieldHeaders
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_FieldHeaders
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.FieldHeaders
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.FieldHeaders
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).FieldHeaders
  nameWithType: CSVSource<TOutput>.FieldHeaders
  nameWithType.vb: CSVSource(Of TOutput).FieldHeaders
- uid: ALE.ETLBox.DataFlow.CSVSource`1.FieldHeaders*
  name: FieldHeaders
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_FieldHeaders_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.FieldHeaders
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.FieldHeaders
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).FieldHeaders
  nameWithType: CSVSource<TOutput>.FieldHeaders
  nameWithType.vb: CSVSource(Of TOutput).FieldHeaders
- uid: ALE.ETLBox.DataFlow.CSVSource`1.FileName
  name: FileName
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_FileName
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.FileName
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.FileName
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).FileName
  nameWithType: CSVSource<TOutput>.FileName
  nameWithType.vb: CSVSource(Of TOutput).FileName
- uid: ALE.ETLBox.DataFlow.CSVSource`1.FileName*
  name: FileName
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_FileName_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.FileName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.FileName
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).FileName
  nameWithType: CSVSource<TOutput>.FileName
  nameWithType.vb: CSVSource(Of TOutput).FileName
- uid: ALE.ETLBox.DataFlow.CSVSource`1.IgnoreBlankLines
  name: IgnoreBlankLines
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_IgnoreBlankLines
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.IgnoreBlankLines
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.IgnoreBlankLines
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).IgnoreBlankLines
  nameWithType: CSVSource<TOutput>.IgnoreBlankLines
  nameWithType.vb: CSVSource(Of TOutput).IgnoreBlankLines
- uid: ALE.ETLBox.DataFlow.CSVSource`1.IgnoreBlankLines*
  name: IgnoreBlankLines
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_IgnoreBlankLines_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.IgnoreBlankLines
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.IgnoreBlankLines
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).IgnoreBlankLines
  nameWithType: CSVSource<TOutput>.IgnoreBlankLines
  nameWithType.vb: CSVSource(Of TOutput).IgnoreBlankLines
- uid: ALE.ETLBox.DataFlow.CSVSource`1.IsHeaderRead
  name: IsHeaderRead
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_IsHeaderRead
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.IsHeaderRead
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.IsHeaderRead
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).IsHeaderRead
  nameWithType: CSVSource<TOutput>.IsHeaderRead
  nameWithType.vb: CSVSource(Of TOutput).IsHeaderRead
- uid: ALE.ETLBox.DataFlow.CSVSource`1.IsHeaderRead*
  name: IsHeaderRead
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_IsHeaderRead_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.IsHeaderRead
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.IsHeaderRead
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).IsHeaderRead
  nameWithType: CSVSource<TOutput>.IsHeaderRead
  nameWithType.vb: CSVSource(Of TOutput).IsHeaderRead
- uid: ALE.ETLBox.DataFlow.CSVSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.CSVSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: CSVSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: CSVSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.CSVSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.CSVSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: CSVSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: CSVSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.CSVSource`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).LinkTo
  nameWithType: CSVSource<TOutput>.LinkTo
  nameWithType.vb: CSVSource(Of TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.CSVSource`1.Quote
  name: Quote
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_Quote
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.Quote
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.Quote
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).Quote
  nameWithType: CSVSource<TOutput>.Quote
  nameWithType.vb: CSVSource(Of TOutput).Quote
- uid: ALE.ETLBox.DataFlow.CSVSource`1.Quote*
  name: Quote
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_Quote_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.Quote
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.Quote
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).Quote
  nameWithType: CSVSource<TOutput>.Quote
  nameWithType.vb: CSVSource(Of TOutput).Quote
- uid: ALE.ETLBox.DataFlow.CSVSource`1.SkipEmptyRecords
  name: SkipEmptyRecords
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_SkipEmptyRecords
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.SkipEmptyRecords
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.SkipEmptyRecords
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).SkipEmptyRecords
  nameWithType: CSVSource<TOutput>.SkipEmptyRecords
  nameWithType.vb: CSVSource(Of TOutput).SkipEmptyRecords
- uid: ALE.ETLBox.DataFlow.CSVSource`1.SkipEmptyRecords*
  name: SkipEmptyRecords
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_SkipEmptyRecords_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.SkipEmptyRecords
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.SkipEmptyRecords
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).SkipEmptyRecords
  nameWithType: CSVSource<TOutput>.SkipEmptyRecords
  nameWithType.vb: CSVSource(Of TOutput).SkipEmptyRecords
- uid: ALE.ETLBox.DataFlow.CSVSource`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).SourceBlock
  nameWithType: CSVSource<TOutput>.SourceBlock
  nameWithType.vb: CSVSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.CSVSource`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).SourceBlock
  nameWithType: CSVSource<TOutput>.SourceBlock
  nameWithType.vb: CSVSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.CSVSource`1.SourceCommentRows
  name: SourceCommentRows
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_SourceCommentRows
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.SourceCommentRows
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.SourceCommentRows
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).SourceCommentRows
  nameWithType: CSVSource<TOutput>.SourceCommentRows
  nameWithType.vb: CSVSource(Of TOutput).SourceCommentRows
- uid: ALE.ETLBox.DataFlow.CSVSource`1.SourceCommentRows*
  name: SourceCommentRows
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_SourceCommentRows_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.SourceCommentRows
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.SourceCommentRows
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).SourceCommentRows
  nameWithType: CSVSource<TOutput>.SourceCommentRows
  nameWithType.vb: CSVSource(Of TOutput).SourceCommentRows
- uid: ALE.ETLBox.DataFlow.CSVSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).TaskName
  nameWithType: CSVSource<TOutput>.TaskName
  nameWithType.vb: CSVSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.CSVSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).TaskName
  nameWithType: CSVSource<TOutput>.TaskName
  nameWithType.vb: CSVSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.CSVSource`1.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_TaskType
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.TaskType
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).TaskType
  nameWithType: CSVSource<TOutput>.TaskType
  nameWithType.vb: CSVSource(Of TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.CSVSource`1.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).TaskType
  nameWithType: CSVSource<TOutput>.TaskType
  nameWithType.vb: CSVSource(Of TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.CSVSource`1.TrimFields
  name: TrimFields
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_TrimFields
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.TrimFields
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.TrimFields
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).TrimFields
  nameWithType: CSVSource<TOutput>.TrimFields
  nameWithType.vb: CSVSource(Of TOutput).TrimFields
- uid: ALE.ETLBox.DataFlow.CSVSource`1.TrimFields*
  name: TrimFields
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_TrimFields_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.TrimFields
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.TrimFields
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).TrimFields
  nameWithType: CSVSource<TOutput>.TrimFields
  nameWithType.vb: CSVSource(Of TOutput).TrimFields
- uid: ALE.ETLBox.DataFlow.CSVSource`1.TrimHeaders
  name: TrimHeaders
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_TrimHeaders
  commentId: P:ALE.ETLBox.DataFlow.CSVSource`1.TrimHeaders
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.TrimHeaders
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).TrimHeaders
  nameWithType: CSVSource<TOutput>.TrimHeaders
  nameWithType.vb: CSVSource(Of TOutput).TrimHeaders
- uid: ALE.ETLBox.DataFlow.CSVSource`1.TrimHeaders*
  name: TrimHeaders
  href: api/ALE.ETLBox.DataFlow.CSVSource-1.html#ALE_ETLBox_DataFlow_CSVSource_1_TrimHeaders_
  commentId: Overload:ALE.ETLBox.DataFlow.CSVSource`1.TrimHeaders
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CSVSource<TOutput>.TrimHeaders
  fullName.vb: ALE.ETLBox.DataFlow.CSVSource(Of TOutput).TrimHeaders
  nameWithType: CSVSource<TOutput>.TrimHeaders
  nameWithType.vb: CSVSource(Of TOutput).TrimHeaders
- uid: ALE.ETLBox.DataFlow.CustomDestination`1
  name: CustomDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.CustomDestination`1
  name.vb: CustomDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput)
  nameWithType: CustomDestination<TInput>
  nameWithType.vb: CustomDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.#ctor
  name: CustomDestination()
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.CustomDestination`1.#ctor
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.CustomDestination()
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).CustomDestination()
  nameWithType: CustomDestination<TInput>.CustomDestination()
  nameWithType.vb: CustomDestination(Of TInput).CustomDestination()
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.#ctor(System.Action{`0})
  name: CustomDestination(Action<TInput>)
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1__ctor_System_Action__0__
  commentId: M:ALE.ETLBox.DataFlow.CustomDestination`1.#ctor(System.Action{`0})
  name.vb: CustomDestination(Action(Of TInput))
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.CustomDestination(System.Action<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).CustomDestination(System.Action(Of TInput))
  nameWithType: CustomDestination<TInput>.CustomDestination(Action<TInput>)
  nameWithType.vb: CustomDestination(Of TInput).CustomDestination(Action(Of TInput))
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.#ctor*
  name: CustomDestination
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.CustomDestination
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).CustomDestination
  nameWithType: CustomDestination<TInput>.CustomDestination
  nameWithType.vb: CustomDestination(Of TInput).CustomDestination
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.CustomDestination`1.Execute
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).Execute()
  nameWithType: CustomDestination<TInput>.Execute()
  nameWithType.vb: CustomDestination(Of TInput).Execute()
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).Execute
  nameWithType: CustomDestination<TInput>.Execute
  nameWithType.vb: CustomDestination(Of TInput).Execute
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.CustomDestination`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).TargetBlock
  nameWithType: CustomDestination<TInput>.TargetBlock
  nameWithType.vb: CustomDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).TargetBlock
  nameWithType: CustomDestination<TInput>.TargetBlock
  nameWithType.vb: CustomDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.CustomDestination`1.TaskName
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).TaskName
  nameWithType: CustomDestination<TInput>.TaskName
  nameWithType.vb: CustomDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).TaskName
  nameWithType: CustomDestination<TInput>.TaskName
  nameWithType.vb: CustomDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_TaskType
  commentId: P:ALE.ETLBox.DataFlow.CustomDestination`1.TaskType
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).TaskType
  nameWithType: CustomDestination<TInput>.TaskType
  nameWithType.vb: CustomDestination(Of TInput).TaskType
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).TaskType
  nameWithType: CustomDestination<TInput>.TaskType
  nameWithType.vb: CustomDestination(Of TInput).TaskType
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.Wait
  name: Wait()
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_Wait
  commentId: M:ALE.ETLBox.DataFlow.CustomDestination`1.Wait
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.Wait()
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).Wait()
  nameWithType: CustomDestination<TInput>.Wait()
  nameWithType.vb: CustomDestination(Of TInput).Wait()
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.Wait*
  name: Wait
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_Wait_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.Wait
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.Wait
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).Wait
  nameWithType: CustomDestination<TInput>.Wait
  nameWithType.vb: CustomDestination(Of TInput).Wait
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.WriteAction
  name: WriteAction
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_WriteAction
  commentId: P:ALE.ETLBox.DataFlow.CustomDestination`1.WriteAction
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.WriteAction
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).WriteAction
  nameWithType: CustomDestination<TInput>.WriteAction
  nameWithType.vb: CustomDestination(Of TInput).WriteAction
- uid: ALE.ETLBox.DataFlow.CustomDestination`1.WriteAction*
  name: WriteAction
  href: api/ALE.ETLBox.DataFlow.CustomDestination-1.html#ALE_ETLBox_DataFlow_CustomDestination_1_WriteAction_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomDestination`1.WriteAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomDestination<TInput>.WriteAction
  fullName.vb: ALE.ETLBox.DataFlow.CustomDestination(Of TInput).WriteAction
  nameWithType: CustomDestination<TInput>.WriteAction
  nameWithType.vb: CustomDestination(Of TInput).WriteAction
- uid: ALE.ETLBox.DataFlow.CustomSource`1
  name: CustomSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.CustomSource`1
  name.vb: CustomSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput)
  nameWithType: CustomSource<TOutput>
  nameWithType.vb: CustomSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.CustomSource`1.#ctor
  name: CustomSource()
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.CustomSource()
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).CustomSource()
  nameWithType: CustomSource<TOutput>.CustomSource()
  nameWithType.vb: CustomSource(Of TOutput).CustomSource()
- uid: ALE.ETLBox.DataFlow.CustomSource`1.#ctor(System.Func{`0},System.Func{System.Boolean})
  name: CustomSource(Func<TOutput>, Func<Boolean>)
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1__ctor_System_Func__0__System_Func_System_Boolean__
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.#ctor(System.Func{`0},System.Func{System.Boolean})
  name.vb: CustomSource(Func(Of TOutput), Func(Of Boolean))
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.CustomSource(System.Func<TOutput>, System.Func<System.Boolean>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).CustomSource(System.Func(Of TOutput), System.Func(Of System.Boolean))
  nameWithType: CustomSource<TOutput>.CustomSource(Func<TOutput>, Func<Boolean>)
  nameWithType.vb: CustomSource(Of TOutput).CustomSource(Func(Of TOutput), Func(Of Boolean))
- uid: ALE.ETLBox.DataFlow.CustomSource`1.#ctor(System.String,System.Func{`0},System.Func{System.Boolean})
  name: CustomSource(String, Func<TOutput>, Func<Boolean>)
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1__ctor_System_String_System_Func__0__System_Func_System_Boolean__
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.#ctor(System.String,System.Func{`0},System.Func{System.Boolean})
  name.vb: CustomSource(String, Func(Of TOutput), Func(Of Boolean))
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.CustomSource(System.String, System.Func<TOutput>, System.Func<System.Boolean>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).CustomSource(System.String, System.Func(Of TOutput), System.Func(Of System.Boolean))
  nameWithType: CustomSource<TOutput>.CustomSource(String, Func<TOutput>, Func<Boolean>)
  nameWithType.vb: CustomSource(Of TOutput).CustomSource(String, Func(Of TOutput), Func(Of Boolean))
- uid: ALE.ETLBox.DataFlow.CustomSource`1.#ctor*
  name: CustomSource
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.CustomSource
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).CustomSource
  nameWithType: CustomSource<TOutput>.CustomSource
  nameWithType.vb: CustomSource(Of TOutput).CustomSource
- uid: ALE.ETLBox.DataFlow.CustomSource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.Execute
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).Execute()
  nameWithType: CustomSource<TOutput>.Execute()
  nameWithType.vb: CustomSource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.CustomSource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).Execute
  nameWithType: CustomSource<TOutput>.Execute
  nameWithType.vb: CustomSource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ExecuteAsync
  name: ExecuteAsync()
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ExecuteAsync
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.ExecuteAsync
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ExecuteAsync()
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ExecuteAsync()
  nameWithType: CustomSource<TOutput>.ExecuteAsync()
  nameWithType.vb: CustomSource(Of TOutput).ExecuteAsync()
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ExecuteAsync_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.ExecuteAsync
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ExecuteAsync
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ExecuteAsync
  nameWithType: CustomSource<TOutput>.ExecuteAsync
  nameWithType.vb: CustomSource(Of TOutput).ExecuteAsync
- uid: ALE.ETLBox.DataFlow.CustomSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: CustomSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: CustomSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.CustomSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.CustomSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: CustomSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: CustomSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.CustomSource`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).LinkTo
  nameWithType: CustomSource<TOutput>.LinkTo
  nameWithType.vb: CustomSource(Of TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ReadCompletedFunc
  name: ReadCompletedFunc
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ReadCompletedFunc
  commentId: P:ALE.ETLBox.DataFlow.CustomSource`1.ReadCompletedFunc
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ReadCompletedFunc
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ReadCompletedFunc
  nameWithType: CustomSource<TOutput>.ReadCompletedFunc
  nameWithType.vb: CustomSource(Of TOutput).ReadCompletedFunc
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ReadCompletedFunc*
  name: ReadCompletedFunc
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ReadCompletedFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.ReadCompletedFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ReadCompletedFunc
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ReadCompletedFunc
  nameWithType: CustomSource<TOutput>.ReadCompletedFunc
  nameWithType.vb: CustomSource(Of TOutput).ReadCompletedFunc
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ReadFunc
  name: ReadFunc
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ReadFunc
  commentId: P:ALE.ETLBox.DataFlow.CustomSource`1.ReadFunc
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ReadFunc
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ReadFunc
  nameWithType: CustomSource<TOutput>.ReadFunc
  nameWithType.vb: CustomSource(Of TOutput).ReadFunc
- uid: ALE.ETLBox.DataFlow.CustomSource`1.ReadFunc*
  name: ReadFunc
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_ReadFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.ReadFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.ReadFunc
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).ReadFunc
  nameWithType: CustomSource<TOutput>.ReadFunc
  nameWithType.vb: CustomSource(Of TOutput).ReadFunc
- uid: ALE.ETLBox.DataFlow.CustomSource`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.CustomSource`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).SourceBlock
  nameWithType: CustomSource<TOutput>.SourceBlock
  nameWithType.vb: CustomSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.CustomSource`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).SourceBlock
  nameWithType: CustomSource<TOutput>.SourceBlock
  nameWithType.vb: CustomSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.CustomSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.CustomSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).TaskName
  nameWithType: CustomSource<TOutput>.TaskName
  nameWithType.vb: CustomSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.CustomSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).TaskName
  nameWithType: CustomSource<TOutput>.TaskName
  nameWithType.vb: CustomSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.CustomSource`1.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_TaskType
  commentId: P:ALE.ETLBox.DataFlow.CustomSource`1.TaskType
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).TaskType
  nameWithType: CustomSource<TOutput>.TaskType
  nameWithType.vb: CustomSource(Of TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.CustomSource`1.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.CustomSource-1.html#ALE_ETLBox_DataFlow_CustomSource_1_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.CustomSource`1.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.CustomSource<TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.CustomSource(Of TOutput).TaskType
  nameWithType: CustomSource<TOutput>.TaskType
  nameWithType.vb: CustomSource(Of TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.DBDestination
  name: DBDestination
  href: api/ALE.ETLBox.DataFlow.DBDestination.html
  commentId: T:ALE.ETLBox.DataFlow.DBDestination
  fullName: ALE.ETLBox.DataFlow.DBDestination
  nameWithType: DBDestination
- uid: ALE.ETLBox.DataFlow.DBDestination.#ctor
  name: DBDestination()
  href: api/ALE.ETLBox.DataFlow.DBDestination.html#ALE_ETLBox_DataFlow_DBDestination__ctor
  commentId: M:ALE.ETLBox.DataFlow.DBDestination.#ctor
  fullName: ALE.ETLBox.DataFlow.DBDestination.DBDestination()
  nameWithType: DBDestination.DBDestination()
- uid: ALE.ETLBox.DataFlow.DBDestination.#ctor(ALE.ETLBox.TableDefinition)
  name: DBDestination(TableDefinition)
  href: api/ALE.ETLBox.DataFlow.DBDestination.html#ALE_ETLBox_DataFlow_DBDestination__ctor_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination.#ctor(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.DataFlow.DBDestination.DBDestination(ALE.ETLBox.TableDefinition)
  nameWithType: DBDestination.DBDestination(TableDefinition)
- uid: ALE.ETLBox.DataFlow.DBDestination.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  name: DBDestination(TableDefinition, Int32)
  href: api/ALE.ETLBox.DataFlow.DBDestination.html#ALE_ETLBox_DataFlow_DBDestination__ctor_ALE_ETLBox_TableDefinition_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DBDestination.DBDestination(ALE.ETLBox.TableDefinition, System.Int32)
  nameWithType: DBDestination.DBDestination(TableDefinition, Int32)
- uid: ALE.ETLBox.DataFlow.DBDestination.#ctor(System.Int32)
  name: DBDestination(Int32)
  href: api/ALE.ETLBox.DataFlow.DBDestination.html#ALE_ETLBox_DataFlow_DBDestination__ctor_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination.#ctor(System.Int32)
  fullName: ALE.ETLBox.DataFlow.DBDestination.DBDestination(System.Int32)
  nameWithType: DBDestination.DBDestination(Int32)
- uid: ALE.ETLBox.DataFlow.DBDestination.#ctor(System.String)
  name: DBDestination(String)
  href: api/ALE.ETLBox.DataFlow.DBDestination.html#ALE_ETLBox_DataFlow_DBDestination__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.DBDestination.DBDestination(System.String)
  nameWithType: DBDestination.DBDestination(String)
- uid: ALE.ETLBox.DataFlow.DBDestination.#ctor(System.String,ALE.ETLBox.TableDefinition,System.Int32)
  name: DBDestination(String, TableDefinition, Int32)
  href: api/ALE.ETLBox.DataFlow.DBDestination.html#ALE_ETLBox_DataFlow_DBDestination__ctor_System_String_ALE_ETLBox_TableDefinition_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination.#ctor(System.String,ALE.ETLBox.TableDefinition,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DBDestination.DBDestination(System.String, ALE.ETLBox.TableDefinition, System.Int32)
  nameWithType: DBDestination.DBDestination(String, TableDefinition, Int32)
- uid: ALE.ETLBox.DataFlow.DBDestination.#ctor(System.String,System.Int32)
  name: DBDestination(String, Int32)
  href: api/ALE.ETLBox.DataFlow.DBDestination.html#ALE_ETLBox_DataFlow_DBDestination__ctor_System_String_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination.#ctor(System.String,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DBDestination.DBDestination(System.String, System.Int32)
  nameWithType: DBDestination.DBDestination(String, Int32)
- uid: ALE.ETLBox.DataFlow.DBDestination.#ctor*
  name: DBDestination
  href: api/ALE.ETLBox.DataFlow.DBDestination.html#ALE_ETLBox_DataFlow_DBDestination__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination.DBDestination
  nameWithType: DBDestination.DBDestination
- uid: ALE.ETLBox.DataFlow.DBDestination`1
  name: DBDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.DBDestination`1
  name.vb: DBDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput)
  nameWithType: DBDestination<TInput>
  nameWithType.vb: DBDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.DBDestination`1.#ctor
  name: DBDestination()
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.DBDestination`1.#ctor
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DBDestination()
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DBDestination()
  nameWithType: DBDestination<TInput>.DBDestination()
  nameWithType.vb: DBDestination(Of TInput).DBDestination()
- uid: ALE.ETLBox.DataFlow.DBDestination`1.#ctor(ALE.ETLBox.TableDefinition)
  name: DBDestination(TableDefinition)
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1__ctor_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination`1.#ctor(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DBDestination(ALE.ETLBox.TableDefinition)
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DBDestination(ALE.ETLBox.TableDefinition)
  nameWithType: DBDestination<TInput>.DBDestination(TableDefinition)
  nameWithType.vb: DBDestination(Of TInput).DBDestination(TableDefinition)
- uid: ALE.ETLBox.DataFlow.DBDestination`1.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  name: DBDestination(TableDefinition, Int32)
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1__ctor_ALE_ETLBox_TableDefinition_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination`1.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DBDestination(ALE.ETLBox.TableDefinition, System.Int32)
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DBDestination(ALE.ETLBox.TableDefinition, System.Int32)
  nameWithType: DBDestination<TInput>.DBDestination(TableDefinition, Int32)
  nameWithType.vb: DBDestination(Of TInput).DBDestination(TableDefinition, Int32)
- uid: ALE.ETLBox.DataFlow.DBDestination`1.#ctor(System.Int32)
  name: DBDestination(Int32)
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1__ctor_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination`1.#ctor(System.Int32)
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DBDestination(System.Int32)
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DBDestination(System.Int32)
  nameWithType: DBDestination<TInput>.DBDestination(Int32)
  nameWithType.vb: DBDestination(Of TInput).DBDestination(Int32)
- uid: ALE.ETLBox.DataFlow.DBDestination`1.#ctor(System.String)
  name: DBDestination(String)
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DBDestination(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DBDestination(System.String)
  nameWithType: DBDestination<TInput>.DBDestination(String)
  nameWithType.vb: DBDestination(Of TInput).DBDestination(String)
- uid: ALE.ETLBox.DataFlow.DBDestination`1.#ctor(System.String,ALE.ETLBox.TableDefinition,System.Int32)
  name: DBDestination(String, TableDefinition, Int32)
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1__ctor_System_String_ALE_ETLBox_TableDefinition_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination`1.#ctor(System.String,ALE.ETLBox.TableDefinition,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DBDestination(System.String, ALE.ETLBox.TableDefinition, System.Int32)
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DBDestination(System.String, ALE.ETLBox.TableDefinition, System.Int32)
  nameWithType: DBDestination<TInput>.DBDestination(String, TableDefinition, Int32)
  nameWithType.vb: DBDestination(Of TInput).DBDestination(String, TableDefinition, Int32)
- uid: ALE.ETLBox.DataFlow.DBDestination`1.#ctor(System.String,System.Int32)
  name: DBDestination(String, Int32)
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1__ctor_System_String_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.DBDestination`1.#ctor(System.String,System.Int32)
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DBDestination(System.String, System.Int32)
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DBDestination(System.String, System.Int32)
  nameWithType: DBDestination<TInput>.DBDestination(String, Int32)
  nameWithType.vb: DBDestination(Of TInput).DBDestination(String, Int32)
- uid: ALE.ETLBox.DataFlow.DBDestination`1.#ctor*
  name: DBDestination
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DBDestination
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DBDestination
  nameWithType: DBDestination<TInput>.DBDestination
  nameWithType.vb: DBDestination(Of TInput).DBDestination
- uid: ALE.ETLBox.DataFlow.DBDestination`1.BeforeBatchWrite
  name: BeforeBatchWrite
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_BeforeBatchWrite
  commentId: P:ALE.ETLBox.DataFlow.DBDestination`1.BeforeBatchWrite
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.BeforeBatchWrite
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).BeforeBatchWrite
  nameWithType: DBDestination<TInput>.BeforeBatchWrite
  nameWithType.vb: DBDestination(Of TInput).BeforeBatchWrite
- uid: ALE.ETLBox.DataFlow.DBDestination`1.BeforeBatchWrite*
  name: BeforeBatchWrite
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_BeforeBatchWrite_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.BeforeBatchWrite
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.BeforeBatchWrite
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).BeforeBatchWrite
  nameWithType: DBDestination<TInput>.BeforeBatchWrite
  nameWithType.vb: DBDestination(Of TInput).BeforeBatchWrite
- uid: ALE.ETLBox.DataFlow.DBDestination`1.DestinationTableDefinition
  name: DestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_DestinationTableDefinition
  commentId: P:ALE.ETLBox.DataFlow.DBDestination`1.DestinationTableDefinition
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DestinationTableDefinition
  nameWithType: DBDestination<TInput>.DestinationTableDefinition
  nameWithType.vb: DBDestination(Of TInput).DestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DBDestination`1.DestinationTableDefinition*
  name: DestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_DestinationTableDefinition_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.DestinationTableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.DestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).DestinationTableDefinition
  nameWithType: DBDestination<TInput>.DestinationTableDefinition
  nameWithType.vb: DBDestination(Of TInput).DestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DBDestination`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.DBDestination`1.Execute
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).Execute()
  nameWithType: DBDestination<TInput>.Execute()
  nameWithType.vb: DBDestination(Of TInput).Execute()
- uid: ALE.ETLBox.DataFlow.DBDestination`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).Execute
  nameWithType: DBDestination<TInput>.Execute
  nameWithType.vb: DBDestination(Of TInput).Execute
- uid: ALE.ETLBox.DataFlow.DBDestination`1.HasDestinationTableDefinition
  name: HasDestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_HasDestinationTableDefinition
  commentId: P:ALE.ETLBox.DataFlow.DBDestination`1.HasDestinationTableDefinition
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.HasDestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).HasDestinationTableDefinition
  nameWithType: DBDestination<TInput>.HasDestinationTableDefinition
  nameWithType.vb: DBDestination(Of TInput).HasDestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DBDestination`1.HasDestinationTableDefinition*
  name: HasDestinationTableDefinition
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_HasDestinationTableDefinition_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.HasDestinationTableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.HasDestinationTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).HasDestinationTableDefinition
  nameWithType: DBDestination<TInput>.HasDestinationTableDefinition
  nameWithType.vb: DBDestination(Of TInput).HasDestinationTableDefinition
- uid: ALE.ETLBox.DataFlow.DBDestination`1.HasTableName
  name: HasTableName
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_HasTableName
  commentId: P:ALE.ETLBox.DataFlow.DBDestination`1.HasTableName
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.HasTableName
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).HasTableName
  nameWithType: DBDestination<TInput>.HasTableName
  nameWithType.vb: DBDestination(Of TInput).HasTableName
- uid: ALE.ETLBox.DataFlow.DBDestination`1.HasTableName*
  name: HasTableName
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_HasTableName_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.HasTableName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.HasTableName
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).HasTableName
  nameWithType: DBDestination<TInput>.HasTableName
  nameWithType.vb: DBDestination(Of TInput).HasTableName
- uid: ALE.ETLBox.DataFlow.DBDestination`1.TableName
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_TableName
  commentId: P:ALE.ETLBox.DataFlow.DBDestination`1.TableName
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).TableName
  nameWithType: DBDestination<TInput>.TableName
  nameWithType.vb: DBDestination(Of TInput).TableName
- uid: ALE.ETLBox.DataFlow.DBDestination`1.TableName*
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_TableName_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).TableName
  nameWithType: DBDestination<TInput>.TableName
  nameWithType.vb: DBDestination(Of TInput).TableName
- uid: ALE.ETLBox.DataFlow.DBDestination`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.DBDestination`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).TargetBlock
  nameWithType: DBDestination<TInput>.TargetBlock
  nameWithType.vb: DBDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.DBDestination`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).TargetBlock
  nameWithType: DBDestination<TInput>.TargetBlock
  nameWithType.vb: DBDestination(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.DBDestination`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.DBDestination`1.TaskName
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).TaskName
  nameWithType: DBDestination<TInput>.TaskName
  nameWithType.vb: DBDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.DBDestination`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).TaskName
  nameWithType: DBDestination<TInput>.TaskName
  nameWithType.vb: DBDestination(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.DBDestination`1.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_TaskType
  commentId: P:ALE.ETLBox.DataFlow.DBDestination`1.TaskType
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).TaskType
  nameWithType: DBDestination<TInput>.TaskType
  nameWithType.vb: DBDestination(Of TInput).TaskType
- uid: ALE.ETLBox.DataFlow.DBDestination`1.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).TaskType
  nameWithType: DBDestination<TInput>.TaskType
  nameWithType.vb: DBDestination(Of TInput).TaskType
- uid: ALE.ETLBox.DataFlow.DBDestination`1.Wait
  name: Wait()
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_Wait
  commentId: M:ALE.ETLBox.DataFlow.DBDestination`1.Wait
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.Wait()
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).Wait()
  nameWithType: DBDestination<TInput>.Wait()
  nameWithType.vb: DBDestination(Of TInput).Wait()
- uid: ALE.ETLBox.DataFlow.DBDestination`1.Wait*
  name: Wait
  href: api/ALE.ETLBox.DataFlow.DBDestination-1.html#ALE_ETLBox_DataFlow_DBDestination_1_Wait_
  commentId: Overload:ALE.ETLBox.DataFlow.DBDestination`1.Wait
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBDestination<TInput>.Wait
  fullName.vb: ALE.ETLBox.DataFlow.DBDestination(Of TInput).Wait
  nameWithType: DBDestination<TInput>.Wait
  nameWithType.vb: DBDestination(Of TInput).Wait
- uid: ALE.ETLBox.DataFlow.DBSource`1
  name: DBSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.DBSource`1
  name.vb: DBSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput)
  nameWithType: DBSource<TOutput>
  nameWithType.vb: DBSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.DBSource`1.#ctor
  name: DBSource()
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.DBSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.DBSource()
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).DBSource()
  nameWithType: DBSource<TOutput>.DBSource()
  nameWithType.vb: DBSource(Of TOutput).DBSource()
- uid: ALE.ETLBox.DataFlow.DBSource`1.#ctor(ALE.ETLBox.TableDefinition)
  name: DBSource(TableDefinition)
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1__ctor_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.DataFlow.DBSource`1.#ctor(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.DBSource(ALE.ETLBox.TableDefinition)
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).DBSource(ALE.ETLBox.TableDefinition)
  nameWithType: DBSource<TOutput>.DBSource(TableDefinition)
  nameWithType.vb: DBSource(Of TOutput).DBSource(TableDefinition)
- uid: ALE.ETLBox.DataFlow.DBSource`1.#ctor(System.String)
  name: DBSource(String)
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.DBSource`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.DBSource(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).DBSource(System.String)
  nameWithType: DBSource<TOutput>.DBSource(String)
  nameWithType.vb: DBSource(Of TOutput).DBSource(String)
- uid: ALE.ETLBox.DataFlow.DBSource`1.#ctor*
  name: DBSource
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.DBSource
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).DBSource
  nameWithType: DBSource<TOutput>.DBSource
  nameWithType.vb: DBSource(Of TOutput).DBSource
- uid: ALE.ETLBox.DataFlow.DBSource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.DBSource`1.Execute
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).Execute()
  nameWithType: DBSource<TOutput>.Execute()
  nameWithType.vb: DBSource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.DBSource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).Execute
  nameWithType: DBSource<TOutput>.Execute
  nameWithType.vb: DBSource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.DBSource`1.ExecuteAsync
  name: ExecuteAsync()
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_ExecuteAsync
  commentId: M:ALE.ETLBox.DataFlow.DBSource`1.ExecuteAsync
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.ExecuteAsync()
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).ExecuteAsync()
  nameWithType: DBSource<TOutput>.ExecuteAsync()
  nameWithType.vb: DBSource(Of TOutput).ExecuteAsync()
- uid: ALE.ETLBox.DataFlow.DBSource`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_ExecuteAsync_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.ExecuteAsync
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.ExecuteAsync
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).ExecuteAsync
  nameWithType: DBSource<TOutput>.ExecuteAsync
  nameWithType.vb: DBSource(Of TOutput).ExecuteAsync
- uid: ALE.ETLBox.DataFlow.DBSource`1.HasSourceTableDefinition
  name: HasSourceTableDefinition
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_HasSourceTableDefinition
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.HasSourceTableDefinition
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.HasSourceTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).HasSourceTableDefinition
  nameWithType: DBSource<TOutput>.HasSourceTableDefinition
  nameWithType.vb: DBSource(Of TOutput).HasSourceTableDefinition
- uid: ALE.ETLBox.DataFlow.DBSource`1.HasSourceTableDefinition*
  name: HasSourceTableDefinition
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_HasSourceTableDefinition_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.HasSourceTableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.HasSourceTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).HasSourceTableDefinition
  nameWithType: DBSource<TOutput>.HasSourceTableDefinition
  nameWithType.vb: DBSource(Of TOutput).HasSourceTableDefinition
- uid: ALE.ETLBox.DataFlow.DBSource`1.HasSql
  name: HasSql
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_HasSql
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.HasSql
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.HasSql
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).HasSql
  nameWithType: DBSource<TOutput>.HasSql
  nameWithType.vb: DBSource(Of TOutput).HasSql
- uid: ALE.ETLBox.DataFlow.DBSource`1.HasSql*
  name: HasSql
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_HasSql_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.HasSql
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.HasSql
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).HasSql
  nameWithType: DBSource<TOutput>.HasSql
  nameWithType.vb: DBSource(Of TOutput).HasSql
- uid: ALE.ETLBox.DataFlow.DBSource`1.HasTableName
  name: HasTableName
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_HasTableName
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.HasTableName
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.HasTableName
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).HasTableName
  nameWithType: DBSource<TOutput>.HasTableName
  nameWithType.vb: DBSource(Of TOutput).HasTableName
- uid: ALE.ETLBox.DataFlow.DBSource`1.HasTableName*
  name: HasTableName
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_HasTableName_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.HasTableName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.HasTableName
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).HasTableName
  nameWithType: DBSource<TOutput>.HasTableName
  nameWithType.vb: DBSource(Of TOutput).HasTableName
- uid: ALE.ETLBox.DataFlow.DBSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.DBSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: DBSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: DBSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DBSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.DBSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: DBSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: DBSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.DBSource`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).LinkTo
  nameWithType: DBSource<TOutput>.LinkTo
  nameWithType.vb: DBSource(Of TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.DBSource`1.LoadTableDefinition
  name: LoadTableDefinition()
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_LoadTableDefinition
  commentId: M:ALE.ETLBox.DataFlow.DBSource`1.LoadTableDefinition
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.LoadTableDefinition()
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).LoadTableDefinition()
  nameWithType: DBSource<TOutput>.LoadTableDefinition()
  nameWithType.vb: DBSource(Of TOutput).LoadTableDefinition()
- uid: ALE.ETLBox.DataFlow.DBSource`1.LoadTableDefinition*
  name: LoadTableDefinition
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_LoadTableDefinition_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.LoadTableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.LoadTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).LoadTableDefinition
  nameWithType: DBSource<TOutput>.LoadTableDefinition
  nameWithType.vb: DBSource(Of TOutput).LoadTableDefinition
- uid: ALE.ETLBox.DataFlow.DBSource`1.ReadAll
  name: ReadAll()
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_ReadAll
  commentId: M:ALE.ETLBox.DataFlow.DBSource`1.ReadAll
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.ReadAll()
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).ReadAll()
  nameWithType: DBSource<TOutput>.ReadAll()
  nameWithType.vb: DBSource(Of TOutput).ReadAll()
- uid: ALE.ETLBox.DataFlow.DBSource`1.ReadAll*
  name: ReadAll
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_ReadAll_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.ReadAll
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.ReadAll
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).ReadAll
  nameWithType: DBSource<TOutput>.ReadAll
  nameWithType.vb: DBSource(Of TOutput).ReadAll
- uid: ALE.ETLBox.DataFlow.DBSource`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).SourceBlock
  nameWithType: DBSource<TOutput>.SourceBlock
  nameWithType.vb: DBSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.DBSource`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).SourceBlock
  nameWithType: DBSource<TOutput>.SourceBlock
  nameWithType.vb: DBSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.DBSource`1.SourceDescription
  name: SourceDescription
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_SourceDescription
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.SourceDescription
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.SourceDescription
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).SourceDescription
  nameWithType: DBSource<TOutput>.SourceDescription
  nameWithType.vb: DBSource(Of TOutput).SourceDescription
- uid: ALE.ETLBox.DataFlow.DBSource`1.SourceDescription*
  name: SourceDescription
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_SourceDescription_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.SourceDescription
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.SourceDescription
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).SourceDescription
  nameWithType: DBSource<TOutput>.SourceDescription
  nameWithType.vb: DBSource(Of TOutput).SourceDescription
- uid: ALE.ETLBox.DataFlow.DBSource`1.SourceTableDefinition
  name: SourceTableDefinition
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_SourceTableDefinition
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.SourceTableDefinition
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.SourceTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).SourceTableDefinition
  nameWithType: DBSource<TOutput>.SourceTableDefinition
  nameWithType.vb: DBSource(Of TOutput).SourceTableDefinition
- uid: ALE.ETLBox.DataFlow.DBSource`1.SourceTableDefinition*
  name: SourceTableDefinition
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_SourceTableDefinition_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.SourceTableDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.SourceTableDefinition
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).SourceTableDefinition
  nameWithType: DBSource<TOutput>.SourceTableDefinition
  nameWithType.vb: DBSource(Of TOutput).SourceTableDefinition
- uid: ALE.ETLBox.DataFlow.DBSource`1.Sql
  name: Sql
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_Sql
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.Sql
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.Sql
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).Sql
  nameWithType: DBSource<TOutput>.Sql
  nameWithType.vb: DBSource(Of TOutput).Sql
- uid: ALE.ETLBox.DataFlow.DBSource`1.Sql*
  name: Sql
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_Sql_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.Sql
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).Sql
  nameWithType: DBSource<TOutput>.Sql
  nameWithType.vb: DBSource(Of TOutput).Sql
- uid: ALE.ETLBox.DataFlow.DBSource`1.SqlForRead
  name: SqlForRead
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_SqlForRead
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.SqlForRead
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.SqlForRead
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).SqlForRead
  nameWithType: DBSource<TOutput>.SqlForRead
  nameWithType.vb: DBSource(Of TOutput).SqlForRead
- uid: ALE.ETLBox.DataFlow.DBSource`1.SqlForRead*
  name: SqlForRead
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_SqlForRead_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.SqlForRead
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.SqlForRead
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).SqlForRead
  nameWithType: DBSource<TOutput>.SqlForRead
  nameWithType.vb: DBSource(Of TOutput).SqlForRead
- uid: ALE.ETLBox.DataFlow.DBSource`1.TableName
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_TableName
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.TableName
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).TableName
  nameWithType: DBSource<TOutput>.TableName
  nameWithType.vb: DBSource(Of TOutput).TableName
- uid: ALE.ETLBox.DataFlow.DBSource`1.TableName*
  name: TableName
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_TableName_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.TableName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.TableName
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).TableName
  nameWithType: DBSource<TOutput>.TableName
  nameWithType.vb: DBSource(Of TOutput).TableName
- uid: ALE.ETLBox.DataFlow.DBSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).TaskName
  nameWithType: DBSource<TOutput>.TaskName
  nameWithType.vb: DBSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.DBSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).TaskName
  nameWithType: DBSource<TOutput>.TaskName
  nameWithType.vb: DBSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.DBSource`1.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_TaskType
  commentId: P:ALE.ETLBox.DataFlow.DBSource`1.TaskType
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).TaskType
  nameWithType: DBSource<TOutput>.TaskType
  nameWithType.vb: DBSource(Of TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.DBSource`1.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.DBSource-1.html#ALE_ETLBox_DataFlow_DBSource_1_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.DBSource`1.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.DBSource<TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.DBSource(Of TOutput).TaskType
  nameWithType: DBSource<TOutput>.TaskType
  nameWithType.vb: DBSource(Of TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.ExcelRange
  name: ExcelRange
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html
  commentId: T:ALE.ETLBox.DataFlow.ExcelRange
  fullName: ALE.ETLBox.DataFlow.ExcelRange
  nameWithType: ExcelRange
- uid: ALE.ETLBox.DataFlow.ExcelRange.#ctor(System.Int32,System.Int32)
  name: ExcelRange(Int32, Int32)
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange__ctor_System_Int32_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.ExcelRange.#ctor(System.Int32,System.Int32)
  fullName: ALE.ETLBox.DataFlow.ExcelRange.ExcelRange(System.Int32, System.Int32)
  nameWithType: ExcelRange.ExcelRange(Int32, Int32)
- uid: ALE.ETLBox.DataFlow.ExcelRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  name: ExcelRange(Int32, Int32, Int32, Int32)
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange__ctor_System_Int32_System_Int32_System_Int32_System_Int32_
  commentId: M:ALE.ETLBox.DataFlow.ExcelRange.#ctor(System.Int32,System.Int32,System.Int32,System.Int32)
  fullName: ALE.ETLBox.DataFlow.ExcelRange.ExcelRange(System.Int32, System.Int32, System.Int32, System.Int32)
  nameWithType: ExcelRange.ExcelRange(Int32, Int32, Int32, Int32)
- uid: ALE.ETLBox.DataFlow.ExcelRange.#ctor*
  name: ExcelRange
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.ExcelRange
  nameWithType: ExcelRange.ExcelRange
- uid: ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  name: EndColumn
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_EndColumn
  commentId: P:ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  fullName: ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  nameWithType: ExcelRange.EndColumn
- uid: ALE.ETLBox.DataFlow.ExcelRange.EndColumn*
  name: EndColumn
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_EndColumn_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.EndColumn
  nameWithType: ExcelRange.EndColumn
- uid: ALE.ETLBox.DataFlow.ExcelRange.EndRow
  name: EndRow
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_EndRow
  commentId: P:ALE.ETLBox.DataFlow.ExcelRange.EndRow
  fullName: ALE.ETLBox.DataFlow.ExcelRange.EndRow
  nameWithType: ExcelRange.EndRow
- uid: ALE.ETLBox.DataFlow.ExcelRange.EndRow*
  name: EndRow
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_EndRow_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.EndRow
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.EndRow
  nameWithType: ExcelRange.EndRow
- uid: ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  name: StartColumn
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_StartColumn
  commentId: P:ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  fullName: ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  nameWithType: ExcelRange.StartColumn
- uid: ALE.ETLBox.DataFlow.ExcelRange.StartColumn*
  name: StartColumn
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_StartColumn_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.StartColumn
  nameWithType: ExcelRange.StartColumn
- uid: ALE.ETLBox.DataFlow.ExcelRange.StartRow
  name: StartRow
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_StartRow
  commentId: P:ALE.ETLBox.DataFlow.ExcelRange.StartRow
  fullName: ALE.ETLBox.DataFlow.ExcelRange.StartRow
  nameWithType: ExcelRange.StartRow
- uid: ALE.ETLBox.DataFlow.ExcelRange.StartRow*
  name: StartRow
  href: api/ALE.ETLBox.DataFlow.ExcelRange.html#ALE_ETLBox_DataFlow_ExcelRange_StartRow_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelRange.StartRow
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelRange.StartRow
  nameWithType: ExcelRange.StartRow
- uid: ALE.ETLBox.DataFlow.ExcelSource`1
  name: ExcelSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.ExcelSource`1
  name.vb: ExcelSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput)
  nameWithType: ExcelSource<TOutput>
  nameWithType.vb: ExcelSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.#ctor
  name: ExcelSource()
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.#ctor
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelSource()
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelSource()
  nameWithType: ExcelSource<TOutput>.ExcelSource()
  nameWithType.vb: ExcelSource(Of TOutput).ExcelSource()
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.#ctor(System.String)
  name: ExcelSource(String)
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelSource(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelSource(System.String)
  nameWithType: ExcelSource<TOutput>.ExcelSource(String)
  nameWithType.vb: ExcelSource(Of TOutput).ExcelSource(String)
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.#ctor*
  name: ExcelSource
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelSource
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelSource
  nameWithType: ExcelSource<TOutput>.ExcelSource
  nameWithType.vb: ExcelSource(Of TOutput).ExcelSource
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.ExcelFilePassword
  name: ExcelFilePassword
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_ExcelFilePassword
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.ExcelFilePassword
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelFilePassword
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelFilePassword
  nameWithType: ExcelSource<TOutput>.ExcelFilePassword
  nameWithType.vb: ExcelSource(Of TOutput).ExcelFilePassword
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.ExcelFilePassword*
  name: ExcelFilePassword
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_ExcelFilePassword_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.ExcelFilePassword
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExcelFilePassword
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExcelFilePassword
  nameWithType: ExcelSource<TOutput>.ExcelFilePassword
  nameWithType.vb: ExcelSource(Of TOutput).ExcelFilePassword
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.Execute
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).Execute()
  nameWithType: ExcelSource<TOutput>.Execute()
  nameWithType.vb: ExcelSource(Of TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).Execute
  nameWithType: ExcelSource<TOutput>.Execute
  nameWithType.vb: ExcelSource(Of TOutput).Execute
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.ExecuteAsync
  name: ExecuteAsync()
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_ExecuteAsync
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.ExecuteAsync
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExecuteAsync()
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExecuteAsync()
  nameWithType: ExcelSource<TOutput>.ExecuteAsync()
  nameWithType.vb: ExcelSource(Of TOutput).ExecuteAsync()
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_ExecuteAsync_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.ExecuteAsync
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.ExecuteAsync
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).ExecuteAsync
  nameWithType: ExcelSource<TOutput>.ExecuteAsync
  nameWithType.vb: ExcelSource(Of TOutput).ExecuteAsync
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.FileName
  name: FileName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_FileName
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.FileName
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.FileName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).FileName
  nameWithType: ExcelSource<TOutput>.FileName
  nameWithType.vb: ExcelSource(Of TOutput).FileName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.FileName*
  name: FileName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_FileName_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.FileName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.FileName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).FileName
  nameWithType: ExcelSource<TOutput>.FileName
  nameWithType.vb: ExcelSource(Of TOutput).FileName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.HasRange
  name: HasRange
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_HasRange
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.HasRange
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.HasRange
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).HasRange
  nameWithType: ExcelSource<TOutput>.HasRange
  nameWithType.vb: ExcelSource(Of TOutput).HasRange
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.HasRange*
  name: HasRange
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_HasRange_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.HasRange
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.HasRange
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).HasRange
  nameWithType: ExcelSource<TOutput>.HasRange
  nameWithType.vb: ExcelSource(Of TOutput).HasRange
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.HasSheetName
  name: HasSheetName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_HasSheetName
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.HasSheetName
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.HasSheetName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).HasSheetName
  nameWithType: ExcelSource<TOutput>.HasSheetName
  nameWithType.vb: ExcelSource(Of TOutput).HasSheetName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.HasSheetName*
  name: HasSheetName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_HasSheetName_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.HasSheetName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.HasSheetName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).HasSheetName
  nameWithType: ExcelSource<TOutput>.HasSheetName
  nameWithType.vb: ExcelSource(Of TOutput).HasSheetName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: ExcelSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: ExcelSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.ExcelSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: ExcelSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: ExcelSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).LinkTo
  nameWithType: ExcelSource<TOutput>.LinkTo
  nameWithType.vb: ExcelSource(Of TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.Range
  name: Range
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_Range
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.Range
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.Range
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).Range
  nameWithType: ExcelSource<TOutput>.Range
  nameWithType.vb: ExcelSource(Of TOutput).Range
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.Range*
  name: Range
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_Range_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.Range
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.Range
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).Range
  nameWithType: ExcelSource<TOutput>.Range
  nameWithType.vb: ExcelSource(Of TOutput).Range
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.SheetName
  name: SheetName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_SheetName
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.SheetName
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.SheetName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).SheetName
  nameWithType: ExcelSource<TOutput>.SheetName
  nameWithType.vb: ExcelSource(Of TOutput).SheetName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.SheetName*
  name: SheetName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_SheetName_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.SheetName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.SheetName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).SheetName
  nameWithType: ExcelSource<TOutput>.SheetName
  nameWithType.vb: ExcelSource(Of TOutput).SheetName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).SourceBlock
  nameWithType: ExcelSource<TOutput>.SourceBlock
  nameWithType.vb: ExcelSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).SourceBlock
  nameWithType: ExcelSource<TOutput>.SourceBlock
  nameWithType.vb: ExcelSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.TaskName
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).TaskName
  nameWithType: ExcelSource<TOutput>.TaskName
  nameWithType.vb: ExcelSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).TaskName
  nameWithType: ExcelSource<TOutput>.TaskName
  nameWithType.vb: ExcelSource(Of TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_TaskType
  commentId: P:ALE.ETLBox.DataFlow.ExcelSource`1.TaskType
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).TaskType
  nameWithType: ExcelSource<TOutput>.TaskType
  nameWithType.vb: ExcelSource(Of TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.ExcelSource`1.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.ExcelSource-1.html#ALE_ETLBox_DataFlow_ExcelSource_1_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.ExcelSource`1.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.ExcelSource<TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.ExcelSource(Of TOutput).TaskType
  nameWithType: ExcelSource<TOutput>.TaskType
  nameWithType.vb: ExcelSource(Of TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.IDataFlowDestination`1
  name: IDataFlowDestination<TInput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowDestination-1.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowDestination`1
  name.vb: IDataFlowDestination(Of TInput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowDestination<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowDestination(Of TInput)
  nameWithType: IDataFlowDestination<TInput>
  nameWithType.vb: IDataFlowDestination(Of TInput)
- uid: ALE.ETLBox.DataFlow.IDataFlowDestination`1.Wait
  name: Wait()
  href: api/ALE.ETLBox.DataFlow.IDataFlowDestination-1.html#ALE_ETLBox_DataFlow_IDataFlowDestination_1_Wait
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowDestination`1.Wait
  fullName: ALE.ETLBox.DataFlow.IDataFlowDestination<TInput>.Wait()
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowDestination(Of TInput).Wait()
  nameWithType: IDataFlowDestination<TInput>.Wait()
  nameWithType.vb: IDataFlowDestination(Of TInput).Wait()
- uid: ALE.ETLBox.DataFlow.IDataFlowDestination`1.Wait*
  name: Wait
  href: api/ALE.ETLBox.DataFlow.IDataFlowDestination-1.html#ALE_ETLBox_DataFlow_IDataFlowDestination_1_Wait_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowDestination`1.Wait
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowDestination<TInput>.Wait
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowDestination(Of TInput).Wait
  nameWithType: IDataFlowDestination<TInput>.Wait
  nameWithType.vb: IDataFlowDestination(Of TInput).Wait
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1
  name: IDataFlowLinkSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1
  name.vb: IDataFlowLinkSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput)
  nameWithType: IDataFlowLinkSource<TOutput>
  nameWithType.vb: IDataFlowLinkSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).SourceBlock
  nameWithType: IDataFlowLinkSource<TOutput>.SourceBlock
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkSource-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkSource_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowLinkSource`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkSource<TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkSource(Of TOutput).SourceBlock
  nameWithType: IDataFlowLinkSource<TOutput>.SourceBlock
  nameWithType.vb: IDataFlowLinkSource(Of TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1
  name: IDataFlowLinkTarget<TInput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkTarget-1.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1
  name.vb: IDataFlowLinkTarget(Of TInput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput)
  nameWithType: IDataFlowLinkTarget<TInput>
  nameWithType.vb: IDataFlowLinkTarget(Of TInput)
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkTarget-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkTarget_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput).TargetBlock
  nameWithType: IDataFlowLinkTarget<TInput>.TargetBlock
  nameWithType.vb: IDataFlowLinkTarget(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.IDataFlowLinkTarget-1.html#ALE_ETLBox_DataFlow_IDataFlowLinkTarget_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowLinkTarget`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput).TargetBlock
  nameWithType: IDataFlowLinkTarget<TInput>.TargetBlock
  nameWithType.vb: IDataFlowLinkTarget(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1
  name: IDataFlowSource<TOutput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowSource`1
  name.vb: IDataFlowSource(Of TOutput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput)
  nameWithType: IDataFlowSource<TOutput>
  nameWithType.vb: IDataFlowSource(Of TOutput)
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.ExecuteAsync
  name: ExecuteAsync()
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_ExecuteAsync
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowSource`1.ExecuteAsync
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.ExecuteAsync()
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).ExecuteAsync()
  nameWithType: IDataFlowSource<TOutput>.ExecuteAsync()
  nameWithType.vb: IDataFlowSource(Of TOutput).ExecuteAsync()
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.ExecuteAsync*
  name: ExecuteAsync
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_ExecuteAsync_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowSource`1.ExecuteAsync
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.ExecuteAsync
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).ExecuteAsync
  nameWithType: IDataFlowSource<TOutput>.ExecuteAsync
  nameWithType.vb: IDataFlowSource(Of TOutput).ExecuteAsync
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.IDataFlowSource`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: IDataFlowSource<TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: IDataFlowSource(Of TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.IDataFlowSource`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.IDataFlowSource-1.html#ALE_ETLBox_DataFlow_IDataFlowSource_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.IDataFlowSource`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.IDataFlowSource<TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowSource(Of TOutput).LinkTo
  nameWithType: IDataFlowSource<TOutput>.LinkTo
  nameWithType.vb: IDataFlowSource(Of TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.IDataFlowTransformation`2
  name: IDataFlowTransformation<TInput, TOutput>
  href: api/ALE.ETLBox.DataFlow.IDataFlowTransformation-2.html
  commentId: T:ALE.ETLBox.DataFlow.IDataFlowTransformation`2
  name.vb: IDataFlowTransformation(Of TInput, TOutput)
  fullName: ALE.ETLBox.DataFlow.IDataFlowTransformation<TInput, TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.IDataFlowTransformation(Of TInput, TOutput)
  nameWithType: IDataFlowTransformation<TInput, TOutput>
  nameWithType.vb: IDataFlowTransformation(Of TInput, TOutput)
- uid: ALE.ETLBox.DataFlow.Lookup`3
  name: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html
  commentId: T:ALE.ETLBox.DataFlow.Lookup`3
  name.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput)
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput)
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput)
- uid: ALE.ETLBox.DataFlow.Lookup`3.#ctor
  name: Lookup()
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3__ctor
  commentId: M:ALE.ETLBox.DataFlow.Lookup`3.#ctor
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Lookup()
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Lookup()
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Lookup()
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Lookup()
- uid: ALE.ETLBox.DataFlow.Lookup`3.#ctor(System.Func{`0,`1},ALE.ETLBox.DataFlow.IDataFlowSource{`2})
  name: Lookup(Func<TTransformationInput, TTransformationOutput>, IDataFlowSource<TSourceOutput>)
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3__ctor_System_Func__0__1__ALE_ETLBox_DataFlow_IDataFlowSource__2__
  commentId: M:ALE.ETLBox.DataFlow.Lookup`3.#ctor(System.Func{`0,`1},ALE.ETLBox.DataFlow.IDataFlowSource{`2})
  name.vb: Lookup(Func(Of TTransformationInput, TTransformationOutput), IDataFlowSource(Of TSourceOutput))
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Lookup(System.Func<TTransformationInput, TTransformationOutput>, ALE.ETLBox.DataFlow.IDataFlowSource<TSourceOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Lookup(System.Func(Of TTransformationInput, TTransformationOutput), ALE.ETLBox.DataFlow.IDataFlowSource(Of TSourceOutput))
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Lookup(Func<TTransformationInput, TTransformationOutput>, IDataFlowSource<TSourceOutput>)
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Lookup(Func(Of TTransformationInput, TTransformationOutput), IDataFlowSource(Of TSourceOutput))
- uid: ALE.ETLBox.DataFlow.Lookup`3.#ctor(System.Func{`0,`1},ALE.ETLBox.DataFlow.IDataFlowSource{`2},System.Collections.Generic.List{`2})
  name: Lookup(Func<TTransformationInput, TTransformationOutput>, IDataFlowSource<TSourceOutput>, List<TSourceOutput>)
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3__ctor_System_Func__0__1__ALE_ETLBox_DataFlow_IDataFlowSource__2__System_Collections_Generic_List__2__
  commentId: M:ALE.ETLBox.DataFlow.Lookup`3.#ctor(System.Func{`0,`1},ALE.ETLBox.DataFlow.IDataFlowSource{`2},System.Collections.Generic.List{`2})
  name.vb: Lookup(Func(Of TTransformationInput, TTransformationOutput), IDataFlowSource(Of TSourceOutput), List(Of TSourceOutput))
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Lookup(System.Func<TTransformationInput, TTransformationOutput>, ALE.ETLBox.DataFlow.IDataFlowSource<TSourceOutput>, System.Collections.Generic.List<TSourceOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Lookup(System.Func(Of TTransformationInput, TTransformationOutput), ALE.ETLBox.DataFlow.IDataFlowSource(Of TSourceOutput), System.Collections.Generic.List(Of TSourceOutput))
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Lookup(Func<TTransformationInput, TTransformationOutput>, IDataFlowSource<TSourceOutput>, List<TSourceOutput>)
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Lookup(Func(Of TTransformationInput, TTransformationOutput), IDataFlowSource(Of TSourceOutput), List(Of TSourceOutput))
- uid: ALE.ETLBox.DataFlow.Lookup`3.#ctor*
  name: Lookup
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.Lookup`3.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Lookup
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Lookup
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Lookup
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Lookup
- uid: ALE.ETLBox.DataFlow.Lookup`3.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_Execute
  commentId: M:ALE.ETLBox.DataFlow.Lookup`3.Execute
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Execute()
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Execute()
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Execute()
- uid: ALE.ETLBox.DataFlow.Lookup`3.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.Lookup`3.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Execute
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Execute
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Execute
- uid: ALE.ETLBox.DataFlow.Lookup`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1})
  name: LinkTo(IDataFlowLinkTarget<TTransformationOutput>)
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__
  commentId: M:ALE.ETLBox.DataFlow.Lookup`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TTransformationOutput))
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TTransformationOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TTransformationOutput))
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LinkTo(IDataFlowLinkTarget<TTransformationOutput>)
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LinkTo(IDataFlowLinkTarget(Of TTransformationOutput))
- uid: ALE.ETLBox.DataFlow.Lookup`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1})
  name: LinkTo(IDataFlowLinkTarget<TTransformationOutput>, Predicate<TTransformationOutput>)
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__System_Predicate__1__
  commentId: M:ALE.ETLBox.DataFlow.Lookup`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TTransformationOutput), Predicate(Of TTransformationOutput))
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TTransformationOutput>, System.Predicate<TTransformationOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TTransformationOutput), System.Predicate(Of TTransformationOutput))
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LinkTo(IDataFlowLinkTarget<TTransformationOutput>, Predicate<TTransformationOutput>)
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LinkTo(IDataFlowLinkTarget(Of TTransformationOutput), Predicate(Of TTransformationOutput))
- uid: ALE.ETLBox.DataFlow.Lookup`3.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.Lookup`3.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LinkTo
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LinkTo
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.Lookup`3.LookupList
  name: LookupList
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_LookupList
  commentId: P:ALE.ETLBox.DataFlow.Lookup`3.LookupList
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LookupList
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LookupList
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LookupList
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LookupList
- uid: ALE.ETLBox.DataFlow.Lookup`3.LookupList*
  name: LookupList
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_LookupList_
  commentId: Overload:ALE.ETLBox.DataFlow.Lookup`3.LookupList
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LookupList
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LookupList
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.LookupList
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).LookupList
- uid: ALE.ETLBox.DataFlow.Lookup`3.Source
  name: Source
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_Source
  commentId: P:ALE.ETLBox.DataFlow.Lookup`3.Source
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Source
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Source
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Source
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Source
- uid: ALE.ETLBox.DataFlow.Lookup`3.Source*
  name: Source
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_Source_
  commentId: Overload:ALE.ETLBox.DataFlow.Lookup`3.Source
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Source
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Source
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.Source
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).Source
- uid: ALE.ETLBox.DataFlow.Lookup`3.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.Lookup`3.SourceBlock
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).SourceBlock
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.SourceBlock
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Lookup`3.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Lookup`3.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).SourceBlock
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.SourceBlock
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Lookup`3.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.Lookup`3.TargetBlock
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TargetBlock
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TargetBlock
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Lookup`3.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Lookup`3.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TargetBlock
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TargetBlock
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Lookup`3.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_TaskName
  commentId: P:ALE.ETLBox.DataFlow.Lookup`3.TaskName
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TaskName
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TaskName
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TaskName
- uid: ALE.ETLBox.DataFlow.Lookup`3.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.Lookup`3.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TaskName
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TaskName
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TaskName
- uid: ALE.ETLBox.DataFlow.Lookup`3.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_TaskType
  commentId: P:ALE.ETLBox.DataFlow.Lookup`3.TaskType
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TaskType
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TaskType
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TaskType
- uid: ALE.ETLBox.DataFlow.Lookup`3.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.Lookup-3.html#ALE_ETLBox_DataFlow_Lookup_3_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.Lookup`3.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TaskType
  nameWithType: Lookup<TTransformationInput, TTransformationOutput, TSourceOutput>.TaskType
  nameWithType.vb: Lookup(Of TTransformationInput, TTransformationOutput, TSourceOutput).TaskType
- uid: ALE.ETLBox.DataFlow.MergeJoin`3
  name: MergeJoin<TInput1, TInput2, TOutput>
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html
  commentId: T:ALE.ETLBox.DataFlow.MergeJoin`3
  name.vb: MergeJoin(Of TInput1, TInput2, TOutput)
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput)
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput)
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.#ctor
  name: MergeJoin()
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3__ctor
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.#ctor
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoin()
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin()
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoin()
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin()
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.#ctor(System.Func{`0,`1,`2})
  name: MergeJoin(Func<TInput1, TInput2, TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3__ctor_System_Func__0__1__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.#ctor(System.Func{`0,`1,`2})
  name.vb: MergeJoin(Func(Of TInput1, TInput2, TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoin(System.Func<TInput1, TInput2, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin(System.Func(Of TInput1, TInput2, TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoin(Func<TInput1, TInput2, TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin(Func(Of TInput1, TInput2, TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.#ctor(System.String)
  name: MergeJoin(String)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoin(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin(System.String)
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoin(String)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin(String)
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.#ctor*
  name: MergeJoin
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoin
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoin
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoin
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Execute
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.Execute
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Execute()
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Execute()
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Execute
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Execute
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Execute
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__2__System_Predicate__2__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`2},System.Predicate{`2})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).LinkTo
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.LinkTo
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.MergeJoinFunc
  name: MergeJoinFunc
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_MergeJoinFunc
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.MergeJoinFunc
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoinFunc
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoinFunc
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoinFunc
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoinFunc
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.MergeJoinFunc*
  name: MergeJoinFunc
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_MergeJoinFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.MergeJoinFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.MergeJoinFunc
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).MergeJoinFunc
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.MergeJoinFunc
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).MergeJoinFunc
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.SourceBlock
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).SourceBlock
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.SourceBlock
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).SourceBlock
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.SourceBlock
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Target1
  name: Target1
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Target1
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.Target1
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Target1
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Target1
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Target1
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Target1
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Target1*
  name: Target1
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Target1_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.Target1
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Target1
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Target1
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Target1
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Target1
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Target2
  name: Target2
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Target2
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.Target2
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Target2
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Target2
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Target2
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Target2
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.Target2*
  name: Target2
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_Target2_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.Target2
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.Target2
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).Target2
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.Target2
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).Target2
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_TaskName
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.TaskName
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).TaskName
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.TaskName
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).TaskName
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.TaskName
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_TaskType
  commentId: P:ALE.ETLBox.DataFlow.MergeJoin`3.TaskType
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).TaskType
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.TaskType
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.MergeJoin`3.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.MergeJoin-3.html#ALE_ETLBox_DataFlow_MergeJoin_3_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoin`3.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoin<TInput1, TInput2, TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoin(Of TInput1, TInput2, TOutput).TaskType
  nameWithType: MergeJoin<TInput1, TInput2, TOutput>.TaskType
  nameWithType.vb: MergeJoin(Of TInput1, TInput2, TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1
  name: MergeJoinTarget<TInput>
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html
  commentId: T:ALE.ETLBox.DataFlow.MergeJoinTarget`1
  name.vb: MergeJoinTarget(Of TInput)
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput)
  nameWithType: MergeJoinTarget<TInput>
  nameWithType.vb: MergeJoinTarget(Of TInput)
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.#ctor(System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  name: MergeJoinTarget(ITargetBlock<TInput>)
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1__ctor_System_Threading_Tasks_Dataflow_ITargetBlock__0__
  commentId: M:ALE.ETLBox.DataFlow.MergeJoinTarget`1.#ctor(System.Threading.Tasks.Dataflow.ITargetBlock{`0})
  name.vb: MergeJoinTarget(ITargetBlock(Of TInput))
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.MergeJoinTarget(System.Threading.Tasks.Dataflow.ITargetBlock<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).MergeJoinTarget(System.Threading.Tasks.Dataflow.ITargetBlock(Of TInput))
  nameWithType: MergeJoinTarget<TInput>.MergeJoinTarget(ITargetBlock<TInput>)
  nameWithType.vb: MergeJoinTarget(Of TInput).MergeJoinTarget(ITargetBlock(Of TInput))
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.#ctor*
  name: MergeJoinTarget
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.MergeJoinTarget
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).MergeJoinTarget
  nameWithType: MergeJoinTarget<TInput>.MergeJoinTarget
  nameWithType.vb: MergeJoinTarget(Of TInput).MergeJoinTarget
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.MergeJoinTarget`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).TargetBlock
  nameWithType: MergeJoinTarget<TInput>.TargetBlock
  nameWithType.vb: MergeJoinTarget(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).TargetBlock
  nameWithType: MergeJoinTarget<TInput>.TargetBlock
  nameWithType.vb: MergeJoinTarget(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.Wait
  name: Wait()
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_Wait
  commentId: M:ALE.ETLBox.DataFlow.MergeJoinTarget`1.Wait
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.Wait()
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).Wait()
  nameWithType: MergeJoinTarget<TInput>.Wait()
  nameWithType.vb: MergeJoinTarget(Of TInput).Wait()
- uid: ALE.ETLBox.DataFlow.MergeJoinTarget`1.Wait*
  name: Wait
  href: api/ALE.ETLBox.DataFlow.MergeJoinTarget-1.html#ALE_ETLBox_DataFlow_MergeJoinTarget_1_Wait_
  commentId: Overload:ALE.ETLBox.DataFlow.MergeJoinTarget`1.Wait
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.MergeJoinTarget<TInput>.Wait
  fullName.vb: ALE.ETLBox.DataFlow.MergeJoinTarget(Of TInput).Wait
  nameWithType: MergeJoinTarget<TInput>.Wait
  nameWithType.vb: MergeJoinTarget(Of TInput).Wait
- uid: ALE.ETLBox.DataFlow.Multicast`1
  name: Multicast<TInput>
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html
  commentId: T:ALE.ETLBox.DataFlow.Multicast`1
  name.vb: Multicast(Of TInput)
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput)
  nameWithType: Multicast<TInput>
  nameWithType.vb: Multicast(Of TInput)
- uid: ALE.ETLBox.DataFlow.Multicast`1.#ctor
  name: Multicast()
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.Multicast`1.#ctor
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.Multicast()
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).Multicast()
  nameWithType: Multicast<TInput>.Multicast()
  nameWithType.vb: Multicast(Of TInput).Multicast()
- uid: ALE.ETLBox.DataFlow.Multicast`1.#ctor(System.String)
  name: Multicast(String)
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1__ctor_System_String_
  commentId: M:ALE.ETLBox.DataFlow.Multicast`1.#ctor(System.String)
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.Multicast(System.String)
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).Multicast(System.String)
  nameWithType: Multicast<TInput>.Multicast(String)
  nameWithType.vb: Multicast(Of TInput).Multicast(String)
- uid: ALE.ETLBox.DataFlow.Multicast`1.#ctor*
  name: Multicast
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.Multicast
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).Multicast
  nameWithType: Multicast<TInput>.Multicast
  nameWithType.vb: Multicast(Of TInput).Multicast
- uid: ALE.ETLBox.DataFlow.Multicast`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.Multicast`1.Execute
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).Execute()
  nameWithType: Multicast<TInput>.Execute()
  nameWithType.vb: Multicast(Of TInput).Execute()
- uid: ALE.ETLBox.DataFlow.Multicast`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).Execute
  nameWithType: Multicast<TInput>.Execute
  nameWithType.vb: Multicast(Of TInput).Execute
- uid: ALE.ETLBox.DataFlow.Multicast`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TInput>)
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.Multicast`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TInput))
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput))
  nameWithType: Multicast<TInput>.LinkTo(IDataFlowLinkTarget<TInput>)
  nameWithType.vb: Multicast(Of TInput).LinkTo(IDataFlowLinkTarget(Of TInput))
- uid: ALE.ETLBox.DataFlow.Multicast`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TInput>, Predicate<TInput>)
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.Multicast`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TInput), Predicate(Of TInput))
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>, System.Predicate<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput), System.Predicate(Of TInput))
  nameWithType: Multicast<TInput>.LinkTo(IDataFlowLinkTarget<TInput>, Predicate<TInput>)
  nameWithType.vb: Multicast(Of TInput).LinkTo(IDataFlowLinkTarget(Of TInput), Predicate(Of TInput))
- uid: ALE.ETLBox.DataFlow.Multicast`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).LinkTo
  nameWithType: Multicast<TInput>.LinkTo
  nameWithType.vb: Multicast(Of TInput).LinkTo
- uid: ALE.ETLBox.DataFlow.Multicast`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.Multicast`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).SourceBlock
  nameWithType: Multicast<TInput>.SourceBlock
  nameWithType.vb: Multicast(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Multicast`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).SourceBlock
  nameWithType: Multicast<TInput>.SourceBlock
  nameWithType.vb: Multicast(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Multicast`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.Multicast`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TargetBlock
  nameWithType: Multicast<TInput>.TargetBlock
  nameWithType.vb: Multicast(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Multicast`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TargetBlock
  nameWithType: Multicast<TInput>.TargetBlock
  nameWithType.vb: Multicast(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Multicast`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.Multicast`1.TaskName
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TaskName
  nameWithType: Multicast<TInput>.TaskName
  nameWithType.vb: Multicast(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.Multicast`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TaskName
  nameWithType: Multicast<TInput>.TaskName
  nameWithType.vb: Multicast(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.Multicast`1.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TaskType
  commentId: P:ALE.ETLBox.DataFlow.Multicast`1.TaskType
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TaskType
  nameWithType: Multicast<TInput>.TaskType
  nameWithType.vb: Multicast(Of TInput).TaskType
- uid: ALE.ETLBox.DataFlow.Multicast`1.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.Multicast-1.html#ALE_ETLBox_DataFlow_Multicast_1_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.Multicast`1.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Multicast<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.Multicast(Of TInput).TaskType
  nameWithType: Multicast<TInput>.TaskType
  nameWithType.vb: Multicast(Of TInput).TaskType
- uid: ALE.ETLBox.DataFlow.RowTransformation
  name: RowTransformation
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html
  commentId: T:ALE.ETLBox.DataFlow.RowTransformation
  fullName: ALE.ETLBox.DataFlow.RowTransformation
  nameWithType: RowTransformation
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor
  name: RowTransformation()
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation.#ctor
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation()
  nameWithType: RowTransformation.RowTransformation()
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.Func{System.String[],System.String[]})
  name: RowTransformation(Func<String[], String[]>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor_System_Func_System_String___System_String____
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.Func{System.String[],System.String[]})
  name.vb: RowTransformation(Func(Of String(), String()))
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.Func<System.String[], System.String[]>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.Func(Of System.String(), System.String()))
  nameWithType: RowTransformation.RowTransformation(Func<String[], String[]>)
  nameWithType.vb: RowTransformation.RowTransformation(Func(Of String(), String()))
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.String,System.Func{System.String[],System.String[]})
  name: RowTransformation(String, Func<String[], String[]>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor_System_String_System_Func_System_String___System_String____
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.String,System.Func{System.String[],System.String[]})
  name.vb: RowTransformation(String, Func(Of String(), String()))
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.String, System.Func<System.String[], System.String[]>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.String, System.Func(Of System.String(), System.String()))
  nameWithType: RowTransformation.RowTransformation(String, Func<String[], String[]>)
  nameWithType.vb: RowTransformation.RowTransformation(String, Func(Of String(), String()))
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.String,System.Func{System.String[],System.String[]},System.Action)
  name: RowTransformation(String, Func<String[], String[]>, Action)
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor_System_String_System_Func_System_String___System_String____System_Action_
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation.#ctor(System.String,System.Func{System.String[],System.String[]},System.Action)
  name.vb: RowTransformation(String, Func(Of String(), String()), Action)
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.String, System.Func<System.String[], System.String[]>, System.Action)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation(System.String, System.Func(Of System.String(), System.String()), System.Action)
  nameWithType: RowTransformation.RowTransformation(String, Func<String[], String[]>, Action)
  nameWithType.vb: RowTransformation.RowTransformation(String, Func(Of String(), String()), Action)
- uid: ALE.ETLBox.DataFlow.RowTransformation.#ctor*
  name: RowTransformation
  href: api/ALE.ETLBox.DataFlow.RowTransformation.html#ALE_ETLBox_DataFlow_RowTransformation__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation.RowTransformation
  nameWithType: RowTransformation.RowTransformation
- uid: ALE.ETLBox.DataFlow.RowTransformation`2
  name: RowTransformation<TInput, TOutput>
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html
  commentId: T:ALE.ETLBox.DataFlow.RowTransformation`2
  name.vb: RowTransformation(Of TInput, TOutput)
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput)
  nameWithType: RowTransformation<TInput, TOutput>
  nameWithType.vb: RowTransformation(Of TInput, TOutput)
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor
  name: RowTransformation()
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation()
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation()
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation()
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation()
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.Func{`0,`1})
  name: RowTransformation(Func<TInput, TOutput>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor_System_Func__0__1__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.Func{`0,`1})
  name.vb: RowTransformation(Func(Of TInput, TOutput))
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation(System.Func<TInput, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation(System.Func(Of TInput, TOutput))
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation(Func<TInput, TOutput>)
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation(Func(Of TInput, TOutput))
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.String,System.Func{`0,`1})
  name: RowTransformation(String, Func<TInput, TOutput>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor_System_String_System_Func__0__1__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.String,System.Func{`0,`1})
  name.vb: RowTransformation(String, Func(Of TInput, TOutput))
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation(System.String, System.Func<TInput, TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation(System.String, System.Func(Of TInput, TOutput))
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation(String, Func<TInput, TOutput>)
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation(String, Func(Of TInput, TOutput))
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.String,System.Func{`0,`1},System.Action)
  name: RowTransformation(String, Func<TInput, TOutput>, Action)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor_System_String_System_Func__0__1__System_Action_
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor(System.String,System.Func{`0,`1},System.Action)
  name.vb: RowTransformation(String, Func(Of TInput, TOutput), Action)
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation(System.String, System.Func<TInput, TOutput>, System.Action)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation(System.String, System.Func(Of TInput, TOutput), System.Action)
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation(String, Func<TInput, TOutput>, Action)
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation(String, Func(Of TInput, TOutput), Action)
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.#ctor*
  name: RowTransformation
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformation
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformation
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformation
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformation
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_Execute
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.Execute
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).Execute()
  nameWithType: RowTransformation<TInput, TOutput>.Execute()
  nameWithType.vb: RowTransformation(Of TInput, TOutput).Execute()
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).Execute
  nameWithType: RowTransformation<TInput, TOutput>.Execute
  nameWithType.vb: RowTransformation(Of TInput, TOutput).Execute
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.InitAction
  name: InitAction
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_InitAction
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.InitAction
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.InitAction
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).InitAction
  nameWithType: RowTransformation<TInput, TOutput>.InitAction
  nameWithType.vb: RowTransformation(Of TInput, TOutput).InitAction
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.InitAction*
  name: InitAction
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_InitAction_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.InitAction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.InitAction
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).InitAction
  nameWithType: RowTransformation<TInput, TOutput>.InitAction
  nameWithType.vb: RowTransformation(Of TInput, TOutput).InitAction
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1})
  name: LinkTo(IDataFlowLinkTarget<TOutput>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput))
  nameWithType: RowTransformation<TInput, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>)
  nameWithType.vb: RowTransformation(Of TInput, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput))
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1})
  name: LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__1__System_Predicate__1__
  commentId: M:ALE.ETLBox.DataFlow.RowTransformation`2.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`1},System.Predicate{`1})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TOutput>, System.Predicate<TOutput>)
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TOutput), System.Predicate(Of TOutput))
  nameWithType: RowTransformation<TInput, TOutput>.LinkTo(IDataFlowLinkTarget<TOutput>, Predicate<TOutput>)
  nameWithType.vb: RowTransformation(Of TInput, TOutput).LinkTo(IDataFlowLinkTarget(Of TOutput), Predicate(Of TOutput))
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).LinkTo
  nameWithType: RowTransformation<TInput, TOutput>.LinkTo
  nameWithType.vb: RowTransformation(Of TInput, TOutput).LinkTo
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.RowTransformationFunc
  name: RowTransformationFunc
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_RowTransformationFunc
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.RowTransformationFunc
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformationFunc
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformationFunc
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformationFunc
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.RowTransformationFunc*
  name: RowTransformationFunc
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_RowTransformationFunc_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.RowTransformationFunc
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.RowTransformationFunc
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).RowTransformationFunc
  nameWithType: RowTransformation<TInput, TOutput>.RowTransformationFunc
  nameWithType.vb: RowTransformation(Of TInput, TOutput).RowTransformationFunc
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.SourceBlock
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).SourceBlock
  nameWithType: RowTransformation<TInput, TOutput>.SourceBlock
  nameWithType.vb: RowTransformation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).SourceBlock
  nameWithType: RowTransformation<TInput, TOutput>.SourceBlock
  nameWithType.vb: RowTransformation(Of TInput, TOutput).SourceBlock
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.TargetBlock
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TargetBlock
  nameWithType: RowTransformation<TInput, TOutput>.TargetBlock
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TargetBlock
  nameWithType: RowTransformation<TInput, TOutput>.TargetBlock
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TargetBlock
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TaskName
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.TaskName
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TaskName
  nameWithType: RowTransformation<TInput, TOutput>.TaskName
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TaskName
  nameWithType: RowTransformation<TInput, TOutput>.TaskName
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TaskName
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TaskType
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.TaskType
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TaskType
  nameWithType: RowTransformation<TInput, TOutput>.TaskType
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).TaskType
  nameWithType: RowTransformation<TInput, TOutput>.TaskType
  nameWithType.vb: RowTransformation(Of TInput, TOutput).TaskType
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.WasInitialized
  name: WasInitialized
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_WasInitialized
  commentId: P:ALE.ETLBox.DataFlow.RowTransformation`2.WasInitialized
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.WasInitialized
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).WasInitialized
  nameWithType: RowTransformation<TInput, TOutput>.WasInitialized
  nameWithType.vb: RowTransformation(Of TInput, TOutput).WasInitialized
- uid: ALE.ETLBox.DataFlow.RowTransformation`2.WasInitialized*
  name: WasInitialized
  href: api/ALE.ETLBox.DataFlow.RowTransformation-2.html#ALE_ETLBox_DataFlow_RowTransformation_2_WasInitialized_
  commentId: Overload:ALE.ETLBox.DataFlow.RowTransformation`2.WasInitialized
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.RowTransformation<TInput, TOutput>.WasInitialized
  fullName.vb: ALE.ETLBox.DataFlow.RowTransformation(Of TInput, TOutput).WasInitialized
  nameWithType: RowTransformation<TInput, TOutput>.WasInitialized
  nameWithType.vb: RowTransformation(Of TInput, TOutput).WasInitialized
- uid: ALE.ETLBox.DataFlow.Sort`1
  name: Sort<TInput>
  href: api/ALE.ETLBox.DataFlow.Sort-1.html
  commentId: T:ALE.ETLBox.DataFlow.Sort`1
  name.vb: Sort(Of TInput)
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput)
  nameWithType: Sort<TInput>
  nameWithType.vb: Sort(Of TInput)
- uid: ALE.ETLBox.DataFlow.Sort`1.#ctor
  name: Sort()
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1__ctor
  commentId: M:ALE.ETLBox.DataFlow.Sort`1.#ctor
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Sort()
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Sort()
  nameWithType: Sort<TInput>.Sort()
  nameWithType.vb: Sort(Of TInput).Sort()
- uid: ALE.ETLBox.DataFlow.Sort`1.#ctor(System.Comparison{`0})
  name: Sort(Comparison<TInput>)
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1__ctor_System_Comparison__0__
  commentId: M:ALE.ETLBox.DataFlow.Sort`1.#ctor(System.Comparison{`0})
  name.vb: Sort(Comparison(Of TInput))
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Sort(System.Comparison<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Sort(System.Comparison(Of TInput))
  nameWithType: Sort<TInput>.Sort(Comparison<TInput>)
  nameWithType.vb: Sort(Of TInput).Sort(Comparison(Of TInput))
- uid: ALE.ETLBox.DataFlow.Sort`1.#ctor(System.String,System.Comparison{`0})
  name: Sort(String, Comparison<TInput>)
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1__ctor_System_String_System_Comparison__0__
  commentId: M:ALE.ETLBox.DataFlow.Sort`1.#ctor(System.String,System.Comparison{`0})
  name.vb: Sort(String, Comparison(Of TInput))
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Sort(System.String, System.Comparison<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Sort(System.String, System.Comparison(Of TInput))
  nameWithType: Sort<TInput>.Sort(String, Comparison<TInput>)
  nameWithType.vb: Sort(Of TInput).Sort(String, Comparison(Of TInput))
- uid: ALE.ETLBox.DataFlow.Sort`1.#ctor*
  name: Sort
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1__ctor_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Sort
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Sort
  nameWithType: Sort<TInput>.Sort
  nameWithType.vb: Sort(Of TInput).Sort
- uid: ALE.ETLBox.DataFlow.Sort`1.Execute
  name: Execute()
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_Execute
  commentId: M:ALE.ETLBox.DataFlow.Sort`1.Execute
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Execute()
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Execute()
  nameWithType: Sort<TInput>.Execute()
  nameWithType.vb: Sort(Of TInput).Execute()
- uid: ALE.ETLBox.DataFlow.Sort`1.Execute*
  name: Execute
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_Execute_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.Execute
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).Execute
  nameWithType: Sort<TInput>.Execute
  nameWithType.vb: Sort(Of TInput).Execute
- uid: ALE.ETLBox.DataFlow.Sort`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name: LinkTo(IDataFlowLinkTarget<TInput>)
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__
  commentId: M:ALE.ETLBox.DataFlow.Sort`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TInput))
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput))
  nameWithType: Sort<TInput>.LinkTo(IDataFlowLinkTarget<TInput>)
  nameWithType.vb: Sort(Of TInput).LinkTo(IDataFlowLinkTarget(Of TInput))
- uid: ALE.ETLBox.DataFlow.Sort`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name: LinkTo(IDataFlowLinkTarget<TInput>, Predicate<TInput>)
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_LinkTo_ALE_ETLBox_DataFlow_IDataFlowLinkTarget__0__System_Predicate__0__
  commentId: M:ALE.ETLBox.DataFlow.Sort`1.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget{`0},System.Predicate{`0})
  name.vb: LinkTo(IDataFlowLinkTarget(Of TInput), Predicate(Of TInput))
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget<TInput>, System.Predicate<TInput>)
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).LinkTo(ALE.ETLBox.DataFlow.IDataFlowLinkTarget(Of TInput), System.Predicate(Of TInput))
  nameWithType: Sort<TInput>.LinkTo(IDataFlowLinkTarget<TInput>, Predicate<TInput>)
  nameWithType.vb: Sort(Of TInput).LinkTo(IDataFlowLinkTarget(Of TInput), Predicate(Of TInput))
- uid: ALE.ETLBox.DataFlow.Sort`1.LinkTo*
  name: LinkTo
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_LinkTo_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.LinkTo
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.LinkTo
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).LinkTo
  nameWithType: Sort<TInput>.LinkTo
  nameWithType.vb: Sort(Of TInput).LinkTo
- uid: ALE.ETLBox.DataFlow.Sort`1.SortFunction
  name: SortFunction
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_SortFunction
  commentId: P:ALE.ETLBox.DataFlow.Sort`1.SortFunction
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.SortFunction
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).SortFunction
  nameWithType: Sort<TInput>.SortFunction
  nameWithType.vb: Sort(Of TInput).SortFunction
- uid: ALE.ETLBox.DataFlow.Sort`1.SortFunction*
  name: SortFunction
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_SortFunction_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.SortFunction
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.SortFunction
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).SortFunction
  nameWithType: Sort<TInput>.SortFunction
  nameWithType.vb: Sort(Of TInput).SortFunction
- uid: ALE.ETLBox.DataFlow.Sort`1.SourceBlock
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_SourceBlock
  commentId: P:ALE.ETLBox.DataFlow.Sort`1.SourceBlock
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).SourceBlock
  nameWithType: Sort<TInput>.SourceBlock
  nameWithType.vb: Sort(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Sort`1.SourceBlock*
  name: SourceBlock
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_SourceBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.SourceBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.SourceBlock
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).SourceBlock
  nameWithType: Sort<TInput>.SourceBlock
  nameWithType.vb: Sort(Of TInput).SourceBlock
- uid: ALE.ETLBox.DataFlow.Sort`1.TargetBlock
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TargetBlock
  commentId: P:ALE.ETLBox.DataFlow.Sort`1.TargetBlock
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TargetBlock
  nameWithType: Sort<TInput>.TargetBlock
  nameWithType.vb: Sort(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Sort`1.TargetBlock*
  name: TargetBlock
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TargetBlock_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.TargetBlock
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TargetBlock
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TargetBlock
  nameWithType: Sort<TInput>.TargetBlock
  nameWithType.vb: Sort(Of TInput).TargetBlock
- uid: ALE.ETLBox.DataFlow.Sort`1.TaskName
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TaskName
  commentId: P:ALE.ETLBox.DataFlow.Sort`1.TaskName
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TaskName
  nameWithType: Sort<TInput>.TaskName
  nameWithType.vb: Sort(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.Sort`1.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TaskName_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TaskName
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TaskName
  nameWithType: Sort<TInput>.TaskName
  nameWithType.vb: Sort(Of TInput).TaskName
- uid: ALE.ETLBox.DataFlow.Sort`1.TaskType
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TaskType
  commentId: P:ALE.ETLBox.DataFlow.Sort`1.TaskType
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TaskType
  nameWithType: Sort<TInput>.TaskType
  nameWithType.vb: Sort(Of TInput).TaskType
- uid: ALE.ETLBox.DataFlow.Sort`1.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.DataFlow.Sort-1.html#ALE_ETLBox_DataFlow_Sort_1_TaskType_
  commentId: Overload:ALE.ETLBox.DataFlow.Sort`1.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.DataFlow.Sort<TInput>.TaskType
  fullName.vb: ALE.ETLBox.DataFlow.Sort(Of TInput).TaskType
  nameWithType: Sort<TInput>.TaskType
  nameWithType.vb: Sort(Of TInput).TaskType
- uid: ALE.ETLBox.ETLBoxException
  name: ETLBoxException
  href: api/ALE.ETLBox.ETLBoxException.html
  commentId: T:ALE.ETLBox.ETLBoxException
  fullName: ALE.ETLBox.ETLBoxException
  nameWithType: ETLBoxException
- uid: ALE.ETLBox.ETLBoxException.#ctor
  name: ETLBoxException()
  href: api/ALE.ETLBox.ETLBoxException.html#ALE_ETLBox_ETLBoxException__ctor
  commentId: M:ALE.ETLBox.ETLBoxException.#ctor
  fullName: ALE.ETLBox.ETLBoxException.ETLBoxException()
  nameWithType: ETLBoxException.ETLBoxException()
- uid: ALE.ETLBox.ETLBoxException.#ctor(System.String)
  name: ETLBoxException(String)
  href: api/ALE.ETLBox.ETLBoxException.html#ALE_ETLBox_ETLBoxException__ctor_System_String_
  commentId: M:ALE.ETLBox.ETLBoxException.#ctor(System.String)
  fullName: ALE.ETLBox.ETLBoxException.ETLBoxException(System.String)
  nameWithType: ETLBoxException.ETLBoxException(String)
- uid: ALE.ETLBox.ETLBoxException.#ctor(System.String,System.Exception)
  name: ETLBoxException(String, Exception)
  href: api/ALE.ETLBox.ETLBoxException.html#ALE_ETLBox_ETLBoxException__ctor_System_String_System_Exception_
  commentId: M:ALE.ETLBox.ETLBoxException.#ctor(System.String,System.Exception)
  fullName: ALE.ETLBox.ETLBoxException.ETLBoxException(System.String, System.Exception)
  nameWithType: ETLBoxException.ETLBoxException(String, Exception)
- uid: ALE.ETLBox.ETLBoxException.#ctor*
  name: ETLBoxException
  href: api/ALE.ETLBox.ETLBoxException.html#ALE_ETLBox_ETLBoxException__ctor_
  commentId: Overload:ALE.ETLBox.ETLBoxException.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ETLBoxException.ETLBoxException
  nameWithType: ETLBoxException.ETLBoxException
- uid: ALE.ETLBox.ExtensionFile
  name: ExtensionFile
  href: api/ALE.ETLBox.ExtensionFile.html
  commentId: T:ALE.ETLBox.ExtensionFile
  fullName: ALE.ETLBox.ExtensionFile
  nameWithType: ExtensionFile
- uid: ALE.ETLBox.ExtensionFile.#ctor(System.String)
  name: ExtensionFile(String)
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile__ctor_System_String_
  commentId: M:ALE.ETLBox.ExtensionFile.#ctor(System.String)
  fullName: ALE.ETLBox.ExtensionFile.ExtensionFile(System.String)
  nameWithType: ExtensionFile.ExtensionFile(String)
- uid: ALE.ETLBox.ExtensionFile.#ctor*
  name: ExtensionFile
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile__ctor_
  commentId: Overload:ALE.ETLBox.ExtensionFile.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.ExtensionFile
  nameWithType: ExtensionFile.ExtensionFile
- uid: ALE.ETLBox.ExtensionFile.CheckIfHasSkipNext
  name: CheckIfHasSkipNext()
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_CheckIfHasSkipNext
  commentId: M:ALE.ETLBox.ExtensionFile.CheckIfHasSkipNext
  fullName: ALE.ETLBox.ExtensionFile.CheckIfHasSkipNext()
  nameWithType: ExtensionFile.CheckIfHasSkipNext()
- uid: ALE.ETLBox.ExtensionFile.CheckIfHasSkipNext*
  name: CheckIfHasSkipNext
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_CheckIfHasSkipNext_
  commentId: Overload:ALE.ETLBox.ExtensionFile.CheckIfHasSkipNext
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.CheckIfHasSkipNext
  nameWithType: ExtensionFile.CheckIfHasSkipNext
- uid: ALE.ETLBox.ExtensionFile.CheckIfHasVersion
  name: CheckIfHasVersion()
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_CheckIfHasVersion
  commentId: M:ALE.ETLBox.ExtensionFile.CheckIfHasVersion
  fullName: ALE.ETLBox.ExtensionFile.CheckIfHasVersion()
  nameWithType: ExtensionFile.CheckIfHasVersion()
- uid: ALE.ETLBox.ExtensionFile.CheckIfHasVersion*
  name: CheckIfHasVersion
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_CheckIfHasVersion_
  commentId: Overload:ALE.ETLBox.ExtensionFile.CheckIfHasVersion
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.CheckIfHasVersion
  nameWithType: ExtensionFile.CheckIfHasVersion
- uid: ALE.ETLBox.ExtensionFile.Content
  name: Content
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_Content
  commentId: P:ALE.ETLBox.ExtensionFile.Content
  fullName: ALE.ETLBox.ExtensionFile.Content
  nameWithType: ExtensionFile.Content
- uid: ALE.ETLBox.ExtensionFile.Content*
  name: Content
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_Content_
  commentId: Overload:ALE.ETLBox.ExtensionFile.Content
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.Content
  nameWithType: ExtensionFile.Content
- uid: ALE.ETLBox.ExtensionFile.FileName
  name: FileName
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_FileName
  commentId: P:ALE.ETLBox.ExtensionFile.FileName
  fullName: ALE.ETLBox.ExtensionFile.FileName
  nameWithType: ExtensionFile.FileName
- uid: ALE.ETLBox.ExtensionFile.FileName*
  name: FileName
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_FileName_
  commentId: Overload:ALE.ETLBox.ExtensionFile.FileName
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.FileName
  nameWithType: ExtensionFile.FileName
- uid: ALE.ETLBox.ExtensionFile.FILENAMEMATCH
  name: FILENAMEMATCH
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_FILENAMEMATCH
  commentId: F:ALE.ETLBox.ExtensionFile.FILENAMEMATCH
  fullName: ALE.ETLBox.ExtensionFile.FILENAMEMATCH
  nameWithType: ExtensionFile.FILENAMEMATCH
- uid: ALE.ETLBox.ExtensionFile.HasSkipNextStatement
  name: HasSkipNextStatement
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_HasSkipNextStatement
  commentId: P:ALE.ETLBox.ExtensionFile.HasSkipNextStatement
  fullName: ALE.ETLBox.ExtensionFile.HasSkipNextStatement
  nameWithType: ExtensionFile.HasSkipNextStatement
- uid: ALE.ETLBox.ExtensionFile.HasSkipNextStatement*
  name: HasSkipNextStatement
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_HasSkipNextStatement_
  commentId: Overload:ALE.ETLBox.ExtensionFile.HasSkipNextStatement
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.HasSkipNextStatement
  nameWithType: ExtensionFile.HasSkipNextStatement
- uid: ALE.ETLBox.ExtensionFile.IsStagExtension
  name: IsStagExtension
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_IsStagExtension
  commentId: P:ALE.ETLBox.ExtensionFile.IsStagExtension
  fullName: ALE.ETLBox.ExtensionFile.IsStagExtension
  nameWithType: ExtensionFile.IsStagExtension
- uid: ALE.ETLBox.ExtensionFile.IsStagExtension*
  name: IsStagExtension
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_IsStagExtension_
  commentId: Overload:ALE.ETLBox.ExtensionFile.IsStagExtension
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.IsStagExtension
  nameWithType: ExtensionFile.IsStagExtension
- uid: ALE.ETLBox.ExtensionFile.IsValidExtension
  name: IsValidExtension
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_IsValidExtension
  commentId: P:ALE.ETLBox.ExtensionFile.IsValidExtension
  fullName: ALE.ETLBox.ExtensionFile.IsValidExtension
  nameWithType: ExtensionFile.IsValidExtension
- uid: ALE.ETLBox.ExtensionFile.IsValidExtension*
  name: IsValidExtension
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_IsValidExtension_
  commentId: Overload:ALE.ETLBox.ExtensionFile.IsValidExtension
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.IsValidExtension
  nameWithType: ExtensionFile.IsValidExtension
- uid: ALE.ETLBox.ExtensionFile.Name
  name: Name
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_Name
  commentId: P:ALE.ETLBox.ExtensionFile.Name
  fullName: ALE.ETLBox.ExtensionFile.Name
  nameWithType: ExtensionFile.Name
- uid: ALE.ETLBox.ExtensionFile.Name*
  name: Name
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_Name_
  commentId: Overload:ALE.ETLBox.ExtensionFile.Name
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.Name
  nameWithType: ExtensionFile.Name
- uid: ALE.ETLBox.ExtensionFile.ReadContent
  name: ReadContent()
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_ReadContent
  commentId: M:ALE.ETLBox.ExtensionFile.ReadContent
  fullName: ALE.ETLBox.ExtensionFile.ReadContent()
  nameWithType: ExtensionFile.ReadContent()
- uid: ALE.ETLBox.ExtensionFile.ReadContent*
  name: ReadContent
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_ReadContent_
  commentId: Overload:ALE.ETLBox.ExtensionFile.ReadContent
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.ReadContent
  nameWithType: ExtensionFile.ReadContent
- uid: ALE.ETLBox.ExtensionFile.SKIPNEXT
  name: SKIPNEXT
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_SKIPNEXT
  commentId: F:ALE.ETLBox.ExtensionFile.SKIPNEXT
  fullName: ALE.ETLBox.ExtensionFile.SKIPNEXT
  nameWithType: ExtensionFile.SKIPNEXT
- uid: ALE.ETLBox.ExtensionFile.Type
  name: Type
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_Type
  commentId: P:ALE.ETLBox.ExtensionFile.Type
  fullName: ALE.ETLBox.ExtensionFile.Type
  nameWithType: ExtensionFile.Type
- uid: ALE.ETLBox.ExtensionFile.Type*
  name: Type
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_Type_
  commentId: Overload:ALE.ETLBox.ExtensionFile.Type
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFile.Type
  nameWithType: ExtensionFile.Type
- uid: ALE.ETLBox.ExtensionFile.VERSIONMATCH
  name: VERSIONMATCH
  href: api/ALE.ETLBox.ExtensionFile.html#ALE_ETLBox_ExtensionFile_VERSIONMATCH
  commentId: F:ALE.ETLBox.ExtensionFile.VERSIONMATCH
  fullName: ALE.ETLBox.ExtensionFile.VERSIONMATCH
  nameWithType: ExtensionFile.VERSIONMATCH
- uid: ALE.ETLBox.ExtensionFileLoader
  name: ExtensionFileLoader
  href: api/ALE.ETLBox.ExtensionFileLoader.html
  commentId: T:ALE.ETLBox.ExtensionFileLoader
  fullName: ALE.ETLBox.ExtensionFileLoader
  nameWithType: ExtensionFileLoader
- uid: ALE.ETLBox.ExtensionFileLoader.ExistsFolder
  name: ExistsFolder
  href: api/ALE.ETLBox.ExtensionFileLoader.html#ALE_ETLBox_ExtensionFileLoader_ExistsFolder
  commentId: P:ALE.ETLBox.ExtensionFileLoader.ExistsFolder
  fullName: ALE.ETLBox.ExtensionFileLoader.ExistsFolder
  nameWithType: ExtensionFileLoader.ExistsFolder
- uid: ALE.ETLBox.ExtensionFileLoader.ExistsFolder*
  name: ExistsFolder
  href: api/ALE.ETLBox.ExtensionFileLoader.html#ALE_ETLBox_ExtensionFileLoader_ExistsFolder_
  commentId: Overload:ALE.ETLBox.ExtensionFileLoader.ExistsFolder
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFileLoader.ExistsFolder
  nameWithType: ExtensionFileLoader.ExistsFolder
- uid: ALE.ETLBox.ExtensionFileLoader.ExtensionScriptsFolder
  name: ExtensionScriptsFolder
  href: api/ALE.ETLBox.ExtensionFileLoader.html#ALE_ETLBox_ExtensionFileLoader_ExtensionScriptsFolder
  commentId: F:ALE.ETLBox.ExtensionFileLoader.ExtensionScriptsFolder
  fullName: ALE.ETLBox.ExtensionFileLoader.ExtensionScriptsFolder
  nameWithType: ExtensionFileLoader.ExtensionScriptsFolder
- uid: ALE.ETLBox.ExtensionFileLoader.FILESUFFIX
  name: FILESUFFIX
  href: api/ALE.ETLBox.ExtensionFileLoader.html#ALE_ETLBox_ExtensionFileLoader_FILESUFFIX
  commentId: F:ALE.ETLBox.ExtensionFileLoader.FILESUFFIX
  fullName: ALE.ETLBox.ExtensionFileLoader.FILESUFFIX
  nameWithType: ExtensionFileLoader.FILESUFFIX
- uid: ALE.ETLBox.ExtensionFileLoader.GetExtensionFiles(System.String)
  name: GetExtensionFiles(String)
  href: api/ALE.ETLBox.ExtensionFileLoader.html#ALE_ETLBox_ExtensionFileLoader_GetExtensionFiles_System_String_
  commentId: M:ALE.ETLBox.ExtensionFileLoader.GetExtensionFiles(System.String)
  fullName: ALE.ETLBox.ExtensionFileLoader.GetExtensionFiles(System.String)
  nameWithType: ExtensionFileLoader.GetExtensionFiles(String)
- uid: ALE.ETLBox.ExtensionFileLoader.GetExtensionFiles*
  name: GetExtensionFiles
  href: api/ALE.ETLBox.ExtensionFileLoader.html#ALE_ETLBox_ExtensionFileLoader_GetExtensionFiles_
  commentId: Overload:ALE.ETLBox.ExtensionFileLoader.GetExtensionFiles
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFileLoader.GetExtensionFiles
  nameWithType: ExtensionFileLoader.GetExtensionFiles
- uid: ALE.ETLBox.ExtensionFileLoader.GetSTAGEXTFiles
  name: GetSTAGEXTFiles()
  href: api/ALE.ETLBox.ExtensionFileLoader.html#ALE_ETLBox_ExtensionFileLoader_GetSTAGEXTFiles
  commentId: M:ALE.ETLBox.ExtensionFileLoader.GetSTAGEXTFiles
  fullName: ALE.ETLBox.ExtensionFileLoader.GetSTAGEXTFiles()
  nameWithType: ExtensionFileLoader.GetSTAGEXTFiles()
- uid: ALE.ETLBox.ExtensionFileLoader.GetSTAGEXTFiles*
  name: GetSTAGEXTFiles
  href: api/ALE.ETLBox.ExtensionFileLoader.html#ALE_ETLBox_ExtensionFileLoader_GetSTAGEXTFiles_
  commentId: Overload:ALE.ETLBox.ExtensionFileLoader.GetSTAGEXTFiles
  isSpec: "True"
  fullName: ALE.ETLBox.ExtensionFileLoader.GetSTAGEXTFiles
  nameWithType: ExtensionFileLoader.GetSTAGEXTFiles
- uid: ALE.ETLBox.ExtensionFileLoader.STAGEXT
  name: STAGEXT
  href: api/ALE.ETLBox.ExtensionFileLoader.html#ALE_ETLBox_ExtensionFileLoader_STAGEXT
  commentId: F:ALE.ETLBox.ExtensionFileLoader.STAGEXT
  fullName: ALE.ETLBox.ExtensionFileLoader.STAGEXT
  nameWithType: ExtensionFileLoader.STAGEXT
- uid: ALE.ETLBox.GenericTask
  name: GenericTask
  href: api/ALE.ETLBox.GenericTask.html
  commentId: T:ALE.ETLBox.GenericTask
  fullName: ALE.ETLBox.GenericTask
  nameWithType: GenericTask
- uid: ALE.ETLBox.GenericTask._disableLogging
  name: _disableLogging
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask__disableLogging
  commentId: F:ALE.ETLBox.GenericTask._disableLogging
  fullName: ALE.ETLBox.GenericTask._disableLogging
  nameWithType: GenericTask._disableLogging
- uid: ALE.ETLBox.GenericTask.ConnectionManager
  name: ConnectionManager
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_ConnectionManager
  commentId: P:ALE.ETLBox.GenericTask.ConnectionManager
  fullName: ALE.ETLBox.GenericTask.ConnectionManager
  nameWithType: GenericTask.ConnectionManager
- uid: ALE.ETLBox.GenericTask.ConnectionManager*
  name: ConnectionManager
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_ConnectionManager_
  commentId: Overload:ALE.ETLBox.GenericTask.ConnectionManager
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.ConnectionManager
  nameWithType: GenericTask.ConnectionManager
- uid: ALE.ETLBox.GenericTask.DisableLogging
  name: DisableLogging
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_DisableLogging
  commentId: P:ALE.ETLBox.GenericTask.DisableLogging
  fullName: ALE.ETLBox.GenericTask.DisableLogging
  nameWithType: GenericTask.DisableLogging
- uid: ALE.ETLBox.GenericTask.DisableLogging*
  name: DisableLogging
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_DisableLogging_
  commentId: Overload:ALE.ETLBox.GenericTask.DisableLogging
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.DisableLogging
  nameWithType: GenericTask.DisableLogging
- uid: ALE.ETLBox.GenericTask.DoXMLCommentStyle
  name: DoXMLCommentStyle
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_DoXMLCommentStyle
  commentId: P:ALE.ETLBox.GenericTask.DoXMLCommentStyle
  fullName: ALE.ETLBox.GenericTask.DoXMLCommentStyle
  nameWithType: GenericTask.DoXMLCommentStyle
- uid: ALE.ETLBox.GenericTask.DoXMLCommentStyle*
  name: DoXMLCommentStyle
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_DoXMLCommentStyle_
  commentId: Overload:ALE.ETLBox.GenericTask.DoXMLCommentStyle
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.DoXMLCommentStyle
  nameWithType: GenericTask.DoXMLCommentStyle
- uid: ALE.ETLBox.GenericTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_Execute
  commentId: M:ALE.ETLBox.GenericTask.Execute
  fullName: ALE.ETLBox.GenericTask.Execute()
  nameWithType: GenericTask.Execute()
- uid: ALE.ETLBox.GenericTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_Execute_
  commentId: Overload:ALE.ETLBox.GenericTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.Execute
  nameWithType: GenericTask.Execute
- uid: ALE.ETLBox.GenericTask.TaskHash
  name: TaskHash
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskHash
  commentId: P:ALE.ETLBox.GenericTask.TaskHash
  fullName: ALE.ETLBox.GenericTask.TaskHash
  nameWithType: GenericTask.TaskHash
- uid: ALE.ETLBox.GenericTask.TaskHash*
  name: TaskHash
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskHash_
  commentId: Overload:ALE.ETLBox.GenericTask.TaskHash
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.TaskHash
  nameWithType: GenericTask.TaskHash
- uid: ALE.ETLBox.GenericTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskName
  commentId: P:ALE.ETLBox.GenericTask.TaskName
  fullName: ALE.ETLBox.GenericTask.TaskName
  nameWithType: GenericTask.TaskName
- uid: ALE.ETLBox.GenericTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskName_
  commentId: Overload:ALE.ETLBox.GenericTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.TaskName
  nameWithType: GenericTask.TaskName
- uid: ALE.ETLBox.GenericTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskType
  commentId: P:ALE.ETLBox.GenericTask.TaskType
  fullName: ALE.ETLBox.GenericTask.TaskType
  nameWithType: GenericTask.TaskType
- uid: ALE.ETLBox.GenericTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.GenericTask.html#ALE_ETLBox_GenericTask_TaskType_
  commentId: Overload:ALE.ETLBox.GenericTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.GenericTask.TaskType
  nameWithType: GenericTask.TaskType
- uid: ALE.ETLBox.Helper
  name: ALE.ETLBox.Helper
  href: api/ALE.ETLBox.Helper.html
  commentId: N:ALE.ETLBox.Helper
  fullName: ALE.ETLBox.Helper
  nameWithType: ALE.ETLBox.Helper
- uid: ALE.ETLBox.Helper.DataTypeConverter
  name: DataTypeConverter
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html
  commentId: T:ALE.ETLBox.Helper.DataTypeConverter
  fullName: ALE.ETLBox.Helper.DataTypeConverter
  nameWithType: DataTypeConverter
- uid: ALE.ETLBox.Helper.DataTypeConverter._REGEX
  name: _REGEX
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter__REGEX
  commentId: F:ALE.ETLBox.Helper.DataTypeConverter._REGEX
  fullName: ALE.ETLBox.Helper.DataTypeConverter._REGEX
  nameWithType: DataTypeConverter._REGEX
- uid: ALE.ETLBox.Helper.DataTypeConverter.DefaultBigIntegerLength
  name: DefaultBigIntegerLength
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_DefaultBigIntegerLength
  commentId: F:ALE.ETLBox.Helper.DataTypeConverter.DefaultBigIntegerLength
  fullName: ALE.ETLBox.Helper.DataTypeConverter.DefaultBigIntegerLength
  nameWithType: DataTypeConverter.DefaultBigIntegerLength
- uid: ALE.ETLBox.Helper.DataTypeConverter.DefaultDateTime2Length
  name: DefaultDateTime2Length
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_DefaultDateTime2Length
  commentId: F:ALE.ETLBox.Helper.DataTypeConverter.DefaultDateTime2Length
  fullName: ALE.ETLBox.Helper.DataTypeConverter.DefaultDateTime2Length
  nameWithType: DataTypeConverter.DefaultDateTime2Length
- uid: ALE.ETLBox.Helper.DataTypeConverter.DefaultDateTimeLength
  name: DefaultDateTimeLength
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_DefaultDateTimeLength
  commentId: F:ALE.ETLBox.Helper.DataTypeConverter.DefaultDateTimeLength
  fullName: ALE.ETLBox.Helper.DataTypeConverter.DefaultDateTimeLength
  nameWithType: DataTypeConverter.DefaultDateTimeLength
- uid: ALE.ETLBox.Helper.DataTypeConverter.DefaultDecimalLength
  name: DefaultDecimalLength
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_DefaultDecimalLength
  commentId: F:ALE.ETLBox.Helper.DataTypeConverter.DefaultDecimalLength
  fullName: ALE.ETLBox.Helper.DataTypeConverter.DefaultDecimalLength
  nameWithType: DataTypeConverter.DefaultDecimalLength
- uid: ALE.ETLBox.Helper.DataTypeConverter.DefaultIntegerLength
  name: DefaultIntegerLength
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_DefaultIntegerLength
  commentId: F:ALE.ETLBox.Helper.DataTypeConverter.DefaultIntegerLength
  fullName: ALE.ETLBox.Helper.DataTypeConverter.DefaultIntegerLength
  nameWithType: DataTypeConverter.DefaultIntegerLength
- uid: ALE.ETLBox.Helper.DataTypeConverter.DefaultSmallIntegerLength
  name: DefaultSmallIntegerLength
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_DefaultSmallIntegerLength
  commentId: F:ALE.ETLBox.Helper.DataTypeConverter.DefaultSmallIntegerLength
  fullName: ALE.ETLBox.Helper.DataTypeConverter.DefaultSmallIntegerLength
  nameWithType: DataTypeConverter.DefaultSmallIntegerLength
- uid: ALE.ETLBox.Helper.DataTypeConverter.DefaultStringLength
  name: DefaultStringLength
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_DefaultStringLength
  commentId: F:ALE.ETLBox.Helper.DataTypeConverter.DefaultStringLength
  fullName: ALE.ETLBox.Helper.DataTypeConverter.DefaultStringLength
  nameWithType: DataTypeConverter.DefaultStringLength
- uid: ALE.ETLBox.Helper.DataTypeConverter.DefaultTinyIntegerLength
  name: DefaultTinyIntegerLength
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_DefaultTinyIntegerLength
  commentId: F:ALE.ETLBox.Helper.DataTypeConverter.DefaultTinyIntegerLength
  fullName: ALE.ETLBox.Helper.DataTypeConverter.DefaultTinyIntegerLength
  nameWithType: DataTypeConverter.DefaultTinyIntegerLength
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetDBType(System.String)
  name: GetDBType(String)
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetDBType_System_String_
  commentId: M:ALE.ETLBox.Helper.DataTypeConverter.GetDBType(System.String)
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetDBType(System.String)
  nameWithType: DataTypeConverter.GetDBType(String)
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetDBType*
  name: GetDBType
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetDBType_
  commentId: Overload:ALE.ETLBox.Helper.DataTypeConverter.GetDBType
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetDBType
  nameWithType: DataTypeConverter.GetDBType
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetObjectTypeString(System.String)
  name: GetObjectTypeString(String)
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetObjectTypeString_System_String_
  commentId: M:ALE.ETLBox.Helper.DataTypeConverter.GetObjectTypeString(System.String)
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetObjectTypeString(System.String)
  nameWithType: DataTypeConverter.GetObjectTypeString(String)
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetObjectTypeString*
  name: GetObjectTypeString
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetObjectTypeString_
  commentId: Overload:ALE.ETLBox.Helper.DataTypeConverter.GetObjectTypeString
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetObjectTypeString
  nameWithType: DataTypeConverter.GetObjectTypeString
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetStringLengthFromCharString(System.String)
  name: GetStringLengthFromCharString(String)
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetStringLengthFromCharString_System_String_
  commentId: M:ALE.ETLBox.Helper.DataTypeConverter.GetStringLengthFromCharString(System.String)
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetStringLengthFromCharString(System.String)
  nameWithType: DataTypeConverter.GetStringLengthFromCharString(String)
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetStringLengthFromCharString*
  name: GetStringLengthFromCharString
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetStringLengthFromCharString_
  commentId: Overload:ALE.ETLBox.Helper.DataTypeConverter.GetStringLengthFromCharString
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetStringLengthFromCharString
  nameWithType: DataTypeConverter.GetStringLengthFromCharString
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetTypeLength(System.String)
  name: GetTypeLength(String)
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetTypeLength_System_String_
  commentId: M:ALE.ETLBox.Helper.DataTypeConverter.GetTypeLength(System.String)
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetTypeLength(System.String)
  nameWithType: DataTypeConverter.GetTypeLength(String)
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetTypeLength*
  name: GetTypeLength
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetTypeLength_
  commentId: Overload:ALE.ETLBox.Helper.DataTypeConverter.GetTypeLength
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetTypeLength
  nameWithType: DataTypeConverter.GetTypeLength
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetTypeObject(System.String)
  name: GetTypeObject(String)
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetTypeObject_System_String_
  commentId: M:ALE.ETLBox.Helper.DataTypeConverter.GetTypeObject(System.String)
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetTypeObject(System.String)
  nameWithType: DataTypeConverter.GetTypeObject(String)
- uid: ALE.ETLBox.Helper.DataTypeConverter.GetTypeObject*
  name: GetTypeObject
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_GetTypeObject_
  commentId: Overload:ALE.ETLBox.Helper.DataTypeConverter.GetTypeObject
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.DataTypeConverter.GetTypeObject
  nameWithType: DataTypeConverter.GetTypeObject
- uid: ALE.ETLBox.Helper.DataTypeConverter.IsCharTypeDefinition(System.String)
  name: IsCharTypeDefinition(String)
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_IsCharTypeDefinition_System_String_
  commentId: M:ALE.ETLBox.Helper.DataTypeConverter.IsCharTypeDefinition(System.String)
  fullName: ALE.ETLBox.Helper.DataTypeConverter.IsCharTypeDefinition(System.String)
  nameWithType: DataTypeConverter.IsCharTypeDefinition(String)
- uid: ALE.ETLBox.Helper.DataTypeConverter.IsCharTypeDefinition*
  name: IsCharTypeDefinition
  href: api/ALE.ETLBox.Helper.DataTypeConverter.html#ALE_ETLBox_Helper_DataTypeConverter_IsCharTypeDefinition_
  commentId: Overload:ALE.ETLBox.Helper.DataTypeConverter.IsCharTypeDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.DataTypeConverter.IsCharTypeDefinition
  nameWithType: DataTypeConverter.IsCharTypeDefinition
- uid: ALE.ETLBox.Helper.HashHelper
  name: HashHelper
  href: api/ALE.ETLBox.Helper.HashHelper.html
  commentId: T:ALE.ETLBox.Helper.HashHelper
  fullName: ALE.ETLBox.Helper.HashHelper
  nameWithType: HashHelper
- uid: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask)
  name: Encrypt_Char40(ITask)
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_Encrypt_Char40_ALE_ETLBox_ITask_
  commentId: M:ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask)
  fullName: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask)
  nameWithType: HashHelper.Encrypt_Char40(ITask)
- uid: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask,System.String)
  name: Encrypt_Char40(ITask, String)
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_Encrypt_Char40_ALE_ETLBox_ITask_System_String_
  commentId: M:ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask,System.String)
  fullName: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(ALE.ETLBox.ITask, System.String)
  nameWithType: HashHelper.Encrypt_Char40(ITask, String)
- uid: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(System.String)
  name: Encrypt_Char40(String)
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_Encrypt_Char40_System_String_
  commentId: M:ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(System.String)
  fullName: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40(System.String)
  nameWithType: HashHelper.Encrypt_Char40(String)
- uid: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40*
  name: Encrypt_Char40
  href: api/ALE.ETLBox.Helper.HashHelper.html#ALE_ETLBox_Helper_HashHelper_Encrypt_Char40_
  commentId: Overload:ALE.ETLBox.Helper.HashHelper.Encrypt_Char40
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.HashHelper.Encrypt_Char40
  nameWithType: HashHelper.Encrypt_Char40
- uid: ALE.ETLBox.Helper.SqlHelper
  name: SqlHelper
  href: api/ALE.ETLBox.Helper.SqlHelper.html
  commentId: T:ALE.ETLBox.Helper.SqlHelper
  fullName: ALE.ETLBox.Helper.SqlHelper
  nameWithType: SqlHelper
- uid: ALE.ETLBox.Helper.SqlHelper.Comment(System.String)
  name: Comment(String)
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Comment_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelper.Comment(System.String)
  fullName: ALE.ETLBox.Helper.SqlHelper.Comment(System.String)
  nameWithType: SqlHelper.Comment(String)
- uid: ALE.ETLBox.Helper.SqlHelper.Comment*
  name: Comment
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Comment_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.Comment
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.Comment
  nameWithType: SqlHelper.Comment
- uid: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists(System.String[])
  name: DropTablesIfExists(String[])
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_DropTablesIfExists_System_String___
  commentId: M:ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists(System.String[])
  name.vb: DropTablesIfExists(String())
  fullName: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists(System.String[])
  fullName.vb: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists(System.String())
  nameWithType: SqlHelper.DropTablesIfExists(String[])
  nameWithType.vb: SqlHelper.DropTablesIfExists(String())
- uid: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists*
  name: DropTablesIfExists
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_DropTablesIfExists_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.DropTablesIfExists
  nameWithType: SqlHelper.DropTablesIfExists
- uid: ALE.ETLBox.Helper.SqlHelper.Headline1(System.String)
  name: Headline1(String)
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Headline1_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelper.Headline1(System.String)
  fullName: ALE.ETLBox.Helper.SqlHelper.Headline1(System.String)
  nameWithType: SqlHelper.Headline1(String)
- uid: ALE.ETLBox.Helper.SqlHelper.Headline1*
  name: Headline1
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Headline1_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.Headline1
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.Headline1
  nameWithType: SqlHelper.Headline1
- uid: ALE.ETLBox.Helper.SqlHelper.Headline2(System.String)
  name: Headline2(String)
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Headline2_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelper.Headline2(System.String)
  fullName: ALE.ETLBox.Helper.SqlHelper.Headline2(System.String)
  nameWithType: SqlHelper.Headline2(String)
- uid: ALE.ETLBox.Helper.SqlHelper.Headline2*
  name: Headline2
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Headline2_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.Headline2
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.Headline2
  nameWithType: SqlHelper.Headline2
- uid: ALE.ETLBox.Helper.SqlHelper.Sequence(System.String,System.String,System.Int32,System.String,System.String)
  name: Sequence(String, String, Int32, String, String)
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Sequence_System_String_System_String_System_Int32_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelper.Sequence(System.String,System.String,System.Int32,System.String,System.String)
  fullName: ALE.ETLBox.Helper.SqlHelper.Sequence(System.String, System.String, System.Int32, System.String, System.String)
  nameWithType: SqlHelper.Sequence(String, String, Int32, String, String)
- uid: ALE.ETLBox.Helper.SqlHelper.Sequence*
  name: Sequence
  href: api/ALE.ETLBox.Helper.SqlHelper.html#ALE_ETLBox_Helper_SqlHelper_Sequence_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelper.Sequence
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelper.Sequence
  nameWithType: SqlHelper.Sequence
- uid: ALE.ETLBox.Helper.SqlHelperExtensions
  name: SqlHelperExtensions
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html
  commentId: T:ALE.ETLBox.Helper.SqlHelperExtensions
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions
  nameWithType: SqlHelperExtensions
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(ALE.ETLBox.ITableColumn,System.String,System.String,System.String)
  name: AsString(ITableColumn, String, String, String)
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsString_ALE_ETLBox_ITableColumn_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelperExtensions.AsString(ALE.ETLBox.ITableColumn,System.String,System.String,System.String)
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(ALE.ETLBox.ITableColumn, System.String, System.String, System.String)
  nameWithType: SqlHelperExtensions.AsString(ITableColumn, String, String, String)
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(System.Collections.Generic.IEnumerable{ALE.ETLBox.ITableColumn},System.String,System.String,System.String)
  name: AsString(IEnumerable<ITableColumn>, String, String, String)
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsString_System_Collections_Generic_IEnumerable_ALE_ETLBox_ITableColumn__System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelperExtensions.AsString(System.Collections.Generic.IEnumerable{ALE.ETLBox.ITableColumn},System.String,System.String,System.String)
  name.vb: AsString(IEnumerable(Of ITableColumn), String, String, String)
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(System.Collections.Generic.IEnumerable<ALE.ETLBox.ITableColumn>, System.String, System.String, System.String)
  fullName.vb: ALE.ETLBox.Helper.SqlHelperExtensions.AsString(System.Collections.Generic.IEnumerable(Of ALE.ETLBox.ITableColumn), System.String, System.String, System.String)
  nameWithType: SqlHelperExtensions.AsString(IEnumerable<ITableColumn>, String, String, String)
  nameWithType.vb: SqlHelperExtensions.AsString(IEnumerable(Of ITableColumn), String, String, String)
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsString*
  name: AsString
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsString_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelperExtensions.AsString
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsString
  nameWithType: SqlHelperExtensions.AsString
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine(System.Collections.Generic.IEnumerable{ALE.ETLBox.ITableColumn},System.String,System.String,System.String)
  name: AsStringWithNewLine(IEnumerable<ITableColumn>, String, String, String)
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsStringWithNewLine_System_Collections_Generic_IEnumerable_ALE_ETLBox_ITableColumn__System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine(System.Collections.Generic.IEnumerable{ALE.ETLBox.ITableColumn},System.String,System.String,System.String)
  name.vb: AsStringWithNewLine(IEnumerable(Of ITableColumn), String, String, String)
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine(System.Collections.Generic.IEnumerable<ALE.ETLBox.ITableColumn>, System.String, System.String, System.String)
  fullName.vb: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine(System.Collections.Generic.IEnumerable(Of ALE.ETLBox.ITableColumn), System.String, System.String, System.String)
  nameWithType: SqlHelperExtensions.AsStringWithNewLine(IEnumerable<ITableColumn>, String, String, String)
  nameWithType.vb: SqlHelperExtensions.AsStringWithNewLine(IEnumerable(Of ITableColumn), String, String, String)
- uid: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine*
  name: AsStringWithNewLine
  href: api/ALE.ETLBox.Helper.SqlHelperExtensions.html#ALE_ETLBox_Helper_SqlHelperExtensions_AsStringWithNewLine_
  commentId: Overload:ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.SqlHelperExtensions.AsStringWithNewLine
  nameWithType: SqlHelperExtensions.AsStringWithNewLine
- uid: ALE.ETLBox.Helper.StringExtension
  name: StringExtension
  href: api/ALE.ETLBox.Helper.StringExtension.html
  commentId: T:ALE.ETLBox.Helper.StringExtension
  fullName: ALE.ETLBox.Helper.StringExtension
  nameWithType: StringExtension
- uid: ALE.ETLBox.Helper.StringExtension.NullOrSqlString(System.String)
  name: NullOrSqlString(String)
  href: api/ALE.ETLBox.Helper.StringExtension.html#ALE_ETLBox_Helper_StringExtension_NullOrSqlString_System_String_
  commentId: M:ALE.ETLBox.Helper.StringExtension.NullOrSqlString(System.String)
  fullName: ALE.ETLBox.Helper.StringExtension.NullOrSqlString(System.String)
  nameWithType: StringExtension.NullOrSqlString(String)
- uid: ALE.ETLBox.Helper.StringExtension.NullOrSqlString*
  name: NullOrSqlString
  href: api/ALE.ETLBox.Helper.StringExtension.html#ALE_ETLBox_Helper_StringExtension_NullOrSqlString_
  commentId: Overload:ALE.ETLBox.Helper.StringExtension.NullOrSqlString
  isSpec: "True"
  fullName: ALE.ETLBox.Helper.StringExtension.NullOrSqlString
  nameWithType: StringExtension.NullOrSqlString
- uid: ALE.ETLBox.IDbConnectionString
  name: IDbConnectionString
  href: api/ALE.ETLBox.IDbConnectionString.html
  commentId: T:ALE.ETLBox.IDbConnectionString
  fullName: ALE.ETLBox.IDbConnectionString
  nameWithType: IDbConnectionString
- uid: ALE.ETLBox.IDbConnectionString.ToString
  name: ToString()
  href: api/ALE.ETLBox.IDbConnectionString.html#ALE_ETLBox_IDbConnectionString_ToString
  commentId: M:ALE.ETLBox.IDbConnectionString.ToString
  fullName: ALE.ETLBox.IDbConnectionString.ToString()
  nameWithType: IDbConnectionString.ToString()
- uid: ALE.ETLBox.IDbConnectionString.ToString*
  name: ToString
  href: api/ALE.ETLBox.IDbConnectionString.html#ALE_ETLBox_IDbConnectionString_ToString_
  commentId: Overload:ALE.ETLBox.IDbConnectionString.ToString
  isSpec: "True"
  fullName: ALE.ETLBox.IDbConnectionString.ToString
  nameWithType: IDbConnectionString.ToString
- uid: ALE.ETLBox.IDbConnectionString.Value
  name: Value
  href: api/ALE.ETLBox.IDbConnectionString.html#ALE_ETLBox_IDbConnectionString_Value
  commentId: P:ALE.ETLBox.IDbConnectionString.Value
  fullName: ALE.ETLBox.IDbConnectionString.Value
  nameWithType: IDbConnectionString.Value
- uid: ALE.ETLBox.IDbConnectionString.Value*
  name: Value
  href: api/ALE.ETLBox.IDbConnectionString.html#ALE_ETLBox_IDbConnectionString_Value_
  commentId: Overload:ALE.ETLBox.IDbConnectionString.Value
  isSpec: "True"
  fullName: ALE.ETLBox.IDbConnectionString.Value
  nameWithType: IDbConnectionString.Value
- uid: ALE.ETLBox.ITableColumn
  name: ITableColumn
  href: api/ALE.ETLBox.ITableColumn.html
  commentId: T:ALE.ETLBox.ITableColumn
  fullName: ALE.ETLBox.ITableColumn
  nameWithType: ITableColumn
- uid: ALE.ETLBox.ITableColumn.AllowNulls
  name: AllowNulls
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_AllowNulls
  commentId: P:ALE.ETLBox.ITableColumn.AllowNulls
  fullName: ALE.ETLBox.ITableColumn.AllowNulls
  nameWithType: ITableColumn.AllowNulls
- uid: ALE.ETLBox.ITableColumn.AllowNulls*
  name: AllowNulls
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_AllowNulls_
  commentId: Overload:ALE.ETLBox.ITableColumn.AllowNulls
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.AllowNulls
  nameWithType: ITableColumn.AllowNulls
- uid: ALE.ETLBox.ITableColumn.Collation
  name: Collation
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_Collation
  commentId: P:ALE.ETLBox.ITableColumn.Collation
  fullName: ALE.ETLBox.ITableColumn.Collation
  nameWithType: ITableColumn.Collation
- uid: ALE.ETLBox.ITableColumn.Collation*
  name: Collation
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_Collation_
  commentId: Overload:ALE.ETLBox.ITableColumn.Collation
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.Collation
  nameWithType: ITableColumn.Collation
- uid: ALE.ETLBox.ITableColumn.ComputedColumn
  name: ComputedColumn
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_ComputedColumn
  commentId: P:ALE.ETLBox.ITableColumn.ComputedColumn
  fullName: ALE.ETLBox.ITableColumn.ComputedColumn
  nameWithType: ITableColumn.ComputedColumn
- uid: ALE.ETLBox.ITableColumn.ComputedColumn*
  name: ComputedColumn
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_ComputedColumn_
  commentId: Overload:ALE.ETLBox.ITableColumn.ComputedColumn
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.ComputedColumn
  nameWithType: ITableColumn.ComputedColumn
- uid: ALE.ETLBox.ITableColumn.DataType
  name: DataType
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DataType
  commentId: P:ALE.ETLBox.ITableColumn.DataType
  fullName: ALE.ETLBox.ITableColumn.DataType
  nameWithType: ITableColumn.DataType
- uid: ALE.ETLBox.ITableColumn.DataType*
  name: DataType
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DataType_
  commentId: Overload:ALE.ETLBox.ITableColumn.DataType
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.DataType
  nameWithType: ITableColumn.DataType
- uid: ALE.ETLBox.ITableColumn.DefaultConstraintName
  name: DefaultConstraintName
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DefaultConstraintName
  commentId: P:ALE.ETLBox.ITableColumn.DefaultConstraintName
  fullName: ALE.ETLBox.ITableColumn.DefaultConstraintName
  nameWithType: ITableColumn.DefaultConstraintName
- uid: ALE.ETLBox.ITableColumn.DefaultConstraintName*
  name: DefaultConstraintName
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DefaultConstraintName_
  commentId: Overload:ALE.ETLBox.ITableColumn.DefaultConstraintName
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.DefaultConstraintName
  nameWithType: ITableColumn.DefaultConstraintName
- uid: ALE.ETLBox.ITableColumn.DefaultValue
  name: DefaultValue
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DefaultValue
  commentId: P:ALE.ETLBox.ITableColumn.DefaultValue
  fullName: ALE.ETLBox.ITableColumn.DefaultValue
  nameWithType: ITableColumn.DefaultValue
- uid: ALE.ETLBox.ITableColumn.DefaultValue*
  name: DefaultValue
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_DefaultValue_
  commentId: Overload:ALE.ETLBox.ITableColumn.DefaultValue
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.DefaultValue
  nameWithType: ITableColumn.DefaultValue
- uid: ALE.ETLBox.ITableColumn.IdentityIncrement
  name: IdentityIncrement
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IdentityIncrement
  commentId: P:ALE.ETLBox.ITableColumn.IdentityIncrement
  fullName: ALE.ETLBox.ITableColumn.IdentityIncrement
  nameWithType: ITableColumn.IdentityIncrement
- uid: ALE.ETLBox.ITableColumn.IdentityIncrement*
  name: IdentityIncrement
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IdentityIncrement_
  commentId: Overload:ALE.ETLBox.ITableColumn.IdentityIncrement
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.IdentityIncrement
  nameWithType: ITableColumn.IdentityIncrement
- uid: ALE.ETLBox.ITableColumn.IdentitySeed
  name: IdentitySeed
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IdentitySeed
  commentId: P:ALE.ETLBox.ITableColumn.IdentitySeed
  fullName: ALE.ETLBox.ITableColumn.IdentitySeed
  nameWithType: ITableColumn.IdentitySeed
- uid: ALE.ETLBox.ITableColumn.IdentitySeed*
  name: IdentitySeed
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IdentitySeed_
  commentId: Overload:ALE.ETLBox.ITableColumn.IdentitySeed
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.IdentitySeed
  nameWithType: ITableColumn.IdentitySeed
- uid: ALE.ETLBox.ITableColumn.IsIdentity
  name: IsIdentity
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IsIdentity
  commentId: P:ALE.ETLBox.ITableColumn.IsIdentity
  fullName: ALE.ETLBox.ITableColumn.IsIdentity
  nameWithType: ITableColumn.IsIdentity
- uid: ALE.ETLBox.ITableColumn.IsIdentity*
  name: IsIdentity
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IsIdentity_
  commentId: Overload:ALE.ETLBox.ITableColumn.IsIdentity
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.IsIdentity
  nameWithType: ITableColumn.IsIdentity
- uid: ALE.ETLBox.ITableColumn.IsPrimaryKey
  name: IsPrimaryKey
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IsPrimaryKey
  commentId: P:ALE.ETLBox.ITableColumn.IsPrimaryKey
  fullName: ALE.ETLBox.ITableColumn.IsPrimaryKey
  nameWithType: ITableColumn.IsPrimaryKey
- uid: ALE.ETLBox.ITableColumn.IsPrimaryKey*
  name: IsPrimaryKey
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_IsPrimaryKey_
  commentId: Overload:ALE.ETLBox.ITableColumn.IsPrimaryKey
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.IsPrimaryKey
  nameWithType: ITableColumn.IsPrimaryKey
- uid: ALE.ETLBox.ITableColumn.Name
  name: Name
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_Name
  commentId: P:ALE.ETLBox.ITableColumn.Name
  fullName: ALE.ETLBox.ITableColumn.Name
  nameWithType: ITableColumn.Name
- uid: ALE.ETLBox.ITableColumn.Name*
  name: Name
  href: api/ALE.ETLBox.ITableColumn.html#ALE_ETLBox_ITableColumn_Name_
  commentId: Overload:ALE.ETLBox.ITableColumn.Name
  isSpec: "True"
  fullName: ALE.ETLBox.ITableColumn.Name
  nameWithType: ITableColumn.Name
- uid: ALE.ETLBox.ITableData
  name: ITableData
  href: api/ALE.ETLBox.ITableData.html
  commentId: T:ALE.ETLBox.ITableData
  fullName: ALE.ETLBox.ITableData
  nameWithType: ITableData
- uid: ALE.ETLBox.ITableData.ColumnMapping
  name: ColumnMapping
  href: api/ALE.ETLBox.ITableData.html#ALE_ETLBox_ITableData_ColumnMapping
  commentId: P:ALE.ETLBox.ITableData.ColumnMapping
  fullName: ALE.ETLBox.ITableData.ColumnMapping
  nameWithType: ITableData.ColumnMapping
- uid: ALE.ETLBox.ITableData.ColumnMapping*
  name: ColumnMapping
  href: api/ALE.ETLBox.ITableData.html#ALE_ETLBox_ITableData_ColumnMapping_
  commentId: Overload:ALE.ETLBox.ITableData.ColumnMapping
  isSpec: "True"
  fullName: ALE.ETLBox.ITableData.ColumnMapping
  nameWithType: ITableData.ColumnMapping
- uid: ALE.ETLBox.ITask
  name: ITask
  href: api/ALE.ETLBox.ITask.html
  commentId: T:ALE.ETLBox.ITask
  fullName: ALE.ETLBox.ITask
  nameWithType: ITask
- uid: ALE.ETLBox.ITask.ConnectionManager
  name: ConnectionManager
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_ConnectionManager
  commentId: P:ALE.ETLBox.ITask.ConnectionManager
  fullName: ALE.ETLBox.ITask.ConnectionManager
  nameWithType: ITask.ConnectionManager
- uid: ALE.ETLBox.ITask.ConnectionManager*
  name: ConnectionManager
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_ConnectionManager_
  commentId: Overload:ALE.ETLBox.ITask.ConnectionManager
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.ConnectionManager
  nameWithType: ITask.ConnectionManager
- uid: ALE.ETLBox.ITask.DisableLogging
  name: DisableLogging
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_DisableLogging
  commentId: P:ALE.ETLBox.ITask.DisableLogging
  fullName: ALE.ETLBox.ITask.DisableLogging
  nameWithType: ITask.DisableLogging
- uid: ALE.ETLBox.ITask.DisableLogging*
  name: DisableLogging
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_DisableLogging_
  commentId: Overload:ALE.ETLBox.ITask.DisableLogging
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.DisableLogging
  nameWithType: ITask.DisableLogging
- uid: ALE.ETLBox.ITask.Execute
  name: Execute()
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_Execute
  commentId: M:ALE.ETLBox.ITask.Execute
  fullName: ALE.ETLBox.ITask.Execute()
  nameWithType: ITask.Execute()
- uid: ALE.ETLBox.ITask.Execute*
  name: Execute
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_Execute_
  commentId: Overload:ALE.ETLBox.ITask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.Execute
  nameWithType: ITask.Execute
- uid: ALE.ETLBox.ITask.TaskHash
  name: TaskHash
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskHash
  commentId: P:ALE.ETLBox.ITask.TaskHash
  fullName: ALE.ETLBox.ITask.TaskHash
  nameWithType: ITask.TaskHash
- uid: ALE.ETLBox.ITask.TaskHash*
  name: TaskHash
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskHash_
  commentId: Overload:ALE.ETLBox.ITask.TaskHash
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.TaskHash
  nameWithType: ITask.TaskHash
- uid: ALE.ETLBox.ITask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskName
  commentId: P:ALE.ETLBox.ITask.TaskName
  fullName: ALE.ETLBox.ITask.TaskName
  nameWithType: ITask.TaskName
- uid: ALE.ETLBox.ITask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskName_
  commentId: Overload:ALE.ETLBox.ITask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.TaskName
  nameWithType: ITask.TaskName
- uid: ALE.ETLBox.ITask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskType
  commentId: P:ALE.ETLBox.ITask.TaskType
  fullName: ALE.ETLBox.ITask.TaskType
  nameWithType: ITask.TaskType
- uid: ALE.ETLBox.ITask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.ITask.html#ALE_ETLBox_ITask_TaskType_
  commentId: Overload:ALE.ETLBox.ITask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.ITask.TaskType
  nameWithType: ITask.TaskType
- uid: ALE.ETLBox.Logging
  name: ALE.ETLBox.Logging
  href: api/ALE.ETLBox.Logging.html
  commentId: N:ALE.ETLBox.Logging
  fullName: ALE.ETLBox.Logging
  nameWithType: ALE.ETLBox.Logging
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask
  name: AbortLoadProcessTask
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html
  commentId: T:ALE.ETLBox.Logging.AbortLoadProcessTask
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask
  nameWithType: AbortLoadProcessTask
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor
  name: AbortLoadProcessTask()
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask()
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask()
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.Nullable{System.Int32})
  name: AbortLoadProcessTask(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.Nullable{System.Int32})
  name.vb: AbortLoadProcessTask(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.Nullable(Of System.Int32))
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask(Nullable<Int32>)
  nameWithType.vb: AbortLoadProcessTask.AbortLoadProcessTask(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.Nullable{System.Int32},System.String)
  name: AbortLoadProcessTask(Nullable<Int32>, String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor_System_Nullable_System_Int32__System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.Nullable{System.Int32},System.String)
  name.vb: AbortLoadProcessTask(Nullable(Of Int32), String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.Nullable<System.Int32>, System.String)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.Nullable(Of System.Int32), System.String)
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask(Nullable<Int32>, String)
  nameWithType.vb: AbortLoadProcessTask.AbortLoadProcessTask(Nullable(Of Int32), String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.String)
  name: AbortLoadProcessTask(String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask(System.String)
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask(String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor*
  name: AbortLoadProcessTask
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortLoadProcessTask
  nameWithType: AbortLoadProcessTask.AbortLoadProcessTask
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask._loadProcessKey
  name: _loadProcessKey
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask__loadProcessKey
  commentId: F:ALE.ETLBox.Logging.AbortLoadProcessTask._loadProcessKey
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask._loadProcessKey
  nameWithType: AbortLoadProcessTask._loadProcessKey
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort
  name: Abort()
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort()
  nameWithType: AbortLoadProcessTask.Abort()
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable{System.Int32})
  name: Abort(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable{System.Int32})
  name.vb: Abort(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable(Of System.Int32))
  nameWithType: AbortLoadProcessTask.Abort(Nullable<Int32>)
  nameWithType.vb: AbortLoadProcessTask.Abort(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable{System.Int32},System.String)
  name: Abort(Nullable<Int32>, String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_System_Nullable_System_Int32__System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable{System.Int32},System.String)
  name.vb: Abort(Nullable(Of Int32), String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable<System.Int32>, System.String)
  fullName.vb: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.Nullable(Of System.Int32), System.String)
  nameWithType: AbortLoadProcessTask.Abort(Nullable<Int32>, String)
  nameWithType.vb: AbortLoadProcessTask.Abort(Nullable(Of Int32), String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.String)
  name: Abort(String)
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_System_String_
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.String)
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort(System.String)
  nameWithType: AbortLoadProcessTask.Abort(String)
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort*
  name: Abort
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Abort_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.Abort
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Abort
  nameWithType: AbortLoadProcessTask.Abort
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  name: AbortMessage
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_AbortMessage
  commentId: P:ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  nameWithType: AbortLoadProcessTask.AbortMessage
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage*
  name: AbortMessage
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_AbortMessage_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.AbortMessage
  nameWithType: AbortLoadProcessTask.AbortMessage
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Execute
  commentId: M:ALE.ETLBox.Logging.AbortLoadProcessTask.Execute
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Execute()
  nameWithType: AbortLoadProcessTask.Execute()
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Execute
  nameWithType: AbortLoadProcessTask.Execute
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessKey
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessKey
  nameWithType: AbortLoadProcessTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.LoadProcessKey
  nameWithType: AbortLoadProcessTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Sql
  commentId: P:ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  nameWithType: AbortLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.Sql
  nameWithType: AbortLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_TaskName
  commentId: P:ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  nameWithType: AbortLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskName
  nameWithType: AbortLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_TaskType
  commentId: P:ALE.ETLBox.Logging.AbortLoadProcessTask.TaskType
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskType
  nameWithType: AbortLoadProcessTask.TaskType
- uid: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.AbortLoadProcessTask.html#ALE_ETLBox_Logging_AbortLoadProcessTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.AbortLoadProcessTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.AbortLoadProcessTask.TaskType
  nameWithType: AbortLoadProcessTask.TaskType
- uid: ALE.ETLBox.Logging.CleanUpLogTask
  name: CleanUpLogTask
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html
  commentId: T:ALE.ETLBox.Logging.CleanUpLogTask
  fullName: ALE.ETLBox.Logging.CleanUpLogTask
  nameWithType: CleanUpLogTask
- uid: ALE.ETLBox.Logging.CleanUpLogTask.#ctor
  name: CleanUpLogTask()
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask__ctor
  commentId: M:ALE.ETLBox.Logging.CleanUpLogTask.#ctor
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.CleanUpLogTask()
  nameWithType: CleanUpLogTask.CleanUpLogTask()
- uid: ALE.ETLBox.Logging.CleanUpLogTask.#ctor(System.Int32)
  name: CleanUpLogTask(Int32)
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask__ctor_System_Int32_
  commentId: M:ALE.ETLBox.Logging.CleanUpLogTask.#ctor(System.Int32)
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.CleanUpLogTask(System.Int32)
  nameWithType: CleanUpLogTask.CleanUpLogTask(Int32)
- uid: ALE.ETLBox.Logging.CleanUpLogTask.#ctor*
  name: CleanUpLogTask
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.CleanUpLogTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.CleanUpLogTask
  nameWithType: CleanUpLogTask.CleanUpLogTask
- uid: ALE.ETLBox.Logging.CleanUpLogTask.CleanUp(System.Int32)
  name: CleanUp(Int32)
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_CleanUp_System_Int32_
  commentId: M:ALE.ETLBox.Logging.CleanUpLogTask.CleanUp(System.Int32)
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.CleanUp(System.Int32)
  nameWithType: CleanUpLogTask.CleanUp(Int32)
- uid: ALE.ETLBox.Logging.CleanUpLogTask.CleanUp*
  name: CleanUp
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_CleanUp_
  commentId: Overload:ALE.ETLBox.Logging.CleanUpLogTask.CleanUp
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.CleanUp
  nameWithType: CleanUpLogTask.CleanUp
- uid: ALE.ETLBox.Logging.CleanUpLogTask.DaysToKeep
  name: DaysToKeep
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_DaysToKeep
  commentId: P:ALE.ETLBox.Logging.CleanUpLogTask.DaysToKeep
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.DaysToKeep
  nameWithType: CleanUpLogTask.DaysToKeep
- uid: ALE.ETLBox.Logging.CleanUpLogTask.DaysToKeep*
  name: DaysToKeep
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_DaysToKeep_
  commentId: Overload:ALE.ETLBox.Logging.CleanUpLogTask.DaysToKeep
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.DaysToKeep
  nameWithType: CleanUpLogTask.DaysToKeep
- uid: ALE.ETLBox.Logging.CleanUpLogTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_Execute
  commentId: M:ALE.ETLBox.Logging.CleanUpLogTask.Execute
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.Execute()
  nameWithType: CleanUpLogTask.Execute()
- uid: ALE.ETLBox.Logging.CleanUpLogTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.CleanUpLogTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.Execute
  nameWithType: CleanUpLogTask.Execute
- uid: ALE.ETLBox.Logging.CleanUpLogTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_Sql
  commentId: P:ALE.ETLBox.Logging.CleanUpLogTask.Sql
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.Sql
  nameWithType: CleanUpLogTask.Sql
- uid: ALE.ETLBox.Logging.CleanUpLogTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.CleanUpLogTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.Sql
  nameWithType: CleanUpLogTask.Sql
- uid: ALE.ETLBox.Logging.CleanUpLogTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_TaskName
  commentId: P:ALE.ETLBox.Logging.CleanUpLogTask.TaskName
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.TaskName
  nameWithType: CleanUpLogTask.TaskName
- uid: ALE.ETLBox.Logging.CleanUpLogTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.CleanUpLogTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.TaskName
  nameWithType: CleanUpLogTask.TaskName
- uid: ALE.ETLBox.Logging.CleanUpLogTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_TaskType
  commentId: P:ALE.ETLBox.Logging.CleanUpLogTask.TaskType
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.TaskType
  nameWithType: CleanUpLogTask.TaskType
- uid: ALE.ETLBox.Logging.CleanUpLogTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.CleanUpLogTask.html#ALE_ETLBox_Logging_CleanUpLogTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.CleanUpLogTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CleanUpLogTask.TaskType
  nameWithType: CleanUpLogTask.TaskType
- uid: ALE.ETLBox.Logging.CreateLogTablesTask
  name: CreateLogTablesTask
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html
  commentId: T:ALE.ETLBox.Logging.CreateLogTablesTask
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask
  nameWithType: CreateLogTablesTask
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.#ctor
  name: CreateLogTablesTask()
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask__ctor
  commentId: M:ALE.ETLBox.Logging.CreateLogTablesTask.#ctor
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.CreateLogTablesTask()
  nameWithType: CreateLogTablesTask.CreateLogTablesTask()
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.#ctor*
  name: CreateLogTablesTask
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTablesTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.CreateLogTablesTask
  nameWithType: CreateLogTablesTask.CreateLogTablesTask
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.CreateLog
  name: CreateLog()
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_CreateLog
  commentId: M:ALE.ETLBox.Logging.CreateLogTablesTask.CreateLog
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.CreateLog()
  nameWithType: CreateLogTablesTask.CreateLog()
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.CreateLog*
  name: CreateLog
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_CreateLog_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTablesTask.CreateLog
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.CreateLog
  nameWithType: CreateLogTablesTask.CreateLog
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_Execute
  commentId: M:ALE.ETLBox.Logging.CreateLogTablesTask.Execute
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.Execute()
  nameWithType: CreateLogTablesTask.Execute()
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTablesTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.Execute
  nameWithType: CreateLogTablesTask.Execute
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_Sql
  commentId: P:ALE.ETLBox.Logging.CreateLogTablesTask.Sql
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.Sql
  nameWithType: CreateLogTablesTask.Sql
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTablesTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.Sql
  nameWithType: CreateLogTablesTask.Sql
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_TaskName
  commentId: P:ALE.ETLBox.Logging.CreateLogTablesTask.TaskName
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.TaskName
  nameWithType: CreateLogTablesTask.TaskName
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTablesTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.TaskName
  nameWithType: CreateLogTablesTask.TaskName
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_TaskType
  commentId: P:ALE.ETLBox.Logging.CreateLogTablesTask.TaskType
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.TaskType
  nameWithType: CreateLogTablesTask.TaskType
- uid: ALE.ETLBox.Logging.CreateLogTablesTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.CreateLogTablesTask.html#ALE_ETLBox_Logging_CreateLogTablesTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.CreateLogTablesTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.CreateLogTablesTask.TaskType
  nameWithType: CreateLogTablesTask.TaskType
- uid: ALE.ETLBox.Logging.EndLoadProcessTask
  name: EndLoadProcessTask
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html
  commentId: T:ALE.ETLBox.Logging.EndLoadProcessTask
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask
  nameWithType: EndLoadProcessTask
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor
  name: EndLoadProcessTask()
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask()
  nameWithType: EndLoadProcessTask.EndLoadProcessTask()
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.Nullable{System.Int32})
  name: EndLoadProcessTask(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.Nullable{System.Int32})
  name.vb: EndLoadProcessTask(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.Nullable(Of System.Int32))
  nameWithType: EndLoadProcessTask.EndLoadProcessTask(Nullable<Int32>)
  nameWithType.vb: EndLoadProcessTask.EndLoadProcessTask(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.Nullable{System.Int32},System.String)
  name: EndLoadProcessTask(Nullable<Int32>, String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor_System_Nullable_System_Int32__System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.Nullable{System.Int32},System.String)
  name.vb: EndLoadProcessTask(Nullable(Of Int32), String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.Nullable<System.Int32>, System.String)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.Nullable(Of System.Int32), System.String)
  nameWithType: EndLoadProcessTask.EndLoadProcessTask(Nullable<Int32>, String)
  nameWithType.vb: EndLoadProcessTask.EndLoadProcessTask(Nullable(Of Int32), String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.String)
  name: EndLoadProcessTask(String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask(System.String)
  nameWithType: EndLoadProcessTask.EndLoadProcessTask(String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.#ctor*
  name: EndLoadProcessTask
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndLoadProcessTask
  nameWithType: EndLoadProcessTask.EndLoadProcessTask
- uid: ALE.ETLBox.Logging.EndLoadProcessTask._loadProcessKey
  name: _loadProcessKey
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask__loadProcessKey
  commentId: F:ALE.ETLBox.Logging.EndLoadProcessTask._loadProcessKey
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask._loadProcessKey
  nameWithType: EndLoadProcessTask._loadProcessKey
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End
  name: End()
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End()
  nameWithType: EndLoadProcessTask.End()
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable{System.Int32})
  name: End(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable{System.Int32})
  name.vb: End(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable(Of System.Int32))
  nameWithType: EndLoadProcessTask.End(Nullable<Int32>)
  nameWithType.vb: EndLoadProcessTask.End(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable{System.Int32},System.String)
  name: End(Nullable<Int32>, String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_System_Nullable_System_Int32__System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable{System.Int32},System.String)
  name.vb: End(Nullable(Of Int32), String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable<System.Int32>, System.String)
  fullName.vb: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.Nullable(Of System.Int32), System.String)
  nameWithType: EndLoadProcessTask.End(Nullable<Int32>, String)
  nameWithType.vb: EndLoadProcessTask.End(Nullable(Of Int32), String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.String)
  name: End(String)
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_System_String_
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.End(System.String)
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End(System.String)
  nameWithType: EndLoadProcessTask.End(String)
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.End*
  name: End
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_End_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.End
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.End
  nameWithType: EndLoadProcessTask.End
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  name: EndMessage
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_EndMessage
  commentId: P:ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  nameWithType: EndLoadProcessTask.EndMessage
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage*
  name: EndMessage
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_EndMessage_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.EndMessage
  nameWithType: EndLoadProcessTask.EndMessage
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_Execute
  commentId: M:ALE.ETLBox.Logging.EndLoadProcessTask.Execute
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.Execute()
  nameWithType: EndLoadProcessTask.Execute()
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.Execute
  nameWithType: EndLoadProcessTask.Execute
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessKey
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessKey
  nameWithType: EndLoadProcessTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.LoadProcessKey
  nameWithType: EndLoadProcessTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_Sql
  commentId: P:ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  nameWithType: EndLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.Sql
  nameWithType: EndLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_TaskName
  commentId: P:ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  nameWithType: EndLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.TaskName
  nameWithType: EndLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_TaskType
  commentId: P:ALE.ETLBox.Logging.EndLoadProcessTask.TaskType
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.TaskType
  nameWithType: EndLoadProcessTask.TaskType
- uid: ALE.ETLBox.Logging.EndLoadProcessTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.EndLoadProcessTask.html#ALE_ETLBox_Logging_EndLoadProcessTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.EndLoadProcessTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.EndLoadProcessTask.TaskType
  nameWithType: EndLoadProcessTask.TaskType
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer
  name: ETLLogLayoutRenderer
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html
  commentId: T:ALE.ETLBox.Logging.ETLLogLayoutRenderer
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer
  nameWithType: ETLLogLayoutRenderer
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  name: Append(StringBuilder, LogEventInfo)
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html#ALE_ETLBox_Logging_ETLLogLayoutRenderer_Append_System_Text_StringBuilder_NLog_LogEventInfo_
  commentId: M:ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append(System.Text.StringBuilder,NLog.LogEventInfo)
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append(System.Text.StringBuilder, NLog.LogEventInfo)
  nameWithType: ETLLogLayoutRenderer.Append(StringBuilder, LogEventInfo)
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append*
  name: Append
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html#ALE_ETLBox_Logging_ETLLogLayoutRenderer_Append_
  commentId: Overload:ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer.Append
  nameWithType: ETLLogLayoutRenderer.Append
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  name: LogType
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html#ALE_ETLBox_Logging_ETLLogLayoutRenderer_LogType
  commentId: P:ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  nameWithType: ETLLogLayoutRenderer.LogType
- uid: ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType*
  name: LogType
  href: api/ALE.ETLBox.Logging.ETLLogLayoutRenderer.html#ALE_ETLBox_Logging_ETLLogLayoutRenderer_LogType_
  commentId: Overload:ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ETLLogLayoutRenderer.LogType
  nameWithType: ETLLogLayoutRenderer.LogType
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask
  name: GetLoadProcessAsJSONTask
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html
  commentId: T:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask
  nameWithType: GetLoadProcessAsJSONTask
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.#ctor
  name: GetLoadProcessAsJSONTask()
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask__ctor
  commentId: M:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.#ctor
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetLoadProcessAsJSONTask()
  nameWithType: GetLoadProcessAsJSONTask.GetLoadProcessAsJSONTask()
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.#ctor*
  name: GetLoadProcessAsJSONTask
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetLoadProcessAsJSONTask
  nameWithType: GetLoadProcessAsJSONTask.GetLoadProcessAsJSONTask
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create
  name: Create()
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_Create
  commentId: M:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create()
  nameWithType: GetLoadProcessAsJSONTask.Create()
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create*
  name: Create
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_Create_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Create
  nameWithType: GetLoadProcessAsJSONTask.Create
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_Execute
  commentId: M:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute()
  nameWithType: GetLoadProcessAsJSONTask.Execute()
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.Execute
  nameWithType: GetLoadProcessAsJSONTask.Execute
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON
  name: GetJSON()
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_GetJSON
  commentId: M:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON()
  nameWithType: GetLoadProcessAsJSONTask.GetJSON()
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON*
  name: GetJSON
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_GetJSON_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.GetJSON
  nameWithType: GetLoadProcessAsJSONTask.GetJSON
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  name: JSON
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_JSON
  commentId: P:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  nameWithType: GetLoadProcessAsJSONTask.JSON
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON*
  name: JSON
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_JSON_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.JSON
  nameWithType: GetLoadProcessAsJSONTask.JSON
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_TaskName
  commentId: P:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  nameWithType: GetLoadProcessAsJSONTask.TaskName
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskName
  nameWithType: GetLoadProcessAsJSONTask.TaskName
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_TaskType
  commentId: P:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskType
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskType
  nameWithType: GetLoadProcessAsJSONTask.TaskType
- uid: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.html#ALE_ETLBox_Logging_GetLoadProcessAsJSONTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLoadProcessAsJSONTask.TaskType
  nameWithType: GetLoadProcessAsJSONTask.TaskType
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask
  name: GetLogAsJSONTask
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html
  commentId: T:ALE.ETLBox.Logging.GetLogAsJSONTask
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask
  nameWithType: GetLogAsJSONTask
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor
  name: GetLogAsJSONTask()
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask__ctor
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetLogAsJSONTask()
  nameWithType: GetLogAsJSONTask.GetLogAsJSONTask()
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor(System.Nullable{System.Int32})
  name: GetLogAsJSONTask(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask__ctor_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor(System.Nullable{System.Int32})
  name.vb: GetLogAsJSONTask(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetLogAsJSONTask(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.GetLogAsJSONTask.GetLogAsJSONTask(System.Nullable(Of System.Int32))
  nameWithType: GetLogAsJSONTask.GetLogAsJSONTask(Nullable<Int32>)
  nameWithType.vb: GetLogAsJSONTask.GetLogAsJSONTask(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor*
  name: GetLogAsJSONTask
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetLogAsJSONTask
  nameWithType: GetLogAsJSONTask.GetLogAsJSONTask
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask._loadProcessKey
  name: _loadProcessKey
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask__loadProcessKey
  commentId: F:ALE.ETLBox.Logging.GetLogAsJSONTask._loadProcessKey
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask._loadProcessKey
  nameWithType: GetLogAsJSONTask._loadProcessKey
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  name: ContainerTypes
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_ContainerTypes
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  nameWithType: GetLogAsJSONTask.ContainerTypes
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes*
  name: ContainerTypes
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_ContainerTypes_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.ContainerTypes
  nameWithType: GetLogAsJSONTask.ContainerTypes
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.Create
  name: Create()
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_Create
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.Create
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.Create()
  nameWithType: GetLogAsJSONTask.Create()
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.Create*
  name: Create
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_Create_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.Create
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.Create
  nameWithType: GetLogAsJSONTask.Create
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_Execute
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.Execute
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.Execute()
  nameWithType: GetLogAsJSONTask.Execute()
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.Execute
  nameWithType: GetLogAsJSONTask.Execute
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON
  name: GetJSON()
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_GetJSON
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON()
  nameWithType: GetLogAsJSONTask.GetJSON()
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(System.Nullable{System.Int32})
  name: GetJSON(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_GetJSON_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(System.Nullable{System.Int32})
  name.vb: GetJSON(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON(System.Nullable(Of System.Int32))
  nameWithType: GetLogAsJSONTask.GetJSON(Nullable<Int32>)
  nameWithType.vb: GetLogAsJSONTask.GetJSON(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON*
  name: GetJSON
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_GetJSON_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.GetJSON
  nameWithType: GetLogAsJSONTask.GetJSON
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  name: JSON
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_JSON
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  nameWithType: GetLogAsJSONTask.JSON
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.JSON*
  name: JSON
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_JSON_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.JSON
  nameWithType: GetLogAsJSONTask.JSON
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  nameWithType: GetLogAsJSONTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.LoadProcessKey
  nameWithType: GetLogAsJSONTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  name: LogEntryHierarchy
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_LogEntryHierarchy
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  nameWithType: GetLogAsJSONTask.LogEntryHierarchy
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy*
  name: LogEntryHierarchy
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_LogEntryHierarchy_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.LogEntryHierarchy
  nameWithType: GetLogAsJSONTask.LogEntryHierarchy
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_TaskName
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  nameWithType: GetLogAsJSONTask.TaskName
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskName
  nameWithType: GetLogAsJSONTask.TaskName
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_TaskType
  commentId: P:ALE.ETLBox.Logging.GetLogAsJSONTask.TaskType
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskType
  nameWithType: GetLogAsJSONTask.TaskType
- uid: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.GetLogAsJSONTask.html#ALE_ETLBox_Logging_GetLogAsJSONTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.GetLogAsJSONTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.GetLogAsJSONTask.TaskType
  nameWithType: GetLogAsJSONTask.TaskType
- uid: ALE.ETLBox.Logging.LoadProcess
  name: LoadProcess
  href: api/ALE.ETLBox.Logging.LoadProcess.html
  commentId: T:ALE.ETLBox.Logging.LoadProcess
  fullName: ALE.ETLBox.Logging.LoadProcess
  nameWithType: LoadProcess
- uid: ALE.ETLBox.Logging.LoadProcess.AbortMessage
  name: AbortMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_AbortMessage
  commentId: P:ALE.ETLBox.Logging.LoadProcess.AbortMessage
  fullName: ALE.ETLBox.Logging.LoadProcess.AbortMessage
  nameWithType: LoadProcess.AbortMessage
- uid: ALE.ETLBox.Logging.LoadProcess.AbortMessage*
  name: AbortMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_AbortMessage_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.AbortMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.AbortMessage
  nameWithType: LoadProcess.AbortMessage
- uid: ALE.ETLBox.Logging.LoadProcess.EndDate
  name: EndDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_EndDate
  commentId: P:ALE.ETLBox.Logging.LoadProcess.EndDate
  fullName: ALE.ETLBox.Logging.LoadProcess.EndDate
  nameWithType: LoadProcess.EndDate
- uid: ALE.ETLBox.Logging.LoadProcess.EndDate*
  name: EndDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_EndDate_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.EndDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.EndDate
  nameWithType: LoadProcess.EndDate
- uid: ALE.ETLBox.Logging.LoadProcess.EndMessage
  name: EndMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_EndMessage
  commentId: P:ALE.ETLBox.Logging.LoadProcess.EndMessage
  fullName: ALE.ETLBox.Logging.LoadProcess.EndMessage
  nameWithType: LoadProcess.EndMessage
- uid: ALE.ETLBox.Logging.LoadProcess.EndMessage*
  name: EndMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_EndMessage_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.EndMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.EndMessage
  nameWithType: LoadProcess.EndMessage
- uid: ALE.ETLBox.Logging.LoadProcess.IsFinished
  name: IsFinished
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsFinished
  commentId: P:ALE.ETLBox.Logging.LoadProcess.IsFinished
  fullName: ALE.ETLBox.Logging.LoadProcess.IsFinished
  nameWithType: LoadProcess.IsFinished
- uid: ALE.ETLBox.Logging.LoadProcess.IsFinished*
  name: IsFinished
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsFinished_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.IsFinished
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.IsFinished
  nameWithType: LoadProcess.IsFinished
- uid: ALE.ETLBox.Logging.LoadProcess.IsRunning
  name: IsRunning
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsRunning
  commentId: P:ALE.ETLBox.Logging.LoadProcess.IsRunning
  fullName: ALE.ETLBox.Logging.LoadProcess.IsRunning
  nameWithType: LoadProcess.IsRunning
- uid: ALE.ETLBox.Logging.LoadProcess.IsRunning*
  name: IsRunning
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsRunning_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.IsRunning
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.IsRunning
  nameWithType: LoadProcess.IsRunning
- uid: ALE.ETLBox.Logging.LoadProcess.IsTransferCompleted
  name: IsTransferCompleted
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsTransferCompleted
  commentId: P:ALE.ETLBox.Logging.LoadProcess.IsTransferCompleted
  fullName: ALE.ETLBox.Logging.LoadProcess.IsTransferCompleted
  nameWithType: LoadProcess.IsTransferCompleted
- uid: ALE.ETLBox.Logging.LoadProcess.IsTransferCompleted*
  name: IsTransferCompleted
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_IsTransferCompleted_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.IsTransferCompleted
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.IsTransferCompleted
  nameWithType: LoadProcess.IsTransferCompleted
- uid: ALE.ETLBox.Logging.LoadProcess.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.LoadProcess.LoadProcessKey
  fullName: ALE.ETLBox.Logging.LoadProcess.LoadProcessKey
  nameWithType: LoadProcess.LoadProcessKey
- uid: ALE.ETLBox.Logging.LoadProcess.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.LoadProcessKey
  nameWithType: LoadProcess.LoadProcessKey
- uid: ALE.ETLBox.Logging.LoadProcess.ProcessName
  name: ProcessName
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_ProcessName
  commentId: P:ALE.ETLBox.Logging.LoadProcess.ProcessName
  fullName: ALE.ETLBox.Logging.LoadProcess.ProcessName
  nameWithType: LoadProcess.ProcessName
- uid: ALE.ETLBox.Logging.LoadProcess.ProcessName*
  name: ProcessName
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_ProcessName_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.ProcessName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.ProcessName
  nameWithType: LoadProcess.ProcessName
- uid: ALE.ETLBox.Logging.LoadProcess.StartDate
  name: StartDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_StartDate
  commentId: P:ALE.ETLBox.Logging.LoadProcess.StartDate
  fullName: ALE.ETLBox.Logging.LoadProcess.StartDate
  nameWithType: LoadProcess.StartDate
- uid: ALE.ETLBox.Logging.LoadProcess.StartDate*
  name: StartDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_StartDate_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.StartDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.StartDate
  nameWithType: LoadProcess.StartDate
- uid: ALE.ETLBox.Logging.LoadProcess.StartMessage
  name: StartMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_StartMessage
  commentId: P:ALE.ETLBox.Logging.LoadProcess.StartMessage
  fullName: ALE.ETLBox.Logging.LoadProcess.StartMessage
  nameWithType: LoadProcess.StartMessage
- uid: ALE.ETLBox.Logging.LoadProcess.StartMessage*
  name: StartMessage
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_StartMessage_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.StartMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.StartMessage
  nameWithType: LoadProcess.StartMessage
- uid: ALE.ETLBox.Logging.LoadProcess.TransferCompletedDate
  name: TransferCompletedDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_TransferCompletedDate
  commentId: P:ALE.ETLBox.Logging.LoadProcess.TransferCompletedDate
  fullName: ALE.ETLBox.Logging.LoadProcess.TransferCompletedDate
  nameWithType: LoadProcess.TransferCompletedDate
- uid: ALE.ETLBox.Logging.LoadProcess.TransferCompletedDate*
  name: TransferCompletedDate
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_TransferCompletedDate_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.TransferCompletedDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.TransferCompletedDate
  nameWithType: LoadProcess.TransferCompletedDate
- uid: ALE.ETLBox.Logging.LoadProcess.WasAborted
  name: WasAborted
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_WasAborted
  commentId: P:ALE.ETLBox.Logging.LoadProcess.WasAborted
  fullName: ALE.ETLBox.Logging.LoadProcess.WasAborted
  nameWithType: LoadProcess.WasAborted
- uid: ALE.ETLBox.Logging.LoadProcess.WasAborted*
  name: WasAborted
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_WasAborted_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.WasAborted
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.WasAborted
  nameWithType: LoadProcess.WasAborted
- uid: ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  name: WasSuccessful
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_WasSuccessful
  commentId: P:ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  fullName: ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  nameWithType: LoadProcess.WasSuccessful
- uid: ALE.ETLBox.Logging.LoadProcess.WasSuccessful*
  name: WasSuccessful
  href: api/ALE.ETLBox.Logging.LoadProcess.html#ALE_ETLBox_Logging_LoadProcess_WasSuccessful_
  commentId: Overload:ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LoadProcess.WasSuccessful
  nameWithType: LoadProcess.WasSuccessful
- uid: ALE.ETLBox.Logging.LogEntry
  name: LogEntry
  href: api/ALE.ETLBox.Logging.LogEntry.html
  commentId: T:ALE.ETLBox.Logging.LogEntry
  fullName: ALE.ETLBox.Logging.LogEntry
  nameWithType: LogEntry
- uid: ALE.ETLBox.Logging.LogEntry.EndDate
  name: EndDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_EndDate
  commentId: P:ALE.ETLBox.Logging.LogEntry.EndDate
  fullName: ALE.ETLBox.Logging.LogEntry.EndDate
  nameWithType: LogEntry.EndDate
- uid: ALE.ETLBox.Logging.LogEntry.EndDate*
  name: EndDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_EndDate_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.EndDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.EndDate
  nameWithType: LogEntry.EndDate
- uid: ALE.ETLBox.Logging.LogEntry.Level
  name: Level
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Level
  commentId: P:ALE.ETLBox.Logging.LogEntry.Level
  fullName: ALE.ETLBox.Logging.LogEntry.Level
  nameWithType: LogEntry.Level
- uid: ALE.ETLBox.Logging.LogEntry.Level*
  name: Level
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Level_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.Level
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.Level
  nameWithType: LogEntry.Level
- uid: ALE.ETLBox.Logging.LogEntry.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.LogEntry.LoadProcessKey
  fullName: ALE.ETLBox.Logging.LogEntry.LoadProcessKey
  nameWithType: LogEntry.LoadProcessKey
- uid: ALE.ETLBox.Logging.LogEntry.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.LoadProcessKey
  nameWithType: LogEntry.LoadProcessKey
- uid: ALE.ETLBox.Logging.LogEntry.LogDate
  name: LogDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LogDate
  commentId: P:ALE.ETLBox.Logging.LogEntry.LogDate
  fullName: ALE.ETLBox.Logging.LogEntry.LogDate
  nameWithType: LogEntry.LogDate
- uid: ALE.ETLBox.Logging.LogEntry.LogDate*
  name: LogDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LogDate_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.LogDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.LogDate
  nameWithType: LogEntry.LogDate
- uid: ALE.ETLBox.Logging.LogEntry.LogKey
  name: LogKey
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LogKey
  commentId: P:ALE.ETLBox.Logging.LogEntry.LogKey
  fullName: ALE.ETLBox.Logging.LogEntry.LogKey
  nameWithType: LogEntry.LogKey
- uid: ALE.ETLBox.Logging.LogEntry.LogKey*
  name: LogKey
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_LogKey_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.LogKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.LogKey
  nameWithType: LogEntry.LogKey
- uid: ALE.ETLBox.Logging.LogEntry.Message
  name: Message
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Message
  commentId: P:ALE.ETLBox.Logging.LogEntry.Message
  fullName: ALE.ETLBox.Logging.LogEntry.Message
  nameWithType: LogEntry.Message
- uid: ALE.ETLBox.Logging.LogEntry.Message*
  name: Message
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Message_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.Message
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.Message
  nameWithType: LogEntry.Message
- uid: ALE.ETLBox.Logging.LogEntry.Source
  name: Source
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Source
  commentId: P:ALE.ETLBox.Logging.LogEntry.Source
  fullName: ALE.ETLBox.Logging.LogEntry.Source
  nameWithType: LogEntry.Source
- uid: ALE.ETLBox.Logging.LogEntry.Source*
  name: Source
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Source_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.Source
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.Source
  nameWithType: LogEntry.Source
- uid: ALE.ETLBox.Logging.LogEntry.Stage
  name: Stage
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Stage
  commentId: P:ALE.ETLBox.Logging.LogEntry.Stage
  fullName: ALE.ETLBox.Logging.LogEntry.Stage
  nameWithType: LogEntry.Stage
- uid: ALE.ETLBox.Logging.LogEntry.Stage*
  name: Stage
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_Stage_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.Stage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.Stage
  nameWithType: LogEntry.Stage
- uid: ALE.ETLBox.Logging.LogEntry.StartDate
  name: StartDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_StartDate
  commentId: P:ALE.ETLBox.Logging.LogEntry.StartDate
  fullName: ALE.ETLBox.Logging.LogEntry.StartDate
  nameWithType: LogEntry.StartDate
- uid: ALE.ETLBox.Logging.LogEntry.StartDate*
  name: StartDate
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_StartDate_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.StartDate
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.StartDate
  nameWithType: LogEntry.StartDate
- uid: ALE.ETLBox.Logging.LogEntry.TaskAction
  name: TaskAction
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskAction
  commentId: P:ALE.ETLBox.Logging.LogEntry.TaskAction
  fullName: ALE.ETLBox.Logging.LogEntry.TaskAction
  nameWithType: LogEntry.TaskAction
- uid: ALE.ETLBox.Logging.LogEntry.TaskAction*
  name: TaskAction
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskAction_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.TaskAction
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.TaskAction
  nameWithType: LogEntry.TaskAction
- uid: ALE.ETLBox.Logging.LogEntry.TaskHash
  name: TaskHash
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskHash
  commentId: P:ALE.ETLBox.Logging.LogEntry.TaskHash
  fullName: ALE.ETLBox.Logging.LogEntry.TaskHash
  nameWithType: LogEntry.TaskHash
- uid: ALE.ETLBox.Logging.LogEntry.TaskHash*
  name: TaskHash
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskHash_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.TaskHash
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.TaskHash
  nameWithType: LogEntry.TaskHash
- uid: ALE.ETLBox.Logging.LogEntry.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskType
  commentId: P:ALE.ETLBox.Logging.LogEntry.TaskType
  fullName: ALE.ETLBox.Logging.LogEntry.TaskType
  nameWithType: LogEntry.TaskType
- uid: ALE.ETLBox.Logging.LogEntry.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.LogEntry.html#ALE_ETLBox_Logging_LogEntry_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.LogEntry.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogEntry.TaskType
  nameWithType: LogEntry.TaskType
- uid: ALE.ETLBox.Logging.LogHierarchyEntry
  name: LogHierarchyEntry
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html
  commentId: T:ALE.ETLBox.Logging.LogHierarchyEntry
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry
  nameWithType: LogHierarchyEntry
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.#ctor
  name: LogHierarchyEntry()
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry__ctor
  commentId: M:ALE.ETLBox.Logging.LogHierarchyEntry.#ctor
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.LogHierarchyEntry()
  nameWithType: LogHierarchyEntry.LogHierarchyEntry()
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.#ctor(ALE.ETLBox.Logging.LogEntry)
  name: LogHierarchyEntry(LogEntry)
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry__ctor_ALE_ETLBox_Logging_LogEntry_
  commentId: M:ALE.ETLBox.Logging.LogHierarchyEntry.#ctor(ALE.ETLBox.Logging.LogEntry)
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.LogHierarchyEntry(ALE.ETLBox.Logging.LogEntry)
  nameWithType: LogHierarchyEntry.LogHierarchyEntry(LogEntry)
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.#ctor*
  name: LogHierarchyEntry
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry__ctor_
  commentId: Overload:ALE.ETLBox.Logging.LogHierarchyEntry.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.LogHierarchyEntry
  nameWithType: LogHierarchyEntry.LogHierarchyEntry
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.Children
  name: Children
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry_Children
  commentId: P:ALE.ETLBox.Logging.LogHierarchyEntry.Children
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.Children
  nameWithType: LogHierarchyEntry.Children
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.Children*
  name: Children
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry_Children_
  commentId: Overload:ALE.ETLBox.Logging.LogHierarchyEntry.Children
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.Children
  nameWithType: LogHierarchyEntry.Children
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  name: Parent
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry_Parent
  commentId: P:ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  nameWithType: LogHierarchyEntry.Parent
- uid: ALE.ETLBox.Logging.LogHierarchyEntry.Parent*
  name: Parent
  href: api/ALE.ETLBox.Logging.LogHierarchyEntry.html#ALE_ETLBox_Logging_LogHierarchyEntry_Parent_
  commentId: Overload:ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogHierarchyEntry.Parent
  nameWithType: LogHierarchyEntry.Parent
- uid: ALE.ETLBox.Logging.LogTask
  name: LogTask
  href: api/ALE.ETLBox.Logging.LogTask.html
  commentId: T:ALE.ETLBox.Logging.LogTask
  fullName: ALE.ETLBox.Logging.LogTask
  nameWithType: LogTask
- uid: ALE.ETLBox.Logging.LogTask.#ctor
  name: LogTask()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask__ctor
  commentId: M:ALE.ETLBox.Logging.LogTask.#ctor
  fullName: ALE.ETLBox.Logging.LogTask.LogTask()
  nameWithType: LogTask.LogTask()
- uid: ALE.ETLBox.Logging.LogTask.#ctor(System.String)
  name: LogTask(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.LogTask(System.String)
  nameWithType: LogTask.LogTask(String)
- uid: ALE.ETLBox.Logging.LogTask.#ctor*
  name: LogTask
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.LogTask
  nameWithType: LogTask.LogTask
- uid: ALE.ETLBox.Logging.LogTask.Debug
  name: Debug()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Debug
  commentId: M:ALE.ETLBox.Logging.LogTask.Debug
  fullName: ALE.ETLBox.Logging.LogTask.Debug()
  nameWithType: LogTask.Debug()
- uid: ALE.ETLBox.Logging.LogTask.Debug(System.String)
  name: Debug(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Debug_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Debug(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Debug(System.String)
  nameWithType: LogTask.Debug(String)
- uid: ALE.ETLBox.Logging.LogTask.Debug*
  name: Debug
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Debug_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Debug
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Debug
  nameWithType: LogTask.Debug
- uid: ALE.ETLBox.Logging.LogTask.Error
  name: Error()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Error
  commentId: M:ALE.ETLBox.Logging.LogTask.Error
  fullName: ALE.ETLBox.Logging.LogTask.Error()
  nameWithType: LogTask.Error()
- uid: ALE.ETLBox.Logging.LogTask.Error(System.String)
  name: Error(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Error_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Error(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Error(System.String)
  nameWithType: LogTask.Error(String)
- uid: ALE.ETLBox.Logging.LogTask.Error*
  name: Error
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Error_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Error
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Error
  nameWithType: LogTask.Error
- uid: ALE.ETLBox.Logging.LogTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Execute
  commentId: M:ALE.ETLBox.Logging.LogTask.Execute
  fullName: ALE.ETLBox.Logging.LogTask.Execute()
  nameWithType: LogTask.Execute()
- uid: ALE.ETLBox.Logging.LogTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Execute
  nameWithType: LogTask.Execute
- uid: ALE.ETLBox.Logging.LogTask.Fatal
  name: Fatal()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Fatal
  commentId: M:ALE.ETLBox.Logging.LogTask.Fatal
  fullName: ALE.ETLBox.Logging.LogTask.Fatal()
  nameWithType: LogTask.Fatal()
- uid: ALE.ETLBox.Logging.LogTask.Fatal(System.String)
  name: Fatal(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Fatal_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Fatal(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Fatal(System.String)
  nameWithType: LogTask.Fatal(String)
- uid: ALE.ETLBox.Logging.LogTask.Fatal*
  name: Fatal
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Fatal_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Fatal
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Fatal
  nameWithType: LogTask.Fatal
- uid: ALE.ETLBox.Logging.LogTask.Info
  name: Info()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Info
  commentId: M:ALE.ETLBox.Logging.LogTask.Info
  fullName: ALE.ETLBox.Logging.LogTask.Info()
  nameWithType: LogTask.Info()
- uid: ALE.ETLBox.Logging.LogTask.Info(System.String)
  name: Info(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Info_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Info(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Info(System.String)
  nameWithType: LogTask.Info(String)
- uid: ALE.ETLBox.Logging.LogTask.Info*
  name: Info
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Info_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Info
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Info
  nameWithType: LogTask.Info
- uid: ALE.ETLBox.Logging.LogTask.Message
  name: Message
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Message
  commentId: P:ALE.ETLBox.Logging.LogTask.Message
  fullName: ALE.ETLBox.Logging.LogTask.Message
  nameWithType: LogTask.Message
- uid: ALE.ETLBox.Logging.LogTask.Message*
  name: Message
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Message_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Message
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Message
  nameWithType: LogTask.Message
- uid: ALE.ETLBox.Logging.LogTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_TaskName
  commentId: P:ALE.ETLBox.Logging.LogTask.TaskName
  fullName: ALE.ETLBox.Logging.LogTask.TaskName
  nameWithType: LogTask.TaskName
- uid: ALE.ETLBox.Logging.LogTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.TaskName
  nameWithType: LogTask.TaskName
- uid: ALE.ETLBox.Logging.LogTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_TaskType
  commentId: P:ALE.ETLBox.Logging.LogTask.TaskType
  fullName: ALE.ETLBox.Logging.LogTask.TaskType
  nameWithType: LogTask.TaskType
- uid: ALE.ETLBox.Logging.LogTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.TaskType
  nameWithType: LogTask.TaskType
- uid: ALE.ETLBox.Logging.LogTask.Trace
  name: Trace()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Trace
  commentId: M:ALE.ETLBox.Logging.LogTask.Trace
  fullName: ALE.ETLBox.Logging.LogTask.Trace()
  nameWithType: LogTask.Trace()
- uid: ALE.ETLBox.Logging.LogTask.Trace(System.String)
  name: Trace(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Trace_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Trace(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Trace(System.String)
  nameWithType: LogTask.Trace(String)
- uid: ALE.ETLBox.Logging.LogTask.Trace*
  name: Trace
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Trace_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Trace
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Trace
  nameWithType: LogTask.Trace
- uid: ALE.ETLBox.Logging.LogTask.Warn
  name: Warn()
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Warn
  commentId: M:ALE.ETLBox.Logging.LogTask.Warn
  fullName: ALE.ETLBox.Logging.LogTask.Warn()
  nameWithType: LogTask.Warn()
- uid: ALE.ETLBox.Logging.LogTask.Warn(System.String)
  name: Warn(String)
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Warn_System_String_
  commentId: M:ALE.ETLBox.Logging.LogTask.Warn(System.String)
  fullName: ALE.ETLBox.Logging.LogTask.Warn(System.String)
  nameWithType: LogTask.Warn(String)
- uid: ALE.ETLBox.Logging.LogTask.Warn*
  name: Warn
  href: api/ALE.ETLBox.Logging.LogTask.html#ALE_ETLBox_Logging_LogTask_Warn_
  commentId: Overload:ALE.ETLBox.Logging.LogTask.Warn
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.LogTask.Warn
  nameWithType: LogTask.Warn
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask
  name: ReadLoadProcessTableTask
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html
  commentId: T:ALE.ETLBox.Logging.ReadLoadProcessTableTask
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask
  nameWithType: ReadLoadProcessTableTask
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor
  name: ReadLoadProcessTableTask()
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask__ctor
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask()
  nameWithType: ReadLoadProcessTableTask.ReadLoadProcessTableTask()
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor(System.Nullable{System.Int32})
  name: ReadLoadProcessTableTask(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask__ctor_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor(System.Nullable{System.Int32})
  name.vb: ReadLoadProcessTableTask(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask(System.Nullable(Of System.Int32))
  nameWithType: ReadLoadProcessTableTask.ReadLoadProcessTableTask(Nullable<Int32>)
  nameWithType.vb: ReadLoadProcessTableTask.ReadLoadProcessTableTask(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor*
  name: ReadLoadProcessTableTask
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadLoadProcessTableTask
  nameWithType: ReadLoadProcessTableTask.ReadLoadProcessTableTask
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask._loadProcessKey
  name: _loadProcessKey
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask__loadProcessKey
  commentId: F:ALE.ETLBox.Logging.ReadLoadProcessTableTask._loadProcessKey
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask._loadProcessKey
  nameWithType: ReadLoadProcessTableTask._loadProcessKey
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  name: AllLoadProcesses
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_AllLoadProcesses
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  nameWithType: ReadLoadProcessTableTask.AllLoadProcesses
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses*
  name: AllLoadProcesses
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_AllLoadProcesses_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.AllLoadProcesses
  nameWithType: ReadLoadProcessTableTask.AllLoadProcesses
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Execute
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute()
  nameWithType: ReadLoadProcessTableTask.Execute()
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Execute
  nameWithType: ReadLoadProcessTableTask.Execute
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  name: LastFinished
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LastFinished
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  nameWithType: ReadLoadProcessTableTask.LastFinished
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished*
  name: LastFinished
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LastFinished_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastFinished
  nameWithType: ReadLoadProcessTableTask.LastFinished
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  name: LastTransfered
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LastTransfered
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  nameWithType: ReadLoadProcessTableTask.LastTransfered
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered*
  name: LastTransfered
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LastTransfered_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LastTransfered
  nameWithType: ReadLoadProcessTableTask.LastTransfered
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  name: LoadProcess
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LoadProcess
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  nameWithType: ReadLoadProcessTableTask.LoadProcess
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess*
  name: LoadProcess
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LoadProcess_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcess
  nameWithType: ReadLoadProcessTableTask.LoadProcess
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessKey
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessKey
  nameWithType: ReadLoadProcessTableTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.LoadProcessKey
  nameWithType: ReadLoadProcessTableTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read(System.Nullable{System.Int32})
  name: Read(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Read_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read(System.Nullable{System.Int32})
  name.vb: Read(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read(System.Nullable(Of System.Int32))
  nameWithType: ReadLoadProcessTableTask.Read(Nullable<Int32>)
  nameWithType.vb: ReadLoadProcessTableTask.Read(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read*
  name: Read
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Read_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Read
  nameWithType: ReadLoadProcessTableTask.Read
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll
  name: ReadAll()
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadAll
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll()
  nameWithType: ReadLoadProcessTableTask.ReadAll()
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll*
  name: ReadAll
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadAll_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadAll
  nameWithType: ReadLoadProcessTableTask.ReadAll
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  name: ReadOption
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadOption
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  nameWithType: ReadLoadProcessTableTask.ReadOption
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption*
  name: ReadOption
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadOption_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadOption
  nameWithType: ReadLoadProcessTableTask.ReadOption
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption(ALE.ETLBox.Logging.ReadOptions)
  name: ReadWithOption(ReadOptions)
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadWithOption_ALE_ETLBox_Logging_ReadOptions_
  commentId: M:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption(ALE.ETLBox.Logging.ReadOptions)
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption(ALE.ETLBox.Logging.ReadOptions)
  nameWithType: ReadLoadProcessTableTask.ReadWithOption(ReadOptions)
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption*
  name: ReadWithOption
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_ReadWithOption_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.ReadWithOption
  nameWithType: ReadLoadProcessTableTask.ReadWithOption
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Sql
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  nameWithType: ReadLoadProcessTableTask.Sql
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.Sql
  nameWithType: ReadLoadProcessTableTask.Sql
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_TaskName
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  nameWithType: ReadLoadProcessTableTask.TaskName
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskName
  nameWithType: ReadLoadProcessTableTask.TaskName
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_TaskType
  commentId: P:ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskType
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskType
  nameWithType: ReadLoadProcessTableTask.TaskType
- uid: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.ReadLoadProcessTableTask.html#ALE_ETLBox_Logging_ReadLoadProcessTableTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLoadProcessTableTask.TaskType
  nameWithType: ReadLoadProcessTableTask.TaskType
- uid: ALE.ETLBox.Logging.ReadLogTableTask
  name: ReadLogTableTask
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html
  commentId: T:ALE.ETLBox.Logging.ReadLogTableTask
  fullName: ALE.ETLBox.Logging.ReadLogTableTask
  nameWithType: ReadLogTableTask
- uid: ALE.ETLBox.Logging.ReadLogTableTask.#ctor
  name: ReadLogTableTask()
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask__ctor
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.#ctor
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLogTableTask()
  nameWithType: ReadLogTableTask.ReadLogTableTask()
- uid: ALE.ETLBox.Logging.ReadLogTableTask.#ctor(System.Nullable{System.Int32})
  name: ReadLogTableTask(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask__ctor_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.#ctor(System.Nullable{System.Int32})
  name.vb: ReadLogTableTask(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLogTableTask(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.ReadLogTableTask.ReadLogTableTask(System.Nullable(Of System.Int32))
  nameWithType: ReadLogTableTask.ReadLogTableTask(Nullable<Int32>)
  nameWithType.vb: ReadLogTableTask.ReadLogTableTask(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.ReadLogTableTask.#ctor*
  name: ReadLogTableTask
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLogTableTask
  nameWithType: ReadLogTableTask.ReadLogTableTask
- uid: ALE.ETLBox.Logging.ReadLogTableTask._loadProcessKey
  name: _loadProcessKey
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask__loadProcessKey
  commentId: F:ALE.ETLBox.Logging.ReadLogTableTask._loadProcessKey
  fullName: ALE.ETLBox.Logging.ReadLogTableTask._loadProcessKey
  nameWithType: ReadLogTableTask._loadProcessKey
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Execute
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.Execute
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Execute()
  nameWithType: ReadLogTableTask.Execute()
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Execute
  nameWithType: ReadLogTableTask.Execute
- uid: ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessKey
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessKey
  nameWithType: ReadLogTableTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.LoadProcessKey
  nameWithType: ReadLogTableTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  name: LogEntries
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_LogEntries
  commentId: P:ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  nameWithType: ReadLogTableTask.LogEntries
- uid: ALE.ETLBox.Logging.ReadLogTableTask.LogEntries*
  name: LogEntries
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_LogEntries_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.LogEntries
  nameWithType: ReadLogTableTask.LogEntries
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Read
  name: Read()
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Read
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.Read
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Read()
  nameWithType: ReadLogTableTask.Read()
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Read(System.Nullable{System.Int32})
  name: Read(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Read_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.Read(System.Nullable{System.Int32})
  name.vb: Read(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Read(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.ReadLogTableTask.Read(System.Nullable(Of System.Int32))
  nameWithType: ReadLogTableTask.Read(Nullable<Int32>)
  nameWithType.vb: ReadLogTableTask.Read(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Read*
  name: Read
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Read_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.Read
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Read
  nameWithType: ReadLogTableTask.Read
- uid: ALE.ETLBox.Logging.ReadLogTableTask.ReadLog
  name: ReadLog()
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_ReadLog
  commentId: M:ALE.ETLBox.Logging.ReadLogTableTask.ReadLog
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLog()
  nameWithType: ReadLogTableTask.ReadLog()
- uid: ALE.ETLBox.Logging.ReadLogTableTask.ReadLog*
  name: ReadLog
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_ReadLog_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.ReadLog
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.ReadLog
  nameWithType: ReadLogTableTask.ReadLog
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Sql
  commentId: P:ALE.ETLBox.Logging.ReadLogTableTask.Sql
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Sql
  nameWithType: ReadLogTableTask.Sql
- uid: ALE.ETLBox.Logging.ReadLogTableTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.Sql
  nameWithType: ReadLogTableTask.Sql
- uid: ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_TaskName
  commentId: P:ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  nameWithType: ReadLogTableTask.TaskName
- uid: ALE.ETLBox.Logging.ReadLogTableTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.TaskName
  nameWithType: ReadLogTableTask.TaskName
- uid: ALE.ETLBox.Logging.ReadLogTableTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_TaskType
  commentId: P:ALE.ETLBox.Logging.ReadLogTableTask.TaskType
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.TaskType
  nameWithType: ReadLogTableTask.TaskType
- uid: ALE.ETLBox.Logging.ReadLogTableTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.ReadLogTableTask.html#ALE_ETLBox_Logging_ReadLogTableTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.ReadLogTableTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.ReadLogTableTask.TaskType
  nameWithType: ReadLogTableTask.TaskType
- uid: ALE.ETLBox.Logging.ReadOptions
  name: ReadOptions
  href: api/ALE.ETLBox.Logging.ReadOptions.html
  commentId: T:ALE.ETLBox.Logging.ReadOptions
  fullName: ALE.ETLBox.Logging.ReadOptions
  nameWithType: ReadOptions
- uid: ALE.ETLBox.Logging.ReadOptions.ReadAllProcesses
  name: ReadAllProcesses
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadAllProcesses
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadAllProcesses
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadAllProcesses
  nameWithType: ReadOptions.ReadAllProcesses
- uid: ALE.ETLBox.Logging.ReadOptions.ReadLastAborted
  name: ReadLastAborted
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadLastAborted
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadLastAborted
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadLastAborted
  nameWithType: ReadOptions.ReadLastAborted
- uid: ALE.ETLBox.Logging.ReadOptions.ReadLastFinishedProcess
  name: ReadLastFinishedProcess
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadLastFinishedProcess
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadLastFinishedProcess
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadLastFinishedProcess
  nameWithType: ReadOptions.ReadLastFinishedProcess
- uid: ALE.ETLBox.Logging.ReadOptions.ReadLastSuccessful
  name: ReadLastSuccessful
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadLastSuccessful
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadLastSuccessful
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadLastSuccessful
  nameWithType: ReadOptions.ReadLastSuccessful
- uid: ALE.ETLBox.Logging.ReadOptions.ReadLastTransferedProcess
  name: ReadLastTransferedProcess
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadLastTransferedProcess
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadLastTransferedProcess
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadLastTransferedProcess
  nameWithType: ReadOptions.ReadLastTransferedProcess
- uid: ALE.ETLBox.Logging.ReadOptions.ReadSingleProcess
  name: ReadSingleProcess
  href: api/ALE.ETLBox.Logging.ReadOptions.html#ALE_ETLBox_Logging_ReadOptions_ReadSingleProcess
  commentId: F:ALE.ETLBox.Logging.ReadOptions.ReadSingleProcess
  fullName: ALE.ETLBox.Logging.ReadOptions.ReadSingleProcess
  nameWithType: ReadOptions.ReadSingleProcess
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask
  name: RemoveLogTablesTask
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html
  commentId: T:ALE.ETLBox.Logging.RemoveLogTablesTask
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask
  nameWithType: RemoveLogTablesTask
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.#ctor
  name: RemoveLogTablesTask()
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask__ctor
  commentId: M:ALE.ETLBox.Logging.RemoveLogTablesTask.#ctor
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.RemoveLogTablesTask()
  nameWithType: RemoveLogTablesTask.RemoveLogTablesTask()
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.#ctor*
  name: RemoveLogTablesTask
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.RemoveLogTablesTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.RemoveLogTablesTask
  nameWithType: RemoveLogTablesTask.RemoveLogTablesTask
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_Execute
  commentId: M:ALE.ETLBox.Logging.RemoveLogTablesTask.Execute
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.Execute()
  nameWithType: RemoveLogTablesTask.Execute()
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.RemoveLogTablesTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.Execute
  nameWithType: RemoveLogTablesTask.Execute
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.Remove
  name: Remove()
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_Remove
  commentId: M:ALE.ETLBox.Logging.RemoveLogTablesTask.Remove
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.Remove()
  nameWithType: RemoveLogTablesTask.Remove()
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.Remove*
  name: Remove
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_Remove_
  commentId: Overload:ALE.ETLBox.Logging.RemoveLogTablesTask.Remove
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.Remove
  nameWithType: RemoveLogTablesTask.Remove
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_Sql
  commentId: P:ALE.ETLBox.Logging.RemoveLogTablesTask.Sql
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.Sql
  nameWithType: RemoveLogTablesTask.Sql
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.RemoveLogTablesTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.Sql
  nameWithType: RemoveLogTablesTask.Sql
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_TaskName
  commentId: P:ALE.ETLBox.Logging.RemoveLogTablesTask.TaskName
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.TaskName
  nameWithType: RemoveLogTablesTask.TaskName
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.RemoveLogTablesTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.TaskName
  nameWithType: RemoveLogTablesTask.TaskName
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_TaskType
  commentId: P:ALE.ETLBox.Logging.RemoveLogTablesTask.TaskType
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.TaskType
  nameWithType: RemoveLogTablesTask.TaskType
- uid: ALE.ETLBox.Logging.RemoveLogTablesTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.RemoveLogTablesTask.html#ALE_ETLBox_Logging_RemoveLogTablesTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.RemoveLogTablesTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.RemoveLogTablesTask.TaskType
  nameWithType: RemoveLogTablesTask.TaskType
- uid: ALE.ETLBox.Logging.StartLoadProcessTask
  name: StartLoadProcessTask
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html
  commentId: T:ALE.ETLBox.Logging.StartLoadProcessTask
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask
  nameWithType: StartLoadProcessTask
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor
  name: StartLoadProcessTask()
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask()
  nameWithType: StartLoadProcessTask.StartLoadProcessTask()
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String)
  name: StartLoadProcessTask(String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask(System.String)
  nameWithType: StartLoadProcessTask.StartLoadProcessTask(String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String,System.String)
  name: StartLoadProcessTask(String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask(System.String, System.String)
  nameWithType: StartLoadProcessTask.StartLoadProcessTask(String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String,System.String,System.String)
  name: StartLoadProcessTask(String, String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor(System.String,System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask(System.String, System.String, System.String)
  nameWithType: StartLoadProcessTask.StartLoadProcessTask(String, String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.#ctor*
  name: StartLoadProcessTask
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartLoadProcessTask
  nameWithType: StartLoadProcessTask.StartLoadProcessTask
- uid: ALE.ETLBox.Logging.StartLoadProcessTask._loadProcessKey
  name: _loadProcessKey
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask__loadProcessKey
  commentId: F:ALE.ETLBox.Logging.StartLoadProcessTask._loadProcessKey
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask._loadProcessKey
  nameWithType: StartLoadProcessTask._loadProcessKey
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Execute
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Execute
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Execute()
  nameWithType: StartLoadProcessTask.Execute()
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Execute
  nameWithType: StartLoadProcessTask.Execute
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessKey
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessKey
  nameWithType: StartLoadProcessTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.LoadProcessKey
  nameWithType: StartLoadProcessTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  name: ProcessName
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_ProcessName
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  nameWithType: StartLoadProcessTask.ProcessName
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName*
  name: ProcessName
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_ProcessName_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.ProcessName
  nameWithType: StartLoadProcessTask.ProcessName
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Source
  name: Source
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Source
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.Source
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Source
  nameWithType: StartLoadProcessTask.Source
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Source*
  name: Source
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Source_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.Source
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Source
  nameWithType: StartLoadProcessTask.Source
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Sql
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  nameWithType: StartLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Sql
  nameWithType: StartLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String)
  name: Start(String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String)
  nameWithType: StartLoadProcessTask.Start(String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String,System.String)
  name: Start(String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String, System.String)
  nameWithType: StartLoadProcessTask.Start(String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String,System.String,System.String)
  name: Start(String, String, String)
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String,System.String,System.String)
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start(System.String, System.String, System.String)
  nameWithType: StartLoadProcessTask.Start(String, String, String)
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.Start*
  name: Start
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_Start_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.Start
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.Start
  nameWithType: StartLoadProcessTask.Start
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  name: StartMessage
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_StartMessage
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  nameWithType: StartLoadProcessTask.StartMessage
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage*
  name: StartMessage
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_StartMessage_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.StartMessage
  nameWithType: StartLoadProcessTask.StartMessage
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_TaskName
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  nameWithType: StartLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.TaskName
  nameWithType: StartLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_TaskType
  commentId: P:ALE.ETLBox.Logging.StartLoadProcessTask.TaskType
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.TaskType
  nameWithType: StartLoadProcessTask.TaskType
- uid: ALE.ETLBox.Logging.StartLoadProcessTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.StartLoadProcessTask.html#ALE_ETLBox_Logging_StartLoadProcessTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.StartLoadProcessTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.StartLoadProcessTask.TaskType
  nameWithType: StartLoadProcessTask.TaskType
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask
  name: TransferCompletedForLoadProcessTask
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html
  commentId: T:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask
  nameWithType: TransferCompletedForLoadProcessTask
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.#ctor
  name: TransferCompletedForLoadProcessTask()
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask__ctor
  commentId: M:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.#ctor
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TransferCompletedForLoadProcessTask()
  nameWithType: TransferCompletedForLoadProcessTask.TransferCompletedForLoadProcessTask()
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.#ctor(System.Nullable{System.Int32})
  name: TransferCompletedForLoadProcessTask(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask__ctor_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.#ctor(System.Nullable{System.Int32})
  name.vb: TransferCompletedForLoadProcessTask(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TransferCompletedForLoadProcessTask(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TransferCompletedForLoadProcessTask(System.Nullable(Of System.Int32))
  nameWithType: TransferCompletedForLoadProcessTask.TransferCompletedForLoadProcessTask(Nullable<Int32>)
  nameWithType.vb: TransferCompletedForLoadProcessTask.TransferCompletedForLoadProcessTask(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.#ctor*
  name: TransferCompletedForLoadProcessTask
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask__ctor_
  commentId: Overload:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TransferCompletedForLoadProcessTask
  nameWithType: TransferCompletedForLoadProcessTask.TransferCompletedForLoadProcessTask
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask._loadProcessKey
  name: _loadProcessKey
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask__loadProcessKey
  commentId: F:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask._loadProcessKey
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask._loadProcessKey
  nameWithType: TransferCompletedForLoadProcessTask._loadProcessKey
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete
  name: Complete()
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_Complete
  commentId: M:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete()
  nameWithType: TransferCompletedForLoadProcessTask.Complete()
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete(System.Nullable{System.Int32})
  name: Complete(Nullable<Int32>)
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_Complete_System_Nullable_System_Int32__
  commentId: M:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete(System.Nullable{System.Int32})
  name.vb: Complete(Nullable(Of Int32))
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete(System.Nullable<System.Int32>)
  fullName.vb: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete(System.Nullable(Of System.Int32))
  nameWithType: TransferCompletedForLoadProcessTask.Complete(Nullable<Int32>)
  nameWithType.vb: TransferCompletedForLoadProcessTask.Complete(Nullable(Of Int32))
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete*
  name: Complete
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_Complete_
  commentId: Overload:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Complete
  nameWithType: TransferCompletedForLoadProcessTask.Complete
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Execute
  name: Execute()
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_Execute
  commentId: M:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Execute
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Execute()
  nameWithType: TransferCompletedForLoadProcessTask.Execute()
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Execute*
  name: Execute
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_Execute_
  commentId: Overload:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Execute
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Execute
  nameWithType: TransferCompletedForLoadProcessTask.Execute
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.LoadProcessKey
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_LoadProcessKey
  commentId: P:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.LoadProcessKey
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.LoadProcessKey
  nameWithType: TransferCompletedForLoadProcessTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.LoadProcessKey*
  name: LoadProcessKey
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_LoadProcessKey_
  commentId: Overload:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.LoadProcessKey
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.LoadProcessKey
  nameWithType: TransferCompletedForLoadProcessTask.LoadProcessKey
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Sql
  name: Sql
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_Sql
  commentId: P:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Sql
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Sql
  nameWithType: TransferCompletedForLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Sql*
  name: Sql
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_Sql_
  commentId: Overload:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.Sql
  nameWithType: TransferCompletedForLoadProcessTask.Sql
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskName
  name: TaskName
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_TaskName
  commentId: P:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskName
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskName
  nameWithType: TransferCompletedForLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskName*
  name: TaskName
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_TaskName_
  commentId: Overload:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskName
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskName
  nameWithType: TransferCompletedForLoadProcessTask.TaskName
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskType
  name: TaskType
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_TaskType
  commentId: P:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskType
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskType
  nameWithType: TransferCompletedForLoadProcessTask.TaskType
- uid: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskType*
  name: TaskType
  href: api/ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.html#ALE_ETLBox_Logging_TransferCompletedForLoadProcessTask_TaskType_
  commentId: Overload:ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskType
  isSpec: "True"
  fullName: ALE.ETLBox.Logging.TransferCompletedForLoadProcessTask.TaskType
  nameWithType: TransferCompletedForLoadProcessTask.TaskType
- uid: ALE.ETLBox.OdbcConnectionString
  name: OdbcConnectionString
  href: api/ALE.ETLBox.OdbcConnectionString.html
  commentId: T:ALE.ETLBox.OdbcConnectionString
  fullName: ALE.ETLBox.OdbcConnectionString
  nameWithType: OdbcConnectionString
- uid: ALE.ETLBox.OdbcConnectionString.#ctor
  name: OdbcConnectionString()
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString__ctor
  commentId: M:ALE.ETLBox.OdbcConnectionString.#ctor
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionString()
  nameWithType: OdbcConnectionString.OdbcConnectionString()
- uid: ALE.ETLBox.OdbcConnectionString.#ctor(System.String)
  name: OdbcConnectionString(String)
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString__ctor_System_String_
  commentId: M:ALE.ETLBox.OdbcConnectionString.#ctor(System.String)
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionString(System.String)
  nameWithType: OdbcConnectionString.OdbcConnectionString(String)
- uid: ALE.ETLBox.OdbcConnectionString.#ctor*
  name: OdbcConnectionString
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString__ctor_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionString
  nameWithType: OdbcConnectionString.OdbcConnectionString
- uid: ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  name: OdbcConnectionStringBuilder
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_OdbcConnectionStringBuilder
  commentId: P:ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  nameWithType: OdbcConnectionString.OdbcConnectionStringBuilder
- uid: ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder*
  name: OdbcConnectionStringBuilder
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_OdbcConnectionStringBuilder_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  isSpec: "True"
  fullName: ALE.ETLBox.OdbcConnectionString.OdbcConnectionStringBuilder
  nameWithType: OdbcConnectionString.OdbcConnectionStringBuilder
- uid: ALE.ETLBox.OdbcConnectionString.op_Implicit(System.String)~ALE.ETLBox.OdbcConnectionString
  name: Implicit(String to OdbcConnectionString)
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_op_Implicit_System_String__ALE_ETLBox_OdbcConnectionString
  commentId: M:ALE.ETLBox.OdbcConnectionString.op_Implicit(System.String)~ALE.ETLBox.OdbcConnectionString
  name.vb: Widening(String to OdbcConnectionString)
  fullName: ALE.ETLBox.OdbcConnectionString.Implicit(System.String to ALE.ETLBox.OdbcConnectionString)
  fullName.vb: ALE.ETLBox.OdbcConnectionString.Widening(System.String to ALE.ETLBox.OdbcConnectionString)
  nameWithType: OdbcConnectionString.Implicit(String to OdbcConnectionString)
  nameWithType.vb: OdbcConnectionString.Widening(String to OdbcConnectionString)
- uid: ALE.ETLBox.OdbcConnectionString.op_Implicit*
  name: Implicit
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_op_Implicit_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.op_Implicit
  isSpec: "True"
  name.vb: Widening
  fullName: ALE.ETLBox.OdbcConnectionString.Implicit
  fullName.vb: ALE.ETLBox.OdbcConnectionString.Widening
  nameWithType: OdbcConnectionString.Implicit
  nameWithType.vb: OdbcConnectionString.Widening
- uid: ALE.ETLBox.OdbcConnectionString.ToString
  name: ToString()
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_ToString
  commentId: M:ALE.ETLBox.OdbcConnectionString.ToString
  fullName: ALE.ETLBox.OdbcConnectionString.ToString()
  nameWithType: OdbcConnectionString.ToString()
- uid: ALE.ETLBox.OdbcConnectionString.ToString*
  name: ToString
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_ToString_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.ToString
  isSpec: "True"
  fullName: ALE.ETLBox.OdbcConnectionString.ToString
  nameWithType: OdbcConnectionString.ToString
- uid: ALE.ETLBox.OdbcConnectionString.Value
  name: Value
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_Value
  commentId: P:ALE.ETLBox.OdbcConnectionString.Value
  fullName: ALE.ETLBox.OdbcConnectionString.Value
  nameWithType: OdbcConnectionString.Value
- uid: ALE.ETLBox.OdbcConnectionString.Value*
  name: Value
  href: api/ALE.ETLBox.OdbcConnectionString.html#ALE_ETLBox_OdbcConnectionString_Value_
  commentId: Overload:ALE.ETLBox.OdbcConnectionString.Value
  isSpec: "True"
  fullName: ALE.ETLBox.OdbcConnectionString.Value
  nameWithType: OdbcConnectionString.Value
- uid: ALE.ETLBox.ProcedureDefinition
  name: ProcedureDefinition
  href: api/ALE.ETLBox.ProcedureDefinition.html
  commentId: T:ALE.ETLBox.ProcedureDefinition
  fullName: ALE.ETLBox.ProcedureDefinition
  nameWithType: ProcedureDefinition
- uid: ALE.ETLBox.ProcedureDefinition.#ctor
  name: ProcedureDefinition()
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition__ctor
  commentId: M:ALE.ETLBox.ProcedureDefinition.#ctor
  fullName: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition()
  nameWithType: ProcedureDefinition.ProcedureDefinition()
- uid: ALE.ETLBox.ProcedureDefinition.#ctor(System.String,System.String)
  name: ProcedureDefinition(String, String)
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ProcedureDefinition.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition(System.String, System.String)
  nameWithType: ProcedureDefinition.ProcedureDefinition(String, String)
- uid: ALE.ETLBox.ProcedureDefinition.#ctor(System.String,System.String,System.Collections.Generic.List{ALE.ETLBox.ProcedureParameter})
  name: ProcedureDefinition(String, String, List<ProcedureParameter>)
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition__ctor_System_String_System_String_System_Collections_Generic_List_ALE_ETLBox_ProcedureParameter__
  commentId: M:ALE.ETLBox.ProcedureDefinition.#ctor(System.String,System.String,System.Collections.Generic.List{ALE.ETLBox.ProcedureParameter})
  name.vb: ProcedureDefinition(String, String, List(Of ProcedureParameter))
  fullName: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition(System.String, System.String, System.Collections.Generic.List<ALE.ETLBox.ProcedureParameter>)
  fullName.vb: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition(System.String, System.String, System.Collections.Generic.List(Of ALE.ETLBox.ProcedureParameter))
  nameWithType: ProcedureDefinition.ProcedureDefinition(String, String, List<ProcedureParameter>)
  nameWithType.vb: ProcedureDefinition.ProcedureDefinition(String, String, List(Of ProcedureParameter))
- uid: ALE.ETLBox.ProcedureDefinition.#ctor*
  name: ProcedureDefinition
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition__ctor_
  commentId: Overload:ALE.ETLBox.ProcedureDefinition.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureDefinition.ProcedureDefinition
  nameWithType: ProcedureDefinition.ProcedureDefinition
- uid: ALE.ETLBox.ProcedureDefinition.Definition
  name: Definition
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Definition
  commentId: P:ALE.ETLBox.ProcedureDefinition.Definition
  fullName: ALE.ETLBox.ProcedureDefinition.Definition
  nameWithType: ProcedureDefinition.Definition
- uid: ALE.ETLBox.ProcedureDefinition.Definition*
  name: Definition
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Definition_
  commentId: Overload:ALE.ETLBox.ProcedureDefinition.Definition
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureDefinition.Definition
  nameWithType: ProcedureDefinition.Definition
- uid: ALE.ETLBox.ProcedureDefinition.Name
  name: Name
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Name
  commentId: P:ALE.ETLBox.ProcedureDefinition.Name
  fullName: ALE.ETLBox.ProcedureDefinition.Name
  nameWithType: ProcedureDefinition.Name
- uid: ALE.ETLBox.ProcedureDefinition.Name*
  name: Name
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Name_
  commentId: Overload:ALE.ETLBox.ProcedureDefinition.Name
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureDefinition.Name
  nameWithType: ProcedureDefinition.Name
- uid: ALE.ETLBox.ProcedureDefinition.Parameter
  name: Parameter
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Parameter
  commentId: P:ALE.ETLBox.ProcedureDefinition.Parameter
  fullName: ALE.ETLBox.ProcedureDefinition.Parameter
  nameWithType: ProcedureDefinition.Parameter
- uid: ALE.ETLBox.ProcedureDefinition.Parameter*
  name: Parameter
  href: api/ALE.ETLBox.ProcedureDefinition.html#ALE_ETLBox_ProcedureDefinition_Parameter_
  commentId: Overload:ALE.ETLBox.ProcedureDefinition.Parameter
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureDefinition.Parameter
  nameWithType: ProcedureDefinition.Parameter
- uid: ALE.ETLBox.ProcedureParameter
  name: ProcedureParameter
  href: api/ALE.ETLBox.ProcedureParameter.html
  commentId: T:ALE.ETLBox.ProcedureParameter
  fullName: ALE.ETLBox.ProcedureParameter
  nameWithType: ProcedureParameter
- uid: ALE.ETLBox.ProcedureParameter.#ctor
  name: ProcedureParameter()
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter__ctor
  commentId: M:ALE.ETLBox.ProcedureParameter.#ctor
  fullName: ALE.ETLBox.ProcedureParameter.ProcedureParameter()
  nameWithType: ProcedureParameter.ProcedureParameter()
- uid: ALE.ETLBox.ProcedureParameter.#ctor(System.String,System.String)
  name: ProcedureParameter(String, String)
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.ProcedureParameter.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.ProcedureParameter.ProcedureParameter(System.String, System.String)
  nameWithType: ProcedureParameter.ProcedureParameter(String, String)
- uid: ALE.ETLBox.ProcedureParameter.#ctor(System.String,System.String,System.String)
  name: ProcedureParameter(String, String, String)
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter__ctor_System_String_System_String_System_String_
  commentId: M:ALE.ETLBox.ProcedureParameter.#ctor(System.String,System.String,System.String)
  fullName: ALE.ETLBox.ProcedureParameter.ProcedureParameter(System.String, System.String, System.String)
  nameWithType: ProcedureParameter.ProcedureParameter(String, String, String)
- uid: ALE.ETLBox.ProcedureParameter.#ctor*
  name: ProcedureParameter
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter__ctor_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.ProcedureParameter
  nameWithType: ProcedureParameter.ProcedureParameter
- uid: ALE.ETLBox.ProcedureParameter.DataType
  name: DataType
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_DataType
  commentId: P:ALE.ETLBox.ProcedureParameter.DataType
  fullName: ALE.ETLBox.ProcedureParameter.DataType
  nameWithType: ProcedureParameter.DataType
- uid: ALE.ETLBox.ProcedureParameter.DataType*
  name: DataType
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_DataType_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.DataType
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.DataType
  nameWithType: ProcedureParameter.DataType
- uid: ALE.ETLBox.ProcedureParameter.DefaultValue
  name: DefaultValue
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_DefaultValue
  commentId: P:ALE.ETLBox.ProcedureParameter.DefaultValue
  fullName: ALE.ETLBox.ProcedureParameter.DefaultValue
  nameWithType: ProcedureParameter.DefaultValue
- uid: ALE.ETLBox.ProcedureParameter.DefaultValue*
  name: DefaultValue
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_DefaultValue_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.DefaultValue
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.DefaultValue
  nameWithType: ProcedureParameter.DefaultValue
- uid: ALE.ETLBox.ProcedureParameter.HasDefaultValue
  name: HasDefaultValue
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_HasDefaultValue
  commentId: P:ALE.ETLBox.ProcedureParameter.HasDefaultValue
  fullName: ALE.ETLBox.ProcedureParameter.HasDefaultValue
  nameWithType: ProcedureParameter.HasDefaultValue
- uid: ALE.ETLBox.ProcedureParameter.HasDefaultValue*
  name: HasDefaultValue
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_HasDefaultValue_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.HasDefaultValue
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.HasDefaultValue
  nameWithType: ProcedureParameter.HasDefaultValue
- uid: ALE.ETLBox.ProcedureParameter.Name
  name: Name
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Name
  commentId: P:ALE.ETLBox.ProcedureParameter.Name
  fullName: ALE.ETLBox.ProcedureParameter.Name
  nameWithType: ProcedureParameter.Name
- uid: ALE.ETLBox.ProcedureParameter.Name*
  name: Name
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Name_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.Name
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.Name
  nameWithType: ProcedureParameter.Name
- uid: ALE.ETLBox.ProcedureParameter.Out
  name: Out
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Out
  commentId: P:ALE.ETLBox.ProcedureParameter.Out
  fullName: ALE.ETLBox.ProcedureParameter.Out
  nameWithType: ProcedureParameter.Out
- uid: ALE.ETLBox.ProcedureParameter.Out*
  name: Out
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Out_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.Out
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.Out
  nameWithType: ProcedureParameter.Out
- uid: ALE.ETLBox.ProcedureParameter.ReadOnly
  name: ReadOnly
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_ReadOnly
  commentId: P:ALE.ETLBox.ProcedureParameter.ReadOnly
  fullName: ALE.ETLBox.ProcedureParameter.ReadOnly
  nameWithType: ProcedureParameter.ReadOnly
- uid: ALE.ETLBox.ProcedureParameter.ReadOnly*
  name: ReadOnly
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_ReadOnly_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.ReadOnly
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.ReadOnly
  nameWithType: ProcedureParameter.ReadOnly
- uid: ALE.ETLBox.ProcedureParameter.Sql
  name: Sql
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Sql
  commentId: P:ALE.ETLBox.ProcedureParameter.Sql
  fullName: ALE.ETLBox.ProcedureParameter.Sql
  nameWithType: ProcedureParameter.Sql
- uid: ALE.ETLBox.ProcedureParameter.Sql*
  name: Sql
  href: api/ALE.ETLBox.ProcedureParameter.html#ALE_ETLBox_ProcedureParameter_Sql_
  commentId: Overload:ALE.ETLBox.ProcedureParameter.Sql
  isSpec: "True"
  fullName: ALE.ETLBox.ProcedureParameter.Sql
  nameWithType: ProcedureParameter.Sql
- uid: ALE.ETLBox.QueryParameter
  name: QueryParameter
  href: api/ALE.ETLBox.QueryParameter.html
  commentId: T:ALE.ETLBox.QueryParameter
  fullName: ALE.ETLBox.QueryParameter
  nameWithType: QueryParameter
- uid: ALE.ETLBox.QueryParameter.#ctor(System.String,System.String,System.Object)
  name: QueryParameter(String, String, Object)
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter__ctor_System_String_System_String_System_Object_
  commentId: M:ALE.ETLBox.QueryParameter.#ctor(System.String,System.String,System.Object)
  fullName: ALE.ETLBox.QueryParameter.QueryParameter(System.String, System.String, System.Object)
  nameWithType: QueryParameter.QueryParameter(String, String, Object)
- uid: ALE.ETLBox.QueryParameter.#ctor*
  name: QueryParameter
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter__ctor_
  commentId: Overload:ALE.ETLBox.QueryParameter.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.QueryParameter
  nameWithType: QueryParameter.QueryParameter
- uid: ALE.ETLBox.QueryParameter.DBType
  name: DBType
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_DBType
  commentId: P:ALE.ETLBox.QueryParameter.DBType
  fullName: ALE.ETLBox.QueryParameter.DBType
  nameWithType: QueryParameter.DBType
- uid: ALE.ETLBox.QueryParameter.DBType*
  name: DBType
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_DBType_
  commentId: Overload:ALE.ETLBox.QueryParameter.DBType
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.DBType
  nameWithType: QueryParameter.DBType
- uid: ALE.ETLBox.QueryParameter.Name
  name: Name
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Name
  commentId: P:ALE.ETLBox.QueryParameter.Name
  fullName: ALE.ETLBox.QueryParameter.Name
  nameWithType: QueryParameter.Name
- uid: ALE.ETLBox.QueryParameter.Name*
  name: Name
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Name_
  commentId: Overload:ALE.ETLBox.QueryParameter.Name
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.Name
  nameWithType: QueryParameter.Name
- uid: ALE.ETLBox.QueryParameter.Type
  name: Type
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Type
  commentId: P:ALE.ETLBox.QueryParameter.Type
  fullName: ALE.ETLBox.QueryParameter.Type
  nameWithType: QueryParameter.Type
- uid: ALE.ETLBox.QueryParameter.Type*
  name: Type
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Type_
  commentId: Overload:ALE.ETLBox.QueryParameter.Type
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.Type
  nameWithType: QueryParameter.Type
- uid: ALE.ETLBox.QueryParameter.Value
  name: Value
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Value
  commentId: P:ALE.ETLBox.QueryParameter.Value
  fullName: ALE.ETLBox.QueryParameter.Value
  nameWithType: QueryParameter.Value
- uid: ALE.ETLBox.QueryParameter.Value*
  name: Value
  href: api/ALE.ETLBox.QueryParameter.html#ALE_ETLBox_QueryParameter_Value_
  commentId: Overload:ALE.ETLBox.QueryParameter.Value
  isSpec: "True"
  fullName: ALE.ETLBox.QueryParameter.Value
  nameWithType: QueryParameter.Value
- uid: ALE.ETLBox.TableColumn
  name: TableColumn
  href: api/ALE.ETLBox.TableColumn.html
  commentId: T:ALE.ETLBox.TableColumn
  fullName: ALE.ETLBox.TableColumn
  nameWithType: TableColumn
- uid: ALE.ETLBox.TableColumn.#ctor
  name: TableColumn()
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor
  commentId: M:ALE.ETLBox.TableColumn.#ctor
  fullName: ALE.ETLBox.TableColumn.TableColumn()
  nameWithType: TableColumn.TableColumn()
- uid: ALE.ETLBox.TableColumn.#ctor(System.String,System.String)
  name: TableColumn(String, String)
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_System_String_System_String_
  commentId: M:ALE.ETLBox.TableColumn.#ctor(System.String,System.String)
  fullName: ALE.ETLBox.TableColumn.TableColumn(System.String, System.String)
  nameWithType: TableColumn.TableColumn(String, String)
- uid: ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean)
  name: TableColumn(String, String, Boolean)
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_System_String_System_String_System_Boolean_
  commentId: M:ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean)
  fullName: ALE.ETLBox.TableColumn.TableColumn(System.String, System.String, System.Boolean)
  nameWithType: TableColumn.TableColumn(String, String, Boolean)
- uid: ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean,System.Boolean)
  name: TableColumn(String, String, Boolean, Boolean)
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_System_String_System_String_System_Boolean_System_Boolean_
  commentId: M:ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean,System.Boolean)
  fullName: ALE.ETLBox.TableColumn.TableColumn(System.String, System.String, System.Boolean, System.Boolean)
  nameWithType: TableColumn.TableColumn(String, String, Boolean, Boolean)
- uid: ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  name: TableColumn(String, String, Boolean, Boolean, Boolean)
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_System_String_System_String_System_Boolean_System_Boolean_System_Boolean_
  commentId: M:ALE.ETLBox.TableColumn.#ctor(System.String,System.String,System.Boolean,System.Boolean,System.Boolean)
  fullName: ALE.ETLBox.TableColumn.TableColumn(System.String, System.String, System.Boolean, System.Boolean, System.Boolean)
  nameWithType: TableColumn.TableColumn(String, String, Boolean, Boolean, Boolean)
- uid: ALE.ETLBox.TableColumn.#ctor*
  name: TableColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn__ctor_
  commentId: Overload:ALE.ETLBox.TableColumn.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.TableColumn
  nameWithType: TableColumn.TableColumn
- uid: ALE.ETLBox.TableColumn.AllowNulls
  name: AllowNulls
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_AllowNulls
  commentId: P:ALE.ETLBox.TableColumn.AllowNulls
  fullName: ALE.ETLBox.TableColumn.AllowNulls
  nameWithType: TableColumn.AllowNulls
- uid: ALE.ETLBox.TableColumn.AllowNulls*
  name: AllowNulls
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_AllowNulls_
  commentId: Overload:ALE.ETLBox.TableColumn.AllowNulls
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.AllowNulls
  nameWithType: TableColumn.AllowNulls
- uid: ALE.ETLBox.TableColumn.Collation
  name: Collation
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_Collation
  commentId: P:ALE.ETLBox.TableColumn.Collation
  fullName: ALE.ETLBox.TableColumn.Collation
  nameWithType: TableColumn.Collation
- uid: ALE.ETLBox.TableColumn.Collation*
  name: Collation
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_Collation_
  commentId: Overload:ALE.ETLBox.TableColumn.Collation
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.Collation
  nameWithType: TableColumn.Collation
- uid: ALE.ETLBox.TableColumn.ComputedColumn
  name: ComputedColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_ComputedColumn
  commentId: P:ALE.ETLBox.TableColumn.ComputedColumn
  fullName: ALE.ETLBox.TableColumn.ComputedColumn
  nameWithType: TableColumn.ComputedColumn
- uid: ALE.ETLBox.TableColumn.ComputedColumn*
  name: ComputedColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_ComputedColumn_
  commentId: Overload:ALE.ETLBox.TableColumn.ComputedColumn
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.ComputedColumn
  nameWithType: TableColumn.ComputedColumn
- uid: ALE.ETLBox.TableColumn.DataSetColumn
  name: DataSetColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DataSetColumn
  commentId: P:ALE.ETLBox.TableColumn.DataSetColumn
  fullName: ALE.ETLBox.TableColumn.DataSetColumn
  nameWithType: TableColumn.DataSetColumn
- uid: ALE.ETLBox.TableColumn.DataSetColumn*
  name: DataSetColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DataSetColumn_
  commentId: Overload:ALE.ETLBox.TableColumn.DataSetColumn
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.DataSetColumn
  nameWithType: TableColumn.DataSetColumn
- uid: ALE.ETLBox.TableColumn.DataType
  name: DataType
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DataType
  commentId: P:ALE.ETLBox.TableColumn.DataType
  fullName: ALE.ETLBox.TableColumn.DataType
  nameWithType: TableColumn.DataType
- uid: ALE.ETLBox.TableColumn.DataType*
  name: DataType
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DataType_
  commentId: Overload:ALE.ETLBox.TableColumn.DataType
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.DataType
  nameWithType: TableColumn.DataType
- uid: ALE.ETLBox.TableColumn.DefaultConstraintName
  name: DefaultConstraintName
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DefaultConstraintName
  commentId: P:ALE.ETLBox.TableColumn.DefaultConstraintName
  fullName: ALE.ETLBox.TableColumn.DefaultConstraintName
  nameWithType: TableColumn.DefaultConstraintName
- uid: ALE.ETLBox.TableColumn.DefaultConstraintName*
  name: DefaultConstraintName
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DefaultConstraintName_
  commentId: Overload:ALE.ETLBox.TableColumn.DefaultConstraintName
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.DefaultConstraintName
  nameWithType: TableColumn.DefaultConstraintName
- uid: ALE.ETLBox.TableColumn.DefaultValue
  name: DefaultValue
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DefaultValue
  commentId: P:ALE.ETLBox.TableColumn.DefaultValue
  fullName: ALE.ETLBox.TableColumn.DefaultValue
  nameWithType: TableColumn.DefaultValue
- uid: ALE.ETLBox.TableColumn.DefaultValue*
  name: DefaultValue
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_DefaultValue_
  commentId: Overload:ALE.ETLBox.TableColumn.DefaultValue
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.DefaultValue
  nameWithType: TableColumn.DefaultValue
- uid: ALE.ETLBox.TableColumn.IdentityIncrement
  name: IdentityIncrement
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IdentityIncrement
  commentId: P:ALE.ETLBox.TableColumn.IdentityIncrement
  fullName: ALE.ETLBox.TableColumn.IdentityIncrement
  nameWithType: TableColumn.IdentityIncrement
- uid: ALE.ETLBox.TableColumn.IdentityIncrement*
  name: IdentityIncrement
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IdentityIncrement_
  commentId: Overload:ALE.ETLBox.TableColumn.IdentityIncrement
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.IdentityIncrement
  nameWithType: TableColumn.IdentityIncrement
- uid: ALE.ETLBox.TableColumn.IdentitySeed
  name: IdentitySeed
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IdentitySeed
  commentId: P:ALE.ETLBox.TableColumn.IdentitySeed
  fullName: ALE.ETLBox.TableColumn.IdentitySeed
  nameWithType: TableColumn.IdentitySeed
- uid: ALE.ETLBox.TableColumn.IdentitySeed*
  name: IdentitySeed
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IdentitySeed_
  commentId: Overload:ALE.ETLBox.TableColumn.IdentitySeed
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.IdentitySeed
  nameWithType: TableColumn.IdentitySeed
- uid: ALE.ETLBox.TableColumn.IsIdentity
  name: IsIdentity
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IsIdentity
  commentId: P:ALE.ETLBox.TableColumn.IsIdentity
  fullName: ALE.ETLBox.TableColumn.IsIdentity
  nameWithType: TableColumn.IsIdentity
- uid: ALE.ETLBox.TableColumn.IsIdentity*
  name: IsIdentity
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IsIdentity_
  commentId: Overload:ALE.ETLBox.TableColumn.IsIdentity
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.IsIdentity
  nameWithType: TableColumn.IsIdentity
- uid: ALE.ETLBox.TableColumn.IsPrimaryKey
  name: IsPrimaryKey
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IsPrimaryKey
  commentId: P:ALE.ETLBox.TableColumn.IsPrimaryKey
  fullName: ALE.ETLBox.TableColumn.IsPrimaryKey
  nameWithType: TableColumn.IsPrimaryKey
- uid: ALE.ETLBox.TableColumn.IsPrimaryKey*
  name: IsPrimaryKey
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_IsPrimaryKey_
  commentId: Overload:ALE.ETLBox.TableColumn.IsPrimaryKey
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.IsPrimaryKey
  nameWithType: TableColumn.IsPrimaryKey
- uid: ALE.ETLBox.TableColumn.Name
  name: Name
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_Name
  commentId: P:ALE.ETLBox.TableColumn.Name
  fullName: ALE.ETLBox.TableColumn.Name
  nameWithType: TableColumn.Name
- uid: ALE.ETLBox.TableColumn.Name*
  name: Name
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_Name_
  commentId: Overload:ALE.ETLBox.TableColumn.Name
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.Name
  nameWithType: TableColumn.Name
- uid: ALE.ETLBox.TableColumn.NETDataType
  name: NETDataType
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_NETDataType
  commentId: P:ALE.ETLBox.TableColumn.NETDataType
  fullName: ALE.ETLBox.TableColumn.NETDataType
  nameWithType: TableColumn.NETDataType
- uid: ALE.ETLBox.TableColumn.NETDataType*
  name: NETDataType
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_NETDataType_
  commentId: Overload:ALE.ETLBox.TableColumn.NETDataType
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.NETDataType
  nameWithType: TableColumn.NETDataType
- uid: ALE.ETLBox.TableColumn.SourceColumn
  name: SourceColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_SourceColumn
  commentId: P:ALE.ETLBox.TableColumn.SourceColumn
  fullName: ALE.ETLBox.TableColumn.SourceColumn
  nameWithType: TableColumn.SourceColumn
- uid: ALE.ETLBox.TableColumn.SourceColumn*
  name: SourceColumn
  href: api/ALE.ETLBox.TableColumn.html#ALE_ETLBox_TableColumn_SourceColumn_
  commentId: Overload:ALE.ETLBox.TableColumn.SourceColumn
  isSpec: "True"
  fullName: ALE.ETLBox.TableColumn.SourceColumn
  nameWithType: TableColumn.SourceColumn
- uid: ALE.ETLBox.TableData
  name: TableData
  href: api/ALE.ETLBox.TableData.html
  commentId: T:ALE.ETLBox.TableData
  fullName: ALE.ETLBox.TableData
  nameWithType: TableData
- uid: ALE.ETLBox.TableData.#ctor
  name: TableData()
  href: api/ALE.ETLBox.TableData.html#ALE_ETLBox_TableData__ctor
  commentId: M:ALE.ETLBox.TableData.#ctor
  fullName: ALE.ETLBox.TableData.TableData()
  nameWithType: TableData.TableData()
- uid: ALE.ETLBox.TableData.#ctor(ALE.ETLBox.TableDefinition)
  name: TableData(TableDefinition)
  href: api/ALE.ETLBox.TableData.html#ALE_ETLBox_TableData__ctor_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.TableData.#ctor(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.TableData.TableData(ALE.ETLBox.TableDefinition)
  nameWithType: TableData.TableData(TableDefinition)
- uid: ALE.ETLBox.TableData.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  name: TableData(TableDefinition, Int32)
  href: api/ALE.ETLBox.TableData.html#ALE_ETLBox_TableData__ctor_ALE_ETLBox_TableDefinition_System_Int32_
  commentId: M:ALE.ETLBox.TableData.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  fullName: ALE.ETLBox.TableData.TableData(ALE.ETLBox.TableDefinition, System.Int32)
  nameWithType: TableData.TableData(TableDefinition, Int32)
- uid: ALE.ETLBox.TableData.#ctor*
  name: TableData
  href: api/ALE.ETLBox.TableData.html#ALE_ETLBox_TableData__ctor_
  commentId: Overload:ALE.ETLBox.TableData.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.TableData.TableData
  nameWithType: TableData.TableData
- uid: ALE.ETLBox.TableData`1
  name: TableData<T>
  href: api/ALE.ETLBox.TableData-1.html
  commentId: T:ALE.ETLBox.TableData`1
  name.vb: TableData(Of T)
  fullName: ALE.ETLBox.TableData<T>
  fullName.vb: ALE.ETLBox.TableData(Of T)
  nameWithType: TableData<T>
  nameWithType.vb: TableData(Of T)
- uid: ALE.ETLBox.TableData`1.#ctor
  name: TableData()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1__ctor
  commentId: M:ALE.ETLBox.TableData`1.#ctor
  fullName: ALE.ETLBox.TableData<T>.TableData()
  fullName.vb: ALE.ETLBox.TableData(Of T).TableData()
  nameWithType: TableData<T>.TableData()
  nameWithType.vb: TableData(Of T).TableData()
- uid: ALE.ETLBox.TableData`1.#ctor(ALE.ETLBox.TableDefinition)
  name: TableData(TableDefinition)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1__ctor_ALE_ETLBox_TableDefinition_
  commentId: M:ALE.ETLBox.TableData`1.#ctor(ALE.ETLBox.TableDefinition)
  fullName: ALE.ETLBox.TableData<T>.TableData(ALE.ETLBox.TableDefinition)
  fullName.vb: ALE.ETLBox.TableData(Of T).TableData(ALE.ETLBox.TableDefinition)
  nameWithType: TableData<T>.TableData(TableDefinition)
  nameWithType.vb: TableData(Of T).TableData(TableDefinition)
- uid: ALE.ETLBox.TableData`1.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  name: TableData(TableDefinition, Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1__ctor_ALE_ETLBox_TableDefinition_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.#ctor(ALE.ETLBox.TableDefinition,System.Int32)
  fullName: ALE.ETLBox.TableData<T>.TableData(ALE.ETLBox.TableDefinition, System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).TableData(ALE.ETLBox.TableDefinition, System.Int32)
  nameWithType: TableData<T>.TableData(TableDefinition, Int32)
  nameWithType.vb: TableData(Of T).TableData(TableDefinition, Int32)
- uid: ALE.ETLBox.TableData`1.#ctor*
  name: TableData
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1__ctor_
  commentId: Overload:ALE.ETLBox.TableData`1.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.TableData
  fullName.vb: ALE.ETLBox.TableData(Of T).TableData
  nameWithType: TableData<T>.TableData
  nameWithType.vb: TableData(Of T).TableData
- uid: ALE.ETLBox.TableData`1.Close
  name: Close()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Close
  commentId: M:ALE.ETLBox.TableData`1.Close
  fullName: ALE.ETLBox.TableData<T>.Close()
  fullName.vb: ALE.ETLBox.TableData(Of T).Close()
  nameWithType: TableData<T>.Close()
  nameWithType.vb: TableData(Of T).Close()
- uid: ALE.ETLBox.TableData`1.Close*
  name: Close
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Close_
  commentId: Overload:ALE.ETLBox.TableData`1.Close
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Close
  fullName.vb: ALE.ETLBox.TableData(Of T).Close
  nameWithType: TableData<T>.Close
  nameWithType.vb: TableData(Of T).Close
- uid: ALE.ETLBox.TableData`1.ColumnMapping
  name: ColumnMapping
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_ColumnMapping
  commentId: P:ALE.ETLBox.TableData`1.ColumnMapping
  fullName: ALE.ETLBox.TableData<T>.ColumnMapping
  fullName.vb: ALE.ETLBox.TableData(Of T).ColumnMapping
  nameWithType: TableData<T>.ColumnMapping
  nameWithType.vb: TableData(Of T).ColumnMapping
- uid: ALE.ETLBox.TableData`1.ColumnMapping*
  name: ColumnMapping
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_ColumnMapping_
  commentId: Overload:ALE.ETLBox.TableData`1.ColumnMapping
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.ColumnMapping
  fullName.vb: ALE.ETLBox.TableData(Of T).ColumnMapping
  nameWithType: TableData<T>.ColumnMapping
  nameWithType.vb: TableData(Of T).ColumnMapping
- uid: ALE.ETLBox.TableData`1.CurrentRow
  name: CurrentRow
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_CurrentRow
  commentId: P:ALE.ETLBox.TableData`1.CurrentRow
  fullName: ALE.ETLBox.TableData<T>.CurrentRow
  fullName.vb: ALE.ETLBox.TableData(Of T).CurrentRow
  nameWithType: TableData<T>.CurrentRow
  nameWithType.vb: TableData(Of T).CurrentRow
- uid: ALE.ETLBox.TableData`1.CurrentRow*
  name: CurrentRow
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_CurrentRow_
  commentId: Overload:ALE.ETLBox.TableData`1.CurrentRow
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.CurrentRow
  fullName.vb: ALE.ETLBox.TableData(Of T).CurrentRow
  nameWithType: TableData<T>.CurrentRow
  nameWithType.vb: TableData(Of T).CurrentRow
- uid: ALE.ETLBox.TableData`1.Depth
  name: Depth
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Depth
  commentId: P:ALE.ETLBox.TableData`1.Depth
  fullName: ALE.ETLBox.TableData<T>.Depth
  fullName.vb: ALE.ETLBox.TableData(Of T).Depth
  nameWithType: TableData<T>.Depth
  nameWithType.vb: TableData(Of T).Depth
- uid: ALE.ETLBox.TableData`1.Depth*
  name: Depth
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Depth_
  commentId: Overload:ALE.ETLBox.TableData`1.Depth
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Depth
  fullName.vb: ALE.ETLBox.TableData(Of T).Depth
  nameWithType: TableData<T>.Depth
  nameWithType.vb: TableData(Of T).Depth
- uid: ALE.ETLBox.TableData`1.Dispose
  name: Dispose()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Dispose
  commentId: M:ALE.ETLBox.TableData`1.Dispose
  fullName: ALE.ETLBox.TableData<T>.Dispose()
  fullName.vb: ALE.ETLBox.TableData(Of T).Dispose()
  nameWithType: TableData<T>.Dispose()
  nameWithType.vb: TableData(Of T).Dispose()
- uid: ALE.ETLBox.TableData`1.Dispose(System.Boolean)
  name: Dispose(Boolean)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Dispose_System_Boolean_
  commentId: M:ALE.ETLBox.TableData`1.Dispose(System.Boolean)
  fullName: ALE.ETLBox.TableData<T>.Dispose(System.Boolean)
  fullName.vb: ALE.ETLBox.TableData(Of T).Dispose(System.Boolean)
  nameWithType: TableData<T>.Dispose(Boolean)
  nameWithType.vb: TableData(Of T).Dispose(Boolean)
- uid: ALE.ETLBox.TableData`1.Dispose*
  name: Dispose
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Dispose_
  commentId: Overload:ALE.ETLBox.TableData`1.Dispose
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Dispose
  fullName.vb: ALE.ETLBox.TableData(Of T).Dispose
  nameWithType: TableData<T>.Dispose
  nameWithType.vb: TableData(Of T).Dispose
- uid: ALE.ETLBox.TableData`1.EstimatedBatchSize
  name: EstimatedBatchSize
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_EstimatedBatchSize
  commentId: P:ALE.ETLBox.TableData`1.EstimatedBatchSize
  fullName: ALE.ETLBox.TableData<T>.EstimatedBatchSize
  fullName.vb: ALE.ETLBox.TableData(Of T).EstimatedBatchSize
  nameWithType: TableData<T>.EstimatedBatchSize
  nameWithType.vb: TableData(Of T).EstimatedBatchSize
- uid: ALE.ETLBox.TableData`1.EstimatedBatchSize*
  name: EstimatedBatchSize
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_EstimatedBatchSize_
  commentId: Overload:ALE.ETLBox.TableData`1.EstimatedBatchSize
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.EstimatedBatchSize
  fullName.vb: ALE.ETLBox.TableData(Of T).EstimatedBatchSize
  nameWithType: TableData<T>.EstimatedBatchSize
  nameWithType.vb: TableData(Of T).EstimatedBatchSize
- uid: ALE.ETLBox.TableData`1.FieldCount
  name: FieldCount
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_FieldCount
  commentId: P:ALE.ETLBox.TableData`1.FieldCount
  fullName: ALE.ETLBox.TableData<T>.FieldCount
  fullName.vb: ALE.ETLBox.TableData(Of T).FieldCount
  nameWithType: TableData<T>.FieldCount
  nameWithType.vb: TableData(Of T).FieldCount
- uid: ALE.ETLBox.TableData`1.FieldCount*
  name: FieldCount
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_FieldCount_
  commentId: Overload:ALE.ETLBox.TableData`1.FieldCount
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.FieldCount
  fullName.vb: ALE.ETLBox.TableData(Of T).FieldCount
  nameWithType: TableData<T>.FieldCount
  nameWithType.vb: TableData(Of T).FieldCount
- uid: ALE.ETLBox.TableData`1.GetBoolean(System.Int32)
  name: GetBoolean(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetBoolean_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetBoolean(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetBoolean(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetBoolean(System.Int32)
  nameWithType: TableData<T>.GetBoolean(Int32)
  nameWithType.vb: TableData(Of T).GetBoolean(Int32)
- uid: ALE.ETLBox.TableData`1.GetBoolean*
  name: GetBoolean
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetBoolean_
  commentId: Overload:ALE.ETLBox.TableData`1.GetBoolean
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetBoolean
  fullName.vb: ALE.ETLBox.TableData(Of T).GetBoolean
  nameWithType: TableData<T>.GetBoolean
  nameWithType.vb: TableData(Of T).GetBoolean
- uid: ALE.ETLBox.TableData`1.GetByte(System.Int32)
  name: GetByte(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetByte_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetByte(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetByte(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetByte(System.Int32)
  nameWithType: TableData<T>.GetByte(Int32)
  nameWithType.vb: TableData(Of T).GetByte(Int32)
- uid: ALE.ETLBox.TableData`1.GetByte*
  name: GetByte
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetByte_
  commentId: Overload:ALE.ETLBox.TableData`1.GetByte
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetByte
  fullName.vb: ALE.ETLBox.TableData(Of T).GetByte
  nameWithType: TableData<T>.GetByte
  nameWithType.vb: TableData(Of T).GetByte
- uid: ALE.ETLBox.TableData`1.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  name: GetBytes(Int32, Int64, Byte[], Int32, Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetBytes_System_Int32_System_Int64_System_Byte___System_Int32_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)
  name.vb: GetBytes(Int32, Int64, Byte(), Int32, Int32)
  fullName: ALE.ETLBox.TableData<T>.GetBytes(System.Int32, System.Int64, System.Byte[], System.Int32, System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetBytes(System.Int32, System.Int64, System.Byte(), System.Int32, System.Int32)
  nameWithType: TableData<T>.GetBytes(Int32, Int64, Byte[], Int32, Int32)
  nameWithType.vb: TableData(Of T).GetBytes(Int32, Int64, Byte(), Int32, Int32)
- uid: ALE.ETLBox.TableData`1.GetBytes*
  name: GetBytes
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetBytes_
  commentId: Overload:ALE.ETLBox.TableData`1.GetBytes
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetBytes
  fullName.vb: ALE.ETLBox.TableData(Of T).GetBytes
  nameWithType: TableData<T>.GetBytes
  nameWithType.vb: TableData(Of T).GetBytes
- uid: ALE.ETLBox.TableData`1.GetChar(System.Int32)
  name: GetChar(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetChar_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetChar(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetChar(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetChar(System.Int32)
  nameWithType: TableData<T>.GetChar(Int32)
  nameWithType.vb: TableData(Of T).GetChar(Int32)
- uid: ALE.ETLBox.TableData`1.GetChar*
  name: GetChar
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetChar_
  commentId: Overload:ALE.ETLBox.TableData`1.GetChar
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetChar
  fullName.vb: ALE.ETLBox.TableData(Of T).GetChar
  nameWithType: TableData<T>.GetChar
  nameWithType.vb: TableData(Of T).GetChar
- uid: ALE.ETLBox.TableData`1.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  name: GetChars(Int32, Int64, Char[], Int32, Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetChars_System_Int32_System_Int64_System_Char___System_Int32_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)
  name.vb: GetChars(Int32, Int64, Char(), Int32, Int32)
  fullName: ALE.ETLBox.TableData<T>.GetChars(System.Int32, System.Int64, System.Char[], System.Int32, System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetChars(System.Int32, System.Int64, System.Char(), System.Int32, System.Int32)
  nameWithType: TableData<T>.GetChars(Int32, Int64, Char[], Int32, Int32)
  nameWithType.vb: TableData(Of T).GetChars(Int32, Int64, Char(), Int32, Int32)
- uid: ALE.ETLBox.TableData`1.GetChars*
  name: GetChars
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetChars_
  commentId: Overload:ALE.ETLBox.TableData`1.GetChars
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetChars
  fullName.vb: ALE.ETLBox.TableData(Of T).GetChars
  nameWithType: TableData<T>.GetChars
  nameWithType.vb: TableData(Of T).GetChars
- uid: ALE.ETLBox.TableData`1.GetData(System.Int32)
  name: GetData(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetData_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetData(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetData(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetData(System.Int32)
  nameWithType: TableData<T>.GetData(Int32)
  nameWithType.vb: TableData(Of T).GetData(Int32)
- uid: ALE.ETLBox.TableData`1.GetData*
  name: GetData
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetData_
  commentId: Overload:ALE.ETLBox.TableData`1.GetData
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetData
  fullName.vb: ALE.ETLBox.TableData(Of T).GetData
  nameWithType: TableData<T>.GetData
  nameWithType.vb: TableData(Of T).GetData
- uid: ALE.ETLBox.TableData`1.GetDataTypeName(System.Int32)
  name: GetDataTypeName(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDataTypeName_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetDataTypeName(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetDataTypeName(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDataTypeName(System.Int32)
  nameWithType: TableData<T>.GetDataTypeName(Int32)
  nameWithType.vb: TableData(Of T).GetDataTypeName(Int32)
- uid: ALE.ETLBox.TableData`1.GetDataTypeName*
  name: GetDataTypeName
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDataTypeName_
  commentId: Overload:ALE.ETLBox.TableData`1.GetDataTypeName
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetDataTypeName
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDataTypeName
  nameWithType: TableData<T>.GetDataTypeName
  nameWithType.vb: TableData(Of T).GetDataTypeName
- uid: ALE.ETLBox.TableData`1.GetDateTime(System.Int32)
  name: GetDateTime(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDateTime_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetDateTime(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetDateTime(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDateTime(System.Int32)
  nameWithType: TableData<T>.GetDateTime(Int32)
  nameWithType.vb: TableData(Of T).GetDateTime(Int32)
- uid: ALE.ETLBox.TableData`1.GetDateTime*
  name: GetDateTime
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDateTime_
  commentId: Overload:ALE.ETLBox.TableData`1.GetDateTime
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetDateTime
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDateTime
  nameWithType: TableData<T>.GetDateTime
  nameWithType.vb: TableData(Of T).GetDateTime
- uid: ALE.ETLBox.TableData`1.GetDecimal(System.Int32)
  name: GetDecimal(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDecimal_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetDecimal(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetDecimal(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDecimal(System.Int32)
  nameWithType: TableData<T>.GetDecimal(Int32)
  nameWithType.vb: TableData(Of T).GetDecimal(Int32)
- uid: ALE.ETLBox.TableData`1.GetDecimal*
  name: GetDecimal
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDecimal_
  commentId: Overload:ALE.ETLBox.TableData`1.GetDecimal
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetDecimal
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDecimal
  nameWithType: TableData<T>.GetDecimal
  nameWithType.vb: TableData(Of T).GetDecimal
- uid: ALE.ETLBox.TableData`1.GetDouble(System.Int32)
  name: GetDouble(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDouble_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetDouble(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetDouble(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDouble(System.Int32)
  nameWithType: TableData<T>.GetDouble(Int32)
  nameWithType.vb: TableData(Of T).GetDouble(Int32)
- uid: ALE.ETLBox.TableData`1.GetDouble*
  name: GetDouble
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetDouble_
  commentId: Overload:ALE.ETLBox.TableData`1.GetDouble
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetDouble
  fullName.vb: ALE.ETLBox.TableData(Of T).GetDouble
  nameWithType: TableData<T>.GetDouble
  nameWithType.vb: TableData(Of T).GetDouble
- uid: ALE.ETLBox.TableData`1.GetFieldType(System.Int32)
  name: GetFieldType(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetFieldType_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetFieldType(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetFieldType(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetFieldType(System.Int32)
  nameWithType: TableData<T>.GetFieldType(Int32)
  nameWithType.vb: TableData(Of T).GetFieldType(Int32)
- uid: ALE.ETLBox.TableData`1.GetFieldType*
  name: GetFieldType
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetFieldType_
  commentId: Overload:ALE.ETLBox.TableData`1.GetFieldType
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetFieldType
  fullName.vb: ALE.ETLBox.TableData(Of T).GetFieldType
  nameWithType: TableData<T>.GetFieldType
  nameWithType.vb: TableData(Of T).GetFieldType
- uid: ALE.ETLBox.TableData`1.GetFloat(System.Int32)
  name: GetFloat(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetFloat_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetFloat(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetFloat(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetFloat(System.Int32)
  nameWithType: TableData<T>.GetFloat(Int32)
  nameWithType.vb: TableData(Of T).GetFloat(Int32)
- uid: ALE.ETLBox.TableData`1.GetFloat*
  name: GetFloat
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetFloat_
  commentId: Overload:ALE.ETLBox.TableData`1.GetFloat
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetFloat
  fullName.vb: ALE.ETLBox.TableData(Of T).GetFloat
  nameWithType: TableData<T>.GetFloat
  nameWithType.vb: TableData(Of T).GetFloat
- uid: ALE.ETLBox.TableData`1.GetGuid(System.Int32)
  name: GetGuid(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetGuid_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetGuid(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetGuid(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetGuid(System.Int32)
  nameWithType: TableData<T>.GetGuid(Int32)
  nameWithType.vb: TableData(Of T).GetGuid(Int32)
- uid: ALE.ETLBox.TableData`1.GetGuid*
  name: GetGuid
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetGuid_
  commentId: Overload:ALE.ETLBox.TableData`1.GetGuid
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetGuid
  fullName.vb: ALE.ETLBox.TableData(Of T).GetGuid
  nameWithType: TableData<T>.GetGuid
  nameWithType.vb: TableData(Of T).GetGuid
- uid: ALE.ETLBox.TableData`1.GetInt16(System.Int32)
  name: GetInt16(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt16_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetInt16(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetInt16(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt16(System.Int32)
  nameWithType: TableData<T>.GetInt16(Int32)
  nameWithType.vb: TableData(Of T).GetInt16(Int32)
- uid: ALE.ETLBox.TableData`1.GetInt16*
  name: GetInt16
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt16_
  commentId: Overload:ALE.ETLBox.TableData`1.GetInt16
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetInt16
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt16
  nameWithType: TableData<T>.GetInt16
  nameWithType.vb: TableData(Of T).GetInt16
- uid: ALE.ETLBox.TableData`1.GetInt32(System.Int32)
  name: GetInt32(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt32_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetInt32(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetInt32(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt32(System.Int32)
  nameWithType: TableData<T>.GetInt32(Int32)
  nameWithType.vb: TableData(Of T).GetInt32(Int32)
- uid: ALE.ETLBox.TableData`1.GetInt32*
  name: GetInt32
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt32_
  commentId: Overload:ALE.ETLBox.TableData`1.GetInt32
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetInt32
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt32
  nameWithType: TableData<T>.GetInt32
  nameWithType.vb: TableData(Of T).GetInt32
- uid: ALE.ETLBox.TableData`1.GetInt64(System.Int32)
  name: GetInt64(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt64_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetInt64(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetInt64(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt64(System.Int32)
  nameWithType: TableData<T>.GetInt64(Int32)
  nameWithType.vb: TableData(Of T).GetInt64(Int32)
- uid: ALE.ETLBox.TableData`1.GetInt64*
  name: GetInt64
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetInt64_
  commentId: Overload:ALE.ETLBox.TableData`1.GetInt64
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetInt64
  fullName.vb: ALE.ETLBox.TableData(Of T).GetInt64
  nameWithType: TableData<T>.GetInt64
  nameWithType.vb: TableData(Of T).GetInt64
- uid: ALE.ETLBox.TableData`1.GetName(System.Int32)
  name: GetName(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetName_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetName(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetName(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetName(System.Int32)
  nameWithType: TableData<T>.GetName(Int32)
  nameWithType.vb: TableData(Of T).GetName(Int32)
- uid: ALE.ETLBox.TableData`1.GetName*
  name: GetName
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetName_
  commentId: Overload:ALE.ETLBox.TableData`1.GetName
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetName
  fullName.vb: ALE.ETLBox.TableData(Of T).GetName
  nameWithType: TableData<T>.GetName
  nameWithType.vb: TableData(Of T).GetName
- uid: ALE.ETLBox.TableData`1.GetOrdinal(System.String)
  name: GetOrdinal(String)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetOrdinal_System_String_
  commentId: M:ALE.ETLBox.TableData`1.GetOrdinal(System.String)
  fullName: ALE.ETLBox.TableData<T>.GetOrdinal(System.String)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetOrdinal(System.String)
  nameWithType: TableData<T>.GetOrdinal(String)
  nameWithType.vb: TableData(Of T).GetOrdinal(String)
- uid: ALE.ETLBox.TableData`1.GetOrdinal*
  name: GetOrdinal
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetOrdinal_
  commentId: Overload:ALE.ETLBox.TableData`1.GetOrdinal
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetOrdinal
  fullName.vb: ALE.ETLBox.TableData(Of T).GetOrdinal
  nameWithType: TableData<T>.GetOrdinal
  nameWithType.vb: TableData(Of T).GetOrdinal
- uid: ALE.ETLBox.TableData`1.GetSchemaTable
  name: GetSchemaTable()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetSchemaTable
  commentId: M:ALE.ETLBox.TableData`1.GetSchemaTable
  fullName: ALE.ETLBox.TableData<T>.GetSchemaTable()
  fullName.vb: ALE.ETLBox.TableData(Of T).GetSchemaTable()
  nameWithType: TableData<T>.GetSchemaTable()
  nameWithType.vb: TableData(Of T).GetSchemaTable()
- uid: ALE.ETLBox.TableData`1.GetSchemaTable*
  name: GetSchemaTable
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetSchemaTable_
  commentId: Overload:ALE.ETLBox.TableData`1.GetSchemaTable
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetSchemaTable
  fullName.vb: ALE.ETLBox.TableData(Of T).GetSchemaTable
  nameWithType: TableData<T>.GetSchemaTable
  nameWithType.vb: TableData(Of T).GetSchemaTable
- uid: ALE.ETLBox.TableData`1.GetString(System.Int32)
  name: GetString(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetString_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetString(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetString(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetString(System.Int32)
  nameWithType: TableData<T>.GetString(Int32)
  nameWithType.vb: TableData(Of T).GetString(Int32)
- uid: ALE.ETLBox.TableData`1.GetString*
  name: GetString
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetString_
  commentId: Overload:ALE.ETLBox.TableData`1.GetString
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetString
  fullName.vb: ALE.ETLBox.TableData(Of T).GetString
  nameWithType: TableData<T>.GetString
  nameWithType.vb: TableData(Of T).GetString
- uid: ALE.ETLBox.TableData`1.GetValue(System.Int32)
  name: GetValue(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetValue_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.GetValue(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.GetValue(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).GetValue(System.Int32)
  nameWithType: TableData<T>.GetValue(Int32)
  nameWithType.vb: TableData(Of T).GetValue(Int32)
- uid: ALE.ETLBox.TableData`1.GetValue*
  name: GetValue
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetValue_
  commentId: Overload:ALE.ETLBox.TableData`1.GetValue
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetValue
  fullName.vb: ALE.ETLBox.TableData(Of T).GetValue
  nameWithType: TableData<T>.GetValue
  nameWithType.vb: TableData(Of T).GetValue
- uid: ALE.ETLBox.TableData`1.GetValues(System.Object[])
  name: GetValues(Object[])
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetValues_System_Object___
  commentId: M:ALE.ETLBox.TableData`1.GetValues(System.Object[])
  name.vb: GetValues(Object())
  fullName: ALE.ETLBox.TableData<T>.GetValues(System.Object[])
  fullName.vb: ALE.ETLBox.TableData(Of T).GetValues(System.Object())
  nameWithType: TableData<T>.GetValues(Object[])
  nameWithType.vb: TableData(Of T).GetValues(Object())
- uid: ALE.ETLBox.TableData`1.GetValues*
  name: GetValues
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_GetValues_
  commentId: Overload:ALE.ETLBox.TableData`1.GetValues
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.GetValues
  fullName.vb: ALE.ETLBox.TableData(Of T).GetValues
  nameWithType: TableData<T>.GetValues
  nameWithType.vb: TableData(Of T).GetValues
- uid: ALE.ETLBox.TableData`1.HasDefinition
  name: HasDefinition
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_HasDefinition
  commentId: P:ALE.ETLBox.TableData`1.HasDefinition
  fullName: ALE.ETLBox.TableData<T>.HasDefinition
  fullName.vb: ALE.ETLBox.TableData(Of T).HasDefinition
  nameWithType: TableData<T>.HasDefinition
  nameWithType.vb: TableData(Of T).HasDefinition
- uid: ALE.ETLBox.TableData`1.HasDefinition*
  name: HasDefinition
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_HasDefinition_
  commentId: Overload:ALE.ETLBox.TableData`1.HasDefinition
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.HasDefinition
  fullName.vb: ALE.ETLBox.TableData(Of T).HasDefinition
  nameWithType: TableData<T>.HasDefinition
  nameWithType.vb: TableData(Of T).HasDefinition
- uid: ALE.ETLBox.TableData`1.HasIdentityColumn
  name: HasIdentityColumn
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_HasIdentityColumn
  commentId: P:ALE.ETLBox.TableData`1.HasIdentityColumn
  fullName: ALE.ETLBox.TableData<T>.HasIdentityColumn
  fullName.vb: ALE.ETLBox.TableData(Of T).HasIdentityColumn
  nameWithType: TableData<T>.HasIdentityColumn
  nameWithType.vb: TableData(Of T).HasIdentityColumn
- uid: ALE.ETLBox.TableData`1.HasIdentityColumn*
  name: HasIdentityColumn
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_HasIdentityColumn_
  commentId: Overload:ALE.ETLBox.TableData`1.HasIdentityColumn
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.HasIdentityColumn
  fullName.vb: ALE.ETLBox.TableData(Of T).HasIdentityColumn
  nameWithType: TableData<T>.HasIdentityColumn
  nameWithType.vb: TableData(Of T).HasIdentityColumn
- uid: ALE.ETLBox.TableData`1.IsClosed
  name: IsClosed
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_IsClosed
  commentId: P:ALE.ETLBox.TableData`1.IsClosed
  fullName: ALE.ETLBox.TableData<T>.IsClosed
  fullName.vb: ALE.ETLBox.TableData(Of T).IsClosed
  nameWithType: TableData<T>.IsClosed
  nameWithType.vb: TableData(Of T).IsClosed
- uid: ALE.ETLBox.TableData`1.IsClosed*
  name: IsClosed
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_IsClosed_
  commentId: Overload:ALE.ETLBox.TableData`1.IsClosed
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.IsClosed
  fullName.vb: ALE.ETLBox.TableData(Of T).IsClosed
  nameWithType: TableData<T>.IsClosed
  nameWithType.vb: TableData(Of T).IsClosed
- uid: ALE.ETLBox.TableData`1.IsDBNull(System.Int32)
  name: IsDBNull(Int32)
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_IsDBNull_System_Int32_
  commentId: M:ALE.ETLBox.TableData`1.IsDBNull(System.Int32)
  fullName: ALE.ETLBox.TableData<T>.IsDBNull(System.Int32)
  fullName.vb: ALE.ETLBox.TableData(Of T).IsDBNull(System.Int32)
  nameWithType: TableData<T>.IsDBNull(Int32)
  nameWithType.vb: TableData(Of T).IsDBNull(Int32)
- uid: ALE.ETLBox.TableData`1.IsDBNull*
  name: IsDBNull
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_IsDBNull_
  commentId: Overload:ALE.ETLBox.TableData`1.IsDBNull
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.IsDBNull
  fullName.vb: ALE.ETLBox.TableData(Of T).IsDBNull
  nameWithType: TableData<T>.IsDBNull
  nameWithType.vb: TableData(Of T).IsDBNull
- uid: ALE.ETLBox.TableData`1.Item(System.Int32)
  name: Item[Int32]
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Item_System_Int32_
  commentId: P:ALE.ETLBox.TableData`1.Item(System.Int32)
  name.vb: Item(Int32)
  fullName: ALE.ETLBox.TableData<T>.Item[System.Int32]
  fullName.vb: ALE.ETLBox.TableData(Of T).Item(System.Int32)
  nameWithType: TableData<T>.Item[Int32]
  nameWithType.vb: TableData(Of T).Item(Int32)
- uid: ALE.ETLBox.TableData`1.Item(System.String)
  name: Item[String]
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Item_System_String_
  commentId: P:ALE.ETLBox.TableData`1.Item(System.String)
  name.vb: Item(String)
  fullName: ALE.ETLBox.TableData<T>.Item[System.String]
  fullName.vb: ALE.ETLBox.TableData(Of T).Item(System.String)
  nameWithType: TableData<T>.Item[String]
  nameWithType.vb: TableData(Of T).Item(String)
- uid: ALE.ETLBox.TableData`1.Item*
  name: Item
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Item_
  commentId: Overload:ALE.ETLBox.TableData`1.Item
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Item
  fullName.vb: ALE.ETLBox.TableData(Of T).Item
  nameWithType: TableData<T>.Item
  nameWithType.vb: TableData(Of T).Item
- uid: ALE.ETLBox.TableData`1.NewRow
  name: NewRow()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_NewRow
  commentId: M:ALE.ETLBox.TableData`1.NewRow
  fullName: ALE.ETLBox.TableData<T>.NewRow()
  fullName.vb: ALE.ETLBox.TableData(Of T).NewRow()
  nameWithType: TableData<T>.NewRow()
  nameWithType.vb: TableData(Of T).NewRow()
- uid: ALE.ETLBox.TableData`1.NewRow*
  name: NewRow
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_NewRow_
  commentId: Overload:ALE.ETLBox.TableData`1.NewRow
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.NewRow
  fullName.vb: ALE.ETLBox.TableData(Of T).NewRow
  nameWithType: TableData<T>.NewRow
  nameWithType.vb: TableData(Of T).NewRow
- uid: ALE.ETLBox.TableData`1.NextResult
  name: NextResult()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_NextResult
  commentId: M:ALE.ETLBox.TableData`1.NextResult
  fullName: ALE.ETLBox.TableData<T>.NextResult()
  fullName.vb: ALE.ETLBox.TableData(Of T).NextResult()
  nameWithType: TableData<T>.NextResult()
  nameWithType.vb: TableData(Of T).NextResult()
- uid: ALE.ETLBox.TableData`1.NextResult*
  name: NextResult
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_NextResult_
  commentId: Overload:ALE.ETLBox.TableData`1.NextResult
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.NextResult
  fullName.vb: ALE.ETLBox.TableData(Of T).NextResult
  nameWithType: TableData<T>.NextResult
  nameWithType.vb: TableData(Of T).NextResult
- uid: ALE.ETLBox.TableData`1.Read
  name: Read()
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Read
  commentId: M:ALE.ETLBox.TableData`1.Read
  fullName: ALE.ETLBox.TableData<T>.Read()
  fullName.vb: ALE.ETLBox.TableData(Of T).Read()
  nameWithType: TableData<T>.Read()
  nameWithType.vb: TableData(Of T).Read()
- uid: ALE.ETLBox.TableData`1.Read*
  name: Read
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Read_
  commentId: Overload:ALE.ETLBox.TableData`1.Read
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Read
  fullName.vb: ALE.ETLBox.TableData(Of T).Read
  nameWithType: TableData<T>.Read
  nameWithType.vb: TableData(Of T).Read
- uid: ALE.ETLBox.TableData`1.RecordsAffected
  name: RecordsAffected
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_RecordsAffected
  commentId: P:ALE.ETLBox.TableData`1.RecordsAffected
  fullName: ALE.ETLBox.TableData<T>.RecordsAffected
  fullName.vb: ALE.ETLBox.TableData(Of T).RecordsAffected
  nameWithType: TableData<T>.RecordsAffected
  nameWithType.vb: TableData(Of T).RecordsAffected
- uid: ALE.ETLBox.TableData`1.RecordsAffected*
  name: RecordsAffected
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_RecordsAffected_
  commentId: Overload:ALE.ETLBox.TableData`1.RecordsAffected
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.RecordsAffected
  fullName.vb: ALE.ETLBox.TableData(Of T).RecordsAffected
  nameWithType: TableData<T>.RecordsAffected
  nameWithType.vb: TableData(Of T).RecordsAffected
- uid: ALE.ETLBox.TableData`1.Rows
  name: Rows
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Rows
  commentId: P:ALE.ETLBox.TableData`1.Rows
  fullName: ALE.ETLBox.TableData<T>.Rows
  fullName.vb: ALE.ETLBox.TableData(Of T).Rows
  nameWithType: TableData<T>.Rows
  nameWithType.vb: TableData(Of T).Rows
- uid: ALE.ETLBox.TableData`1.Rows*
  name: Rows
  href: api/ALE.ETLBox.TableData-1.html#ALE_ETLBox_TableData_1_Rows_
  commentId: Overload:ALE.ETLBox.TableData`1.Rows
  isSpec: "True"
  fullName: ALE.ETLBox.TableData<T>.Rows
  fullName.vb: ALE.ETLBox.TableData(Of T).Rows
  nameWithType: TableData<T>.Rows
  nameWithType.vb: TableData(Of T).Rows
- uid: ALE.ETLBox.TableDefinition
  name: TableDefinition
  href: api/ALE.ETLBox.TableDefinition.html
  commentId: T:ALE.ETLBox.TableDefinition
  fullName: ALE.ETLBox.TableDefinition
  nameWithType: TableDefinition
- uid: ALE.ETLBox.TableDefinition.#ctor
  name: TableDefinition()
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition__ctor
  commentId: M:ALE.ETLBox.TableDefinition.#ctor
  fullName: ALE.ETLBox.TableDefinition.TableDefinition()
  nameWithType: TableDefinition.TableDefinition()
- uid: ALE.ETLBox.TableDefinition.#ctor(System.String)
  name: TableDefinition(String)
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition__ctor_System_String_
  commentId: M:ALE.ETLBox.TableDefinition.#ctor(System.String)
  fullName: ALE.ETLBox.TableDefinition.TableDefinition(System.String)
  nameWithType: TableDefinition.TableDefinition(String)
- uid: ALE.ETLBox.TableDefinition.#ctor(System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name: TableDefinition(String, List<TableColumn>)
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition__ctor_System_String_System_Collections_Generic_List_ALE_ETLBox_TableColumn__
  commentId: M:ALE.ETLBox.TableDefinition.#ctor(System.String,System.Collections.Generic.List{ALE.ETLBox.TableColumn})
  name.vb: TableDefinition(String, List(Of TableColumn))
  fullName: ALE.ETLBox.TableDefinition.TableDefinition(System.String, System.Collections.Generic.List<ALE.ETLBox.TableColumn>)
  fullName.vb: ALE.ETLBox.TableDefinition.TableDefinition(System.String, System.Collections.Generic.List(Of ALE.ETLBox.TableColumn))
  nameWithType: TableDefinition.TableDefinition(String, List<TableColumn>)
  nameWithType.vb: TableDefinition.TableDefinition(String, List(Of TableColumn))
- uid: ALE.ETLBox.TableDefinition.#ctor*
  name: TableDefinition
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition__ctor_
  commentId: Overload:ALE.ETLBox.TableDefinition.#ctor
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.TableDefinition
  nameWithType: TableDefinition.TableDefinition
- uid: ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  name: AllColumnsWithoutIdentity
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_AllColumnsWithoutIdentity
  commentId: P:ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  fullName: ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  nameWithType: TableDefinition.AllColumnsWithoutIdentity
- uid: ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity*
  name: AllColumnsWithoutIdentity
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_AllColumnsWithoutIdentity_
  commentId: Overload:ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.AllColumnsWithoutIdentity
  nameWithType: TableDefinition.AllColumnsWithoutIdentity
- uid: ALE.ETLBox.TableDefinition.Columns
  name: Columns
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_Columns
  commentId: P:ALE.ETLBox.TableDefinition.Columns
  fullName: ALE.ETLBox.TableDefinition.Columns
  nameWithType: TableDefinition.Columns
- uid: ALE.ETLBox.TableDefinition.Columns*
  name: Columns
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_Columns_
  commentId: Overload:ALE.ETLBox.TableDefinition.Columns
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.Columns
  nameWithType: TableDefinition.Columns
- uid: ALE.ETLBox.TableDefinition.CreateTable
  name: CreateTable()
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_CreateTable
  commentId: M:ALE.ETLBox.TableDefinition.CreateTable
  fullName: ALE.ETLBox.TableDefinition.CreateTable()
  nameWithType: TableDefinition.CreateTable()
- uid: ALE.ETLBox.TableDefinition.CreateTable*
  name: CreateTable
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_CreateTable_
  commentId: Overload:ALE.ETLBox.TableDefinition.CreateTable
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.CreateTable
  nameWithType: TableDefinition.CreateTable
- uid: ALE.ETLBox.TableDefinition.IDColumnIndex
  name: IDColumnIndex
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_IDColumnIndex
  commentId: P:ALE.ETLBox.TableDefinition.IDColumnIndex
  fullName: ALE.ETLBox.TableDefinition.IDColumnIndex
  nameWithType: TableDefinition.IDColumnIndex
- uid: ALE.ETLBox.TableDefinition.IDColumnIndex*
  name: IDColumnIndex
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_IDColumnIndex_
  commentId: Overload:ALE.ETLBox.TableDefinition.IDColumnIndex
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.IDColumnIndex
  nameWithType: TableDefinition.IDColumnIndex
- uid: ALE.ETLBox.TableDefinition.Name
  name: Name
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_Name
  commentId: P:ALE.ETLBox.TableDefinition.Name
  fullName: ALE.ETLBox.TableDefinition.Name
  nameWithType: TableDefinition.Name
- uid: ALE.ETLBox.TableDefinition.Name*
  name: Name
  href: api/ALE.ETLBox.TableDefinition.html#ALE_ETLBox_TableDefinition_Name_
  commentId: Overload:ALE.ETLBox.TableDefinition.Name
  isSpec: "True"
  fullName: ALE.ETLBox.TableDefinition.Name
  nameWithType: TableDefinition.Name
